/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as AppRouteImport } from './routes/app/route'
import { Route as IndexImport } from './routes/index'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as AppIndexImport } from './routes/app/index'
import { Route as AuthLoginRouteImport } from './routes/auth/login/route'
import { Route as AppToolsRouteImport } from './routes/app/tools/route'
import { Route as AppProductsRouteImport } from './routes/app/products/route'
import { Route as AppFaqRouteImport } from './routes/app/faq/route'
import { Route as AppExternalLinksRouteImport } from './routes/app/external-links/route'
import { Route as AppEnterprisesRouteImport } from './routes/app/enterprises/route'
import { Route as AppDashboardRouteImport } from './routes/app/dashboard/route'
import { Route as AppBusinessesRmaRouteImport } from './routes/app/businesses-rma/route'
import { Route as AppToolsIndexImport } from './routes/app/tools/index'
import { Route as AppToolsVvaRouteImport } from './routes/app/tools/vva/route'
import { Route as AppToolsSchedulerRouteImport } from './routes/app/tools/scheduler/route'
import { Route as AppToolsRepresentativesTurnoverRouteImport } from './routes/app/tools/representatives-turnover/route'
import { Route as AppToolsRepresentativesMapRouteImport } from './routes/app/tools/representatives-map/route'
import { Route as AppToolsProductShelvesRouteImport } from './routes/app/tools/product-shelves/route'
import { Route as AppToolsProductInventoryRouteImport } from './routes/app/tools/product-inventory/route'
import { Route as AppToolsProductFiltersRouteImport } from './routes/app/tools/product-filters/route'
import { Route as AppToolsPredefinedTextsRouteImport } from './routes/app/tools/predefined-texts/route'
import { Route as AppToolsPredefinedMessagesRouteImport } from './routes/app/tools/predefined-messages/route'
import { Route as AppToolsNewsRouteImport } from './routes/app/tools/news/route'
import { Route as AppToolsMenuRouteImport } from './routes/app/tools/menu/route'
import { Route as AppToolsMailsRouteImport } from './routes/app/tools/mails/route'
import { Route as AppToolsGlobalTurnoverRouteImport } from './routes/app/tools/global-turnover/route'
import { Route as AppToolsFormationsRouteImport } from './routes/app/tools/formations/route'
import { Route as AppToolsExternalLinksRouteImport } from './routes/app/tools/external-links/route'
import { Route as AppToolsEmailsRouteImport } from './routes/app/tools/emails/route'
import { Route as AppToolsDepartmentsRouteImport } from './routes/app/tools/departments/route'
import { Route as AppToolsDdnsRouteImport } from './routes/app/tools/ddns/route'
import { Route as AppToolsCreditRouteImport } from './routes/app/tools/credit/route'
import { Route as AppProductsProductIdRouteImport } from './routes/app/products_.$productId/route'
import { Route as AppProductsSerialNumbersRouteImport } from './routes/app/products/serial-numbers/route'
import { Route as AppFaqCreateRouteImport } from './routes/app/faq/create/route'
import { Route as AppExternalLinksExternalLinkIdRouteImport } from './routes/app/external-links_.$externalLinkId/route'
import { Route as AppEnterprisesEnterpriseIdRouteImport } from './routes/app/enterprises_.$enterpriseId/route'
import { Route as AppDashboardDeleteCollectiveTasksRouteImport } from './routes/app/dashboard/delete-collective-tasks/route'
import { Route as AppDashboardCreateProgressiveInfoRouteImport } from './routes/app/dashboard/create-progressive-info/route'
import { Route as AppDashboardCreatePersonalTaskRouteImport } from './routes/app/dashboard/create-personal-task/route'
import { Route as AppDashboardCreateCollectiveTaskRouteImport } from './routes/app/dashboard/create-collective-task/route'
import { Route as AppBusinessesRmaSearchByProductsRouteImport } from './routes/app/businesses-rma/search-by-products/route'
import { Route as AppBusinessesRmaRepresentativeTurnoverRouteImport } from './routes/app/businesses-rma/representative-turnover/route'
import { Route as AppProductsProductIdIndexImport } from './routes/app/products_.$productId/index'
import { Route as AppToolsVvaCreateRouteImport } from './routes/app/tools/vva/create/route'
import { Route as AppToolsSchedulerCreateRouteImport } from './routes/app/tools/scheduler/create/route'
import { Route as AppToolsProductShelvesCreateRouteImport } from './routes/app/tools/product-shelves/create/route'
import { Route as AppToolsProductInventoryValidateQuantitiesRouteImport } from './routes/app/tools/product-inventory/validate-quantities/route'
import { Route as AppToolsProductFiltersCreateRouteImport } from './routes/app/tools/product-filters/create/route'
import { Route as AppToolsPredefinedTextsCreateRouteImport } from './routes/app/tools/predefined-texts/create/route'
import { Route as AppToolsPredefinedMessagesCreateRouteImport } from './routes/app/tools/predefined-messages/create/route'
import { Route as AppToolsNewsCreateRouteImport } from './routes/app/tools/news/create/route'
import { Route as AppToolsMenuCreateProductRouteImport } from './routes/app/tools/menu/create-product/route'
import { Route as AppToolsMenuCreateEnterpriseRouteImport } from './routes/app/tools/menu/create-enterprise/route'
import { Route as AppToolsMailsCreateRouteImport } from './routes/app/tools/mails/create/route'
import { Route as AppToolsFormationsCreateRouteImport } from './routes/app/tools/formations/create/route'
import { Route as AppToolsExternalLinksCreateRouteImport } from './routes/app/tools/external-links/create/route'
import { Route as AppToolsEmailsSendRouteImport } from './routes/app/tools/emails_.send/route'
import { Route as AppToolsEmailsEmailIdRouteImport } from './routes/app/tools/emails/$emailId/route'
import { Route as AppToolsDepartmentsCreateRouteImport } from './routes/app/tools/departments/create/route'
import { Route as AppToolsDdnsCreateRouteImport } from './routes/app/tools/ddns/create/route'
import { Route as AppToolsCreditShowRouteImport } from './routes/app/tools/credit/show/route'
import { Route as AppToolsCreditDetailsRouteImport } from './routes/app/tools/credit/details/route'
import { Route as AppProductsProductIdManageRouteImport } from './routes/app/products_.$productId/manage/route'
import { Route as AppProductsProductIdInformationsRouteImport } from './routes/app/products_.$productId/informations/route'
import { Route as AppProductsSerialNumbersCreateRouteImport } from './routes/app/products/serial-numbers/create/route'
import { Route as AppFaqUpdateFaqIdRouteImport } from './routes/app/faq/update.$faqId/route'
import { Route as AppFaqSendByEmailFaqIdRouteImport } from './routes/app/faq/send-by-email.$faqId/route'
import { Route as AppFaqGedFaqIdRouteImport } from './routes/app/faq/ged.$faqId/route'
import { Route as AppFaqDeleteFaqIdRouteImport } from './routes/app/faq/delete.$faqId/route'
import { Route as AppFaqArchiveFaqIdRouteImport } from './routes/app/faq/archive.$faqId/route'
import { Route as AppEnterprisesEnterpriseIdUpdateRepresentativeRouteImport } from './routes/app/enterprises_.$enterpriseId/update-representative/route'
import { Route as AppEnterprisesEnterpriseIdUpdateCategoryRouteImport } from './routes/app/enterprises_.$enterpriseId/update-category/route'
import { Route as AppEnterprisesEnterpriseIdUpdateAccountabilityRouteImport } from './routes/app/enterprises_.$enterpriseId/update-accountability/route'
import { Route as AppEnterprisesEnterpriseIdUpdateRouteImport } from './routes/app/enterprises_.$enterpriseId/update/route'
import { Route as AppEnterprisesEnterpriseIdImportGedFilesRouteImport } from './routes/app/enterprises_.$enterpriseId/import-ged-files/route'
import { Route as AppEnterprisesEnterpriseIdImportContactsRouteImport } from './routes/app/enterprises_.$enterpriseId/import-contacts/route'
import { Route as AppEnterprisesEnterpriseIdDeleteRouteImport } from './routes/app/enterprises_.$enterpriseId/delete/route'
import { Route as AppEnterprisesEnterpriseIdCreateLifesheetCommentRouteImport } from './routes/app/enterprises_.$enterpriseId/create-lifesheet-comment/route'
import { Route as AppEnterprisesEnterpriseIdCreateGedDirectoryRouteImport } from './routes/app/enterprises_.$enterpriseId/create-ged-directory/route'
import { Route as AppEnterprisesEnterpriseIdCreateContactRouteImport } from './routes/app/enterprises_.$enterpriseId/create-contact/route'
import { Route as AppEnterprisesEnterpriseIdAddressBookRouteImport } from './routes/app/enterprises_.$enterpriseId/address-book/route'
import { Route as AppEnterprisesUpdateContactContactIdRouteImport } from './routes/app/enterprises/update-contact.$contactId/route'
import { Route as AppEnterprisesUpdateContactPasswordContactIdRouteImport } from './routes/app/enterprises/update-contact-password.$contactId/route'
import { Route as AppEnterprisesSendEmailToContactContactIdRouteImport } from './routes/app/enterprises/send-email-to-contact.$contactId/route'
import { Route as AppEnterprisesDeleteContactContactIdRouteImport } from './routes/app/enterprises/delete-contact.$contactId/route'
import { Route as AppEnterprisesCreateEnterpriseRmaEnterpriseIdRouteImport } from './routes/app/enterprises/create-enterprise-rma.$enterpriseId/route'
import { Route as AppEnterprisesCreateContactEnterpriseIdRouteImport } from './routes/app/enterprises/create-contact.$enterpriseId/route'
import { Route as AppEnterprisesCreateContactTravelVoucherContactIdRouteImport } from './routes/app/enterprises/create-contact-travel-voucher.$contactId/route'
import { Route as AppEnterprisesCreateContactBusinessContactIdRouteImport } from './routes/app/enterprises/create-contact-business.$contactId/route'
import { Route as AppDashboardValidatePersonalTaskTaskIdRouteImport } from './routes/app/dashboard/validate-personal-task.$taskId/route'
import { Route as AppDashboardUpdateProgressiveInfoProgressiveInfoIdRouteImport } from './routes/app/dashboard/update-progressive-info.$progressiveInfoId/route'
import { Route as AppDashboardUpdatePersonalTaskDeadlineTaskIdRouteImport } from './routes/app/dashboard/update-personal-task-deadline.$taskId/route'
import { Route as AppDashboardTransferTaskTaskIdRouteImport } from './routes/app/dashboard/transfer-task.$taskId/route'
import { Route as AppDashboardTaskEmailTaskIdRouteImport } from './routes/app/dashboard/task-email.$taskId/route'
import { Route as AppDashboardTaskCommentsTaskIdRouteImport } from './routes/app/dashboard/task-comments.$taskId/route'
import { Route as AppDashboardTakeCollectiveTaskTaskIdRouteImport } from './routes/app/dashboard/take-collective-task.$taskId/route'
import { Route as AppDashboardSchedulerEventDetailsEventIdRouteImport } from './routes/app/dashboard/scheduler-event-details.$eventId/route'
import { Route as AppDashboardPersonalTaskDetailsTaskIdRouteImport } from './routes/app/dashboard/personal-task-details.$taskId/route'
import { Route as AppDashboardOtherPersonalTasksProfileIdRouteImport } from './routes/app/dashboard/other-personal-tasks.$profileId/route'
import { Route as AppDashboardLinkPersonalTaskTaskIdRouteImport } from './routes/app/dashboard/link-personal-task.$taskId/route'
import { Route as AppDashboardDeleteProgressiveInfoProgressiveInfoIdRouteImport } from './routes/app/dashboard/delete-progressive-info.$progressiveInfoId/route'
import { Route as AppDashboardDeleteCollectiveTaskTaskIdRouteImport } from './routes/app/dashboard/delete-collective-task.$taskId/route'
import { Route as AppDashboardArchivePersonalTaskTaskIdRouteImport } from './routes/app/dashboard/archive-personal-task.$taskId/route'
import { Route as AppBusinessesRmaRmaRmaIdRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/route'
import { Route as AppBusinessesRmaRmaRmaIdIndexImport } from './routes/app/businesses-rma_/rma.$rmaId/index'
import { Route as AppBusinessesRmaBusinessBusinessIdIndexImport } from './routes/app/businesses-rma_/business.$businessId/index'
import { Route as AppToolsVvaDeleteVvaIdRouteImport } from './routes/app/tools/vva/delete.$vvaId/route'
import { Route as AppToolsSchedulerDetailsRdvIdRouteImport } from './routes/app/tools/scheduler/details.$rdvId/route'
import { Route as AppToolsProductShelvesDeleteProductShelfIdRouteImport } from './routes/app/tools/product-shelves/delete.$productShelfId/route'
import { Route as AppToolsProductInventoryUpdateStockIdRouteImport } from './routes/app/tools/product-inventory/update.$stockId/route'
import { Route as AppToolsProductFiltersUpdateProductFilterIdRouteImport } from './routes/app/tools/product-filters/update.$productFilterId/route'
import { Route as AppToolsProductFiltersDeleteProductFilterIdRouteImport } from './routes/app/tools/product-filters/delete.$productFilterId/route'
import { Route as AppToolsPredefinedTextsUpdatePredefinedTextIdRouteImport } from './routes/app/tools/predefined-texts/update.$predefinedTextId/route'
import { Route as AppToolsPredefinedTextsDeletePredefinedTextIdRouteImport } from './routes/app/tools/predefined-texts/delete.$predefinedTextId/route'
import { Route as AppToolsPredefinedMessagesUpdatePredefinedMessageIdRouteImport } from './routes/app/tools/predefined-messages/update.$predefinedMessageId/route'
import { Route as AppToolsPredefinedMessagesDeletePredefinedMessageIdRouteImport } from './routes/app/tools/predefined-messages/delete.$predefinedMessageId/route'
import { Route as AppToolsNewsUpdateNewsIdRouteImport } from './routes/app/tools/news/update.$newsId/route'
import { Route as AppToolsNewsDeleteNewsIdRouteImport } from './routes/app/tools/news/delete.$newsId/route'
import { Route as AppToolsMenuCreateEnterpriseContactsRouteImport } from './routes/app/tools/menu/create-enterprise/contacts/route'
import { Route as AppToolsMenuCreateEnterpriseAddContactRouteImport } from './routes/app/tools/menu/create-enterprise/add-contact/route'
import { Route as AppToolsMailsUpdateMailIdRouteImport } from './routes/app/tools/mails/update.$mailId/route'
import { Route as AppToolsMailsShowMailIdRouteImport } from './routes/app/tools/mails/show.$mailId/route'
import { Route as AppToolsMailsDeleteMailIdRouteImport } from './routes/app/tools/mails/delete.$mailId/route'
import { Route as AppToolsFormationsUpdateFormationIdRouteImport } from './routes/app/tools/formations/update.$formationId/route'
import { Route as AppToolsFormationsSubscribersFormationDetailIdRouteImport } from './routes/app/tools/formations/subscribers.$formationDetailId/route'
import { Route as AppToolsFormationsDeleteFormationIdRouteImport } from './routes/app/tools/formations/delete.$formationId/route'
import { Route as AppToolsFormationsCreateDetailsRouteImport } from './routes/app/tools/formations/create/details/route'
import { Route as AppToolsFormationsCreateAddDetailRouteImport } from './routes/app/tools/formations/create/add-detail/route'
import { Route as AppToolsExternalLinksUpdateExternalLinkIdRouteImport } from './routes/app/tools/external-links/update.$externalLinkId/route'
import { Route as AppToolsExternalLinksDeleteExternalLinkIdRouteImport } from './routes/app/tools/external-links/delete.$externalLinkId/route'
import { Route as AppToolsExternalLinksArchiveExternalLinkIdRouteImport } from './routes/app/tools/external-links/archive.$externalLinkId/route'
import { Route as AppToolsEmailsSendPredefinedMessagesRouteImport } from './routes/app/tools/emails_.send/predefined-messages/route'
import { Route as AppToolsEmailsEmailIdReplyRouteImport } from './routes/app/tools/emails/$emailId/reply/route'
import { Route as AppToolsDepartmentsUpdateDepartmentIdRouteImport } from './routes/app/tools/departments/update.$departmentId/route'
import { Route as AppToolsDepartmentsDeleteDepartmentIdRouteImport } from './routes/app/tools/departments/delete.$departmentId/route'
import { Route as AppToolsDdnsDeleteDdnsIdRouteImport } from './routes/app/tools/ddns/delete.$ddnsId/route'
import { Route as AppProductsProductIdManageCreateVersionRouteImport } from './routes/app/products_.$productId/manage/create-version/route'
import { Route as AppProductsProductIdManageCreateStockRouteImport } from './routes/app/products_.$productId/manage/create-stock/route'
import { Route as AppProductsProductIdManageAddSpecificationRouteImport } from './routes/app/products_.$productId/manage/add-specification/route'
import { Route as AppProductsProductIdManageAddAssociatedProductRouteImport } from './routes/app/products_.$productId/manage/add-associated-product/route'
import { Route as AppProductsProductIdInformationsRenameGedObjectRouteImport } from './routes/app/products_.$productId/informations/rename-ged-object/route'
import { Route as AppProductsProductIdInformationsImportGedFilesRouteImport } from './routes/app/products_.$productId/informations/import-ged-files/route'
import { Route as AppProductsProductIdInformationsDeleteGedObjectRouteImport } from './routes/app/products_.$productId/informations/delete-ged-object/route'
import { Route as AppProductsProductIdInformationsCreateLifesheetCommentRouteImport } from './routes/app/products_.$productId/informations/create-lifesheet-comment/route'
import { Route as AppProductsProductIdInformationsCreateGedDirectoryRouteImport } from './routes/app/products_.$productId/informations/create-ged-directory/route'
import { Route as AppProductsSerialNumbersDeleteSerialNumberIdRouteImport } from './routes/app/products/serial-numbers/delete.$serialNumberId/route'
import { Route as AppProductsSerialNumbersCreateRmaSerialNumberIdRouteImport } from './routes/app/products/serial-numbers/create-rma.$serialNumberId/route'
import { Route as AppFaqGedFaqIdImportFilesRouteImport } from './routes/app/faq/ged.$faqId/import-files/route'
import { Route as AppFaqGedFaqIdCreateDirectoryRouteImport } from './routes/app/faq/ged.$faqId/create-directory/route'
import { Route as AppEnterprisesEnterpriseIdUpdateContactContactIdRouteImport } from './routes/app/enterprises_.$enterpriseId/update-contact.$contactId/route'
import { Route as AppEnterprisesEnterpriseIdUpdateContactPasswordContactIdRouteImport } from './routes/app/enterprises_.$enterpriseId/update-contact-password.$contactId/route'
import { Route as AppEnterprisesEnterpriseIdTaskEmailTaskIdRouteImport } from './routes/app/enterprises_.$enterpriseId/task-email.$taskId/route'
import { Route as AppEnterprisesEnterpriseIdSendEmailToContactContactIdRouteImport } from './routes/app/enterprises_.$enterpriseId/send-email-to-contact.$contactId/route'
import { Route as AppEnterprisesEnterpriseIdRenameGedObjectObjectRelativePathRouteImport } from './routes/app/enterprises_.$enterpriseId/rename-ged-object.$objectRelativePath/route'
import { Route as AppEnterprisesEnterpriseIdDeleteGedObjectObjectRelativePathRouteImport } from './routes/app/enterprises_.$enterpriseId/delete-ged-object.$objectRelativePath/route'
import { Route as AppEnterprisesEnterpriseIdDeleteContactContactIdRouteImport } from './routes/app/enterprises_.$enterpriseId/delete-contact.$contactId/route'
import { Route as AppEnterprisesEnterpriseIdCreateContactBusinessContactIdRouteImport } from './routes/app/enterprises_.$enterpriseId/create-contact-business.$contactId/route'
import { Route as AppEnterprisesEnterpriseIdAddressBookCreateRouteImport } from './routes/app/enterprises_.$enterpriseId/address-book/create/route'
import { Route as AppDashboardTaskEmailTaskIdReplyRouteImport } from './routes/app/dashboard/task-email.$taskId/reply/route'
import { Route as AppBusinessesRmaRmaRmaIdSupportRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/support/route'
import { Route as AppBusinessesRmaRmaRmaIdReceptionRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/reception/route'
import { Route as AppBusinessesRmaRmaRmaIdDeliveryRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/delivery/route'
import { Route as AppBusinessesRmaBusinessBusinessIdQuotationRouteImport } from './routes/app/businesses-rma_/business.$businessId/quotation/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/route'
import { Route as AppBusinessesRmaBusinessBusinessIdBpRouteImport } from './routes/app/businesses-rma_/business.$businessId/bp/route'
import { Route as AppBusinessesRmaBusinessBusinessIdBlRouteImport } from './routes/app/businesses-rma_/business.$businessId/bl/route'
import { Route as AppBusinessesRmaBusinessBusinessIdBillRouteImport } from './routes/app/businesses-rma_/business.$businessId/bill/route'
import { Route as AppBusinessesRmaBusinessBusinessIdArcRouteImport } from './routes/app/businesses-rma_/business.$businessId/arc/route'
import { Route as AppToolsSchedulerDetailsRdvIdUpdateRouteImport } from './routes/app/tools/scheduler/details.$rdvId/update/route'
import { Route as AppToolsSchedulerDetailsRdvIdDeleteRouteImport } from './routes/app/tools/scheduler/details.$rdvId/delete/route'
import { Route as AppToolsFormationsUpdateFormationIdDetailsRouteImport } from './routes/app/tools/formations/update.$formationId/details/route'
import { Route as AppToolsFormationsUpdateFormationIdAddDetailRouteImport } from './routes/app/tools/formations/update.$formationId/add-detail/route'
import { Route as AppToolsFormationsSubscribersFormationDetailIdCreateRouteImport } from './routes/app/tools/formations/subscribers.$formationDetailId/create/route'
import { Route as AppProductsProductIdManageUpdateVersionVersionIdRouteImport } from './routes/app/products_.$productId/manage/update-version.$versionId/route'
import { Route as AppProductsProductIdManageUpdateStockStockIdRouteImport } from './routes/app/products_.$productId/manage/update-stock.$stockId/route'
import { Route as AppProductsProductIdManageUpdateSpecificationSpecificationIdRouteImport } from './routes/app/products_.$productId/manage/update-specification.$specificationId/route'
import { Route as AppProductsProductIdManageStockHistoryStockIdRouteImport } from './routes/app/products_.$productId/manage/stock-history.$stockId/route'
import { Route as AppProductsProductIdManageRemoveAssociatedProductAssociatedProductIdRouteImport } from './routes/app/products_.$productId/manage/remove-associated-product.$associatedProductId/route'
import { Route as AppProductsProductIdManageDeleteVersionVersionIdRouteImport } from './routes/app/products_.$productId/manage/delete-version.$versionId/route'
import { Route as AppProductsProductIdManageDeleteStockStockIdRouteImport } from './routes/app/products_.$productId/manage/delete-stock.$stockId/route'
import { Route as AppProductsProductIdManageDeleteSpecificationSpecificationIdRouteImport } from './routes/app/products_.$productId/manage/delete-specification.$specificationId/route'
import { Route as AppProductsProductIdManageAddSpecificationFilterIdRouteImport } from './routes/app/products_.$productId/manage/add-specification/$filterId/route'
import { Route as AppProductsProductIdInformationsTaskEmailTaskIdRouteImport } from './routes/app/products_.$productId/informations/task-email.$taskId/route'
import { Route as AppFaqGedFaqIdRenameItemRelativePathRouteImport } from './routes/app/faq/ged.$faqId/rename.$itemRelativePath/route'
import { Route as AppFaqGedFaqIdDeleteItemRelativePathRouteImport } from './routes/app/faq/ged.$faqId/delete.$itemRelativePath/route'
import { Route as AppEnterprisesEnterpriseIdTaskEmailTaskIdReplyRouteImport } from './routes/app/enterprises_.$enterpriseId/task-email.$taskId/reply/route'
import { Route as AppEnterprisesEnterpriseIdAddressBookUpdateAddressIdRouteImport } from './routes/app/enterprises_.$enterpriseId/address-book/update.$addressId/route'
import { Route as AppEnterprisesEnterpriseIdAddressBookDeleteAddressIdRouteImport } from './routes/app/enterprises_.$enterpriseId/address-book/delete.$addressId/route'
import { Route as AppBusinessesRmaRmaRmaIdSupportPdfRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/support/pdf/route'
import { Route as AppBusinessesRmaRmaRmaIdSupportImportGedFilesRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/support/import-ged-files/route'
import { Route as AppBusinessesRmaRmaRmaIdSupportCreateLifesheetRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/support/create-lifesheet/route'
import { Route as AppBusinessesRmaRmaRmaIdSupportCreateGedDirectoryRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/support/create-ged-directory/route'
import { Route as AppBusinessesRmaRmaRmaIdSupportCreateDetailRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/support/create-detail/route'
import { Route as AppBusinessesRmaRmaRmaIdReceptionPdfRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/reception/pdf/route'
import { Route as AppBusinessesRmaRmaRmaIdReceptionCreateDetailRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/reception/create-detail/route'
import { Route as AppBusinessesRmaRmaRmaIdDeliveryTravelVoucherRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/delivery/travel-voucher/route'
import { Route as AppBusinessesRmaRmaRmaIdDeliveryPdfRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/delivery/pdf/route'
import { Route as AppBusinessesRmaRmaRmaIdDeliveryCreateDetailRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/delivery/create-detail/route'
import { Route as AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteImport } from './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdQuotationUpdateShippingPriceRouteImport } from './routes/app/businesses-rma_/business.$businessId/quotation/update-shipping-price/route'
import { Route as AppBusinessesRmaBusinessBusinessIdQuotationPdfRouteImport } from './routes/app/businesses-rma_/business.$businessId/quotation/pdf/route'
import { Route as AppBusinessesRmaBusinessBusinessIdQuotationCommercialNoticeRouteImport } from './routes/app/businesses-rma_/business.$businessId/quotation/commercial-notice/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardUpdateResponsibleRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/update-responsible/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardUpdateRepresentativeRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/update-representative/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardUpdateBillingAddressRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/update-billing-address/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardSendEmailRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/send-email/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardImportGedFilesRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/import-ged-files/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardDeleteRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/delete/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardCreateLinkRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/create-link/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardCreateLifesheetRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/create-lifesheet/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardCreateGedDirectoryRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/create-ged-directory/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardAddressBookRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/address-book/route'
import { Route as AppBusinessesRmaBusinessBusinessIdBpTravelVoucherRouteImport } from './routes/app/businesses-rma_/business.$businessId/bp/travel-voucher/route'
import { Route as AppBusinessesRmaBusinessBusinessIdBlSendByEmailRouteImport } from './routes/app/businesses-rma_/business.$businessId/bl/send-by-email/route'
import { Route as AppBusinessesRmaBusinessBusinessIdBillSendByEmailRouteImport } from './routes/app/businesses-rma_/business.$businessId/bill/send-by-email/route'
import { Route as AppBusinessesRmaBusinessBusinessIdBillCreditsRouteImport } from './routes/app/businesses-rma_/business.$businessId/bill/credits/route'
import { Route as AppBusinessesRmaBusinessBusinessIdArcUpdateShippingPriceRouteImport } from './routes/app/businesses-rma_/business.$businessId/arc/update-shipping-price/route'
import { Route as AppBusinessesRmaBusinessBusinessIdArcPdfRouteImport } from './routes/app/businesses-rma_/business.$businessId/arc/pdf/route'
import { Route as AppToolsFormationsSubscribersFormationDetailIdSendEmailSubscriptionIdRouteImport } from './routes/app/tools/formations/subscribers.$formationDetailId/send-email.$subscriptionId/route'
import { Route as AppToolsFormationsSubscribersFormationDetailIdDeleteSubscriptionIdRouteImport } from './routes/app/tools/formations/subscribers.$formationDetailId/delete.$subscriptionId/route'
import { Route as AppProductsProductIdInformationsTaskEmailTaskIdReplyRouteImport } from './routes/app/products_.$productId/informations/task-email.$taskId/reply/route'
import { Route as AppBusinessesRmaRmaRmaIdSupportUpdateDetailDetailIdRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/support/update-detail.$detailId/route'
import { Route as AppBusinessesRmaRmaRmaIdSupportTaskEmailTaskIdRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/support/task-email.$taskId/route'
import { Route as AppBusinessesRmaRmaRmaIdSupportRenameGedObjectObjectRelativePathRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/support/rename-ged-object.$objectRelativePath/route'
import { Route as AppBusinessesRmaRmaRmaIdSupportPdfSendByEmailRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/support/pdf/send-by-email/route'
import { Route as AppBusinessesRmaRmaRmaIdSupportDeleteGedObjectRelativePathRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/support/delete-ged-object.$relativePath/route'
import { Route as AppBusinessesRmaRmaRmaIdSupportDeleteDetailDetailIdRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/support/delete-detail.$detailId/route'
import { Route as AppBusinessesRmaRmaRmaIdReceptionUpdateDetailDetailIdRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/reception/update-detail.$detailId/route'
import { Route as AppBusinessesRmaRmaRmaIdReceptionPdfSendByEmailRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/reception/pdf/send-by-email/route'
import { Route as AppBusinessesRmaRmaRmaIdReceptionDeleteDetailDetailIdRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/reception/delete-detail.$detailId/route'
import { Route as AppBusinessesRmaRmaRmaIdDeliveryUpdateDetailDetailIdRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/delivery/update-detail.$detailId/route'
import { Route as AppBusinessesRmaRmaRmaIdDeliveryPdfSendByEmailRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/delivery/pdf/send-by-email/route'
import { Route as AppBusinessesRmaRmaRmaIdDeliveryDeleteDetailDetailIdRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/delivery/delete-detail.$detailId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdPdfRouteImport } from './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/pdf/route'
import { Route as AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdImportGedFilesRouteImport } from './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/import-ged-files/route'
import { Route as AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdEditSubtitleRouteImport } from './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/edit-subtitle/route'
import { Route as AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdEditNoBilledTimeRouteImport } from './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/edit-no-billed-time/route'
import { Route as AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdEditCumulatedTimeRouteImport } from './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/edit-cumulated-time/route'
import { Route as AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdDeleteRouteImport } from './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/delete/route'
import { Route as AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdCreateLifesheetRouteImport } from './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/create-lifesheet/route'
import { Route as AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdCreateGedDirectoryRouteImport } from './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/create-ged-directory/route'
import { Route as AppBusinessesRmaBusinessBusinessIdQuotationUpdateSubquotationSubquotationIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/quotation/update-subquotation.$subquotationId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdQuotationUpdateDetailDetailIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/quotation/update-detail.$detailId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdQuotationPdfSendByEmailRouteImport } from './routes/app/businesses-rma_/business.$businessId/quotation/pdf/send-by-email/route'
import { Route as AppBusinessesRmaBusinessBusinessIdQuotationDeleteSubquotationSubquotationIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/quotation/delete-subquotation.$subquotationId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdQuotationDeleteDetailDetailIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/quotation/delete-detail.$detailId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdQuotationCreateDetailSubquotationIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/quotation/create-detail.$subquotationId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdQuotationCreateAssociatedDetailDetailIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/quotation/create-associated-detail.$detailId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdQuotationCommercialNoticeSendByEmailRouteImport } from './routes/app/businesses-rma_/business.$businessId/quotation/commercial-notice/send-by-email/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardTaskEmailTaskIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/task-email.$taskId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardRenameGedObjectObjectRelativePathRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/rename-ged-object.$objectRelativePath/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardDeleteLinkAssociatedIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/delete-link.$associatedId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardDeleteGedObjectObjectRelativePathRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/delete-ged-object.$objectRelativePath/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardConfirmQuotationImportOtherBusinessIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/confirm-quotation-import.$otherBusinessId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardAddressBookCreateRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/address-book/create/route'
import { Route as AppBusinessesRmaBusinessBusinessIdBpUpdateDetailDetailIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/bp/update-detail.$detailId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdBpDeleteSerialSerialIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/bp/delete-serial.$serialId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdBpDeleteDetailDetailIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/bp/delete-detail.$detailId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdBpCreateSerialRmaSerialIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/bp/create-serial-rma.$serialId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdBpCreateDetailRmaDetailIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/bp/create-detail-rma.$detailId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdBpAddSerialDetailIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/bp/add-serial.$detailId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdBillCreditsSendByEmailRouteImport } from './routes/app/businesses-rma_/business.$businessId/bill/credits/send-by-email/route'
import { Route as AppBusinessesRmaBusinessBusinessIdArcUpdateDetailDetailIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/arc/update-detail.$detailId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdArcPdfSendByEmailRouteImport } from './routes/app/businesses-rma_/business.$businessId/arc/pdf/send-by-email/route'
import { Route as AppBusinessesRmaBusinessBusinessIdArcDeleteDetailDetailIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/arc/delete-detail.$detailId/route'
import { Route as AppBusinessesRmaRmaRmaIdSupportTaskEmailTaskIdReplyRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/support/task-email.$taskId/reply/route'
import { Route as AppBusinessesRmaRmaRmaIdReceptionPdfSendByEmailPredefinedMessagesRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/reception/pdf/send-by-email/predefined-messages/route'
import { Route as AppBusinessesRmaRmaRmaIdDeliveryPdfSendByEmailPredefinedMessagesRouteImport } from './routes/app/businesses-rma_/rma.$rmaId/delivery/pdf/send-by-email/predefined-messages/route'
import { Route as AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRenameGedObjectObjectRelativePathRouteImport } from './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/rename-ged-object.$objectRelativePath/route'
import { Route as AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdPdfSendByEmailRouteImport } from './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/pdf/send-by-email/route'
import { Route as AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdDeleteGedObjectObjectRelativePathRouteImport } from './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/delete-ged-object.$objectRelativePath/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardAddressBookUpdateAddressIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/address-book/update.$addressId/route'
import { Route as AppBusinessesRmaBusinessBusinessIdDashboardAddressBookDeleteAddressIdRouteImport } from './routes/app/businesses-rma_/business.$businessId/dashboard/address-book/delete.$addressId/route'

// Create Virtual Routes

const AuthForgotPasswordRouteLazyImport = createFileRoute(
  '/auth/forgot-password',
)()
const AuthResetPasswordTokenRouteLazyImport = createFileRoute(
  '/auth/reset-password/$token',
)()

// Create/Update Routes

const AuthRouteRoute = AuthRouteImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/route.lazy').then((d) => d.Route))

const AppRouteRoute = AppRouteImport.update({
  path: '/app',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/app/route.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AuthForgotPasswordRouteLazyRoute =
  AuthForgotPasswordRouteLazyImport.update({
    path: '/forgot-password',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/auth/forgot-password/route.lazy').then((d) => d.Route),
  )

const AuthLoginRouteRoute = AuthLoginRouteImport.update({
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/auth/login/route.lazy').then((d) => d.Route),
)

const AppToolsRouteRoute = AppToolsRouteImport.update({
  path: '/tools',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppProductsRouteRoute = AppProductsRouteImport.update({
  path: '/products',
  getParentRoute: () => AppRouteRoute,
} as any).lazy(() =>
  import('./routes/app/products/route.lazy').then((d) => d.Route),
)

const AppFaqRouteRoute = AppFaqRouteImport.update({
  path: '/faq',
  getParentRoute: () => AppRouteRoute,
} as any).lazy(() => import('./routes/app/faq/route.lazy').then((d) => d.Route))

const AppExternalLinksRouteRoute = AppExternalLinksRouteImport.update({
  path: '/external-links',
  getParentRoute: () => AppRouteRoute,
} as any).lazy(() =>
  import('./routes/app/external-links/route.lazy').then((d) => d.Route),
)

const AppEnterprisesRouteRoute = AppEnterprisesRouteImport.update({
  path: '/enterprises',
  getParentRoute: () => AppRouteRoute,
} as any).lazy(() =>
  import('./routes/app/enterprises/route.lazy').then((d) => d.Route),
)

const AppDashboardRouteRoute = AppDashboardRouteImport.update({
  path: '/dashboard',
  getParentRoute: () => AppRouteRoute,
} as any).lazy(() =>
  import('./routes/app/dashboard/route.lazy').then((d) => d.Route),
)

const AppBusinessesRmaRouteRoute = AppBusinessesRmaRouteImport.update({
  path: '/businesses-rma',
  getParentRoute: () => AppRouteRoute,
} as any).lazy(() =>
  import('./routes/app/businesses-rma/route.lazy').then((d) => d.Route),
)

const AppToolsIndexRoute = AppToolsIndexImport.update({
  path: '/',
  getParentRoute: () => AppToolsRouteRoute,
} as any)

const AuthResetPasswordTokenRouteLazyRoute =
  AuthResetPasswordTokenRouteLazyImport.update({
    path: '/reset-password/$token',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/auth/reset-password.$token/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsVvaRouteRoute = AppToolsVvaRouteImport.update({
  path: '/vva',
  getParentRoute: () => AppToolsRouteRoute,
} as any).lazy(() =>
  import('./routes/app/tools/vva/route.lazy').then((d) => d.Route),
)

const AppToolsSchedulerRouteRoute = AppToolsSchedulerRouteImport.update({
  path: '/scheduler',
  getParentRoute: () => AppToolsRouteRoute,
} as any).lazy(() =>
  import('./routes/app/tools/scheduler/route.lazy').then((d) => d.Route),
)

const AppToolsRepresentativesTurnoverRouteRoute =
  AppToolsRepresentativesTurnoverRouteImport.update({
    path: '/representatives-turnover',
    getParentRoute: () => AppToolsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/representatives-turnover/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsRepresentativesMapRouteRoute =
  AppToolsRepresentativesMapRouteImport.update({
    path: '/representatives-map',
    getParentRoute: () => AppToolsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/representatives-map/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsProductShelvesRouteRoute =
  AppToolsProductShelvesRouteImport.update({
    path: '/product-shelves',
    getParentRoute: () => AppToolsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/product-shelves/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsProductInventoryRouteRoute =
  AppToolsProductInventoryRouteImport.update({
    path: '/product-inventory',
    getParentRoute: () => AppToolsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/product-inventory/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsProductFiltersRouteRoute =
  AppToolsProductFiltersRouteImport.update({
    path: '/product-filters',
    getParentRoute: () => AppToolsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/product-filters/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsPredefinedTextsRouteRoute =
  AppToolsPredefinedTextsRouteImport.update({
    path: '/predefined-texts',
    getParentRoute: () => AppToolsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/predefined-texts/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsPredefinedMessagesRouteRoute =
  AppToolsPredefinedMessagesRouteImport.update({
    path: '/predefined-messages',
    getParentRoute: () => AppToolsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/predefined-messages/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsNewsRouteRoute = AppToolsNewsRouteImport.update({
  path: '/news',
  getParentRoute: () => AppToolsRouteRoute,
} as any).lazy(() =>
  import('./routes/app/tools/news/route.lazy').then((d) => d.Route),
)

const AppToolsMenuRouteRoute = AppToolsMenuRouteImport.update({
  path: '/menu',
  getParentRoute: () => AppToolsRouteRoute,
} as any).lazy(() =>
  import('./routes/app/tools/menu/route.lazy').then((d) => d.Route),
)

const AppToolsMailsRouteRoute = AppToolsMailsRouteImport.update({
  path: '/mails',
  getParentRoute: () => AppToolsRouteRoute,
} as any).lazy(() =>
  import('./routes/app/tools/mails/route.lazy').then((d) => d.Route),
)

const AppToolsGlobalTurnoverRouteRoute =
  AppToolsGlobalTurnoverRouteImport.update({
    path: '/global-turnover',
    getParentRoute: () => AppToolsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/global-turnover/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsFormationsRouteRoute = AppToolsFormationsRouteImport.update({
  path: '/formations',
  getParentRoute: () => AppToolsRouteRoute,
} as any).lazy(() =>
  import('./routes/app/tools/formations/route.lazy').then((d) => d.Route),
)

const AppToolsExternalLinksRouteRoute = AppToolsExternalLinksRouteImport.update(
  {
    path: '/external-links',
    getParentRoute: () => AppToolsRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/app/tools/external-links/route.lazy').then((d) => d.Route),
)

const AppToolsEmailsRouteRoute = AppToolsEmailsRouteImport.update({
  path: '/emails',
  getParentRoute: () => AppToolsRouteRoute,
} as any).lazy(() =>
  import('./routes/app/tools/emails/route.lazy').then((d) => d.Route),
)

const AppToolsDepartmentsRouteRoute = AppToolsDepartmentsRouteImport.update({
  path: '/departments',
  getParentRoute: () => AppToolsRouteRoute,
} as any).lazy(() =>
  import('./routes/app/tools/departments/route.lazy').then((d) => d.Route),
)

const AppToolsDdnsRouteRoute = AppToolsDdnsRouteImport.update({
  path: '/ddns',
  getParentRoute: () => AppToolsRouteRoute,
} as any).lazy(() =>
  import('./routes/app/tools/ddns/route.lazy').then((d) => d.Route),
)

const AppToolsCreditRouteRoute = AppToolsCreditRouteImport.update({
  path: '/credit',
  getParentRoute: () => AppToolsRouteRoute,
} as any).lazy(() =>
  import('./routes/app/tools/credit/route.lazy').then((d) => d.Route),
)

const AppProductsProductIdRouteRoute = AppProductsProductIdRouteImport.update({
  path: '/products/$productId',
  getParentRoute: () => AppRouteRoute,
} as any).lazy(() =>
  import('./routes/app/products_.$productId/route.lazy').then((d) => d.Route),
)

const AppProductsSerialNumbersRouteRoute =
  AppProductsSerialNumbersRouteImport.update({
    path: '/serial-numbers',
    getParentRoute: () => AppProductsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/products/serial-numbers/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppFaqCreateRouteRoute = AppFaqCreateRouteImport.update({
  path: '/create',
  getParentRoute: () => AppFaqRouteRoute,
} as any).lazy(() =>
  import('./routes/app/faq/create/route.lazy').then((d) => d.Route),
)

const AppExternalLinksExternalLinkIdRouteRoute =
  AppExternalLinksExternalLinkIdRouteImport.update({
    path: '/external-links/$externalLinkId',
    getParentRoute: () => AppRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/external-links_.$externalLinkId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppEnterprisesEnterpriseIdRouteRoute =
  AppEnterprisesEnterpriseIdRouteImport.update({
    path: '/enterprises/$enterpriseId',
    getParentRoute: () => AppRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/enterprises_.$enterpriseId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppDashboardDeleteCollectiveTasksRouteRoute =
  AppDashboardDeleteCollectiveTasksRouteImport.update({
    path: '/delete-collective-tasks',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/dashboard/delete-collective-tasks/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppDashboardCreateProgressiveInfoRouteRoute =
  AppDashboardCreateProgressiveInfoRouteImport.update({
    path: '/create-progressive-info',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/dashboard/create-progressive-info/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppDashboardCreatePersonalTaskRouteRoute =
  AppDashboardCreatePersonalTaskRouteImport.update({
    path: '/create-personal-task',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/dashboard/create-personal-task/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppDashboardCreateCollectiveTaskRouteRoute =
  AppDashboardCreateCollectiveTaskRouteImport.update({
    path: '/create-collective-task',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/dashboard/create-collective-task/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppBusinessesRmaSearchByProductsRouteRoute =
  AppBusinessesRmaSearchByProductsRouteImport.update({
    path: '/search-by-products',
    getParentRoute: () => AppBusinessesRmaRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/businesses-rma/search-by-products/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppBusinessesRmaRepresentativeTurnoverRouteRoute =
  AppBusinessesRmaRepresentativeTurnoverRouteImport.update({
    path: '/representative-turnover',
    getParentRoute: () => AppBusinessesRmaRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma/representative-turnover/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdIndexRoute = AppProductsProductIdIndexImport.update({
  path: '/',
  getParentRoute: () => AppProductsProductIdRouteRoute,
} as any)

const AppToolsVvaCreateRouteRoute = AppToolsVvaCreateRouteImport.update({
  path: '/create',
  getParentRoute: () => AppToolsVvaRouteRoute,
} as any).lazy(() =>
  import('./routes/app/tools/vva/create/route.lazy').then((d) => d.Route),
)

const AppToolsSchedulerCreateRouteRoute =
  AppToolsSchedulerCreateRouteImport.update({
    path: '/create',
    getParentRoute: () => AppToolsSchedulerRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/scheduler/create/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsProductShelvesCreateRouteRoute =
  AppToolsProductShelvesCreateRouteImport.update({
    path: '/create',
    getParentRoute: () => AppToolsProductShelvesRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/product-shelves/create/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsProductInventoryValidateQuantitiesRouteRoute =
  AppToolsProductInventoryValidateQuantitiesRouteImport.update({
    path: '/validate-quantities',
    getParentRoute: () => AppToolsProductInventoryRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/product-inventory/validate-quantities/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsProductFiltersCreateRouteRoute =
  AppToolsProductFiltersCreateRouteImport.update({
    path: '/create',
    getParentRoute: () => AppToolsProductFiltersRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/product-filters/create/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsPredefinedTextsCreateRouteRoute =
  AppToolsPredefinedTextsCreateRouteImport.update({
    path: '/create',
    getParentRoute: () => AppToolsPredefinedTextsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/predefined-texts/create/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsPredefinedMessagesCreateRouteRoute =
  AppToolsPredefinedMessagesCreateRouteImport.update({
    path: '/create',
    getParentRoute: () => AppToolsPredefinedMessagesRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/predefined-messages/create/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsNewsCreateRouteRoute = AppToolsNewsCreateRouteImport.update({
  path: '/create',
  getParentRoute: () => AppToolsNewsRouteRoute,
} as any).lazy(() =>
  import('./routes/app/tools/news/create/route.lazy').then((d) => d.Route),
)

const AppToolsMenuCreateProductRouteRoute =
  AppToolsMenuCreateProductRouteImport.update({
    path: '/create-product',
    getParentRoute: () => AppToolsMenuRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/menu/create-product/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsMenuCreateEnterpriseRouteRoute =
  AppToolsMenuCreateEnterpriseRouteImport.update({
    path: '/create-enterprise',
    getParentRoute: () => AppToolsMenuRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/menu/create-enterprise/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsMailsCreateRouteRoute = AppToolsMailsCreateRouteImport.update({
  path: '/create',
  getParentRoute: () => AppToolsMailsRouteRoute,
} as any).lazy(() =>
  import('./routes/app/tools/mails/create/route.lazy').then((d) => d.Route),
)

const AppToolsFormationsCreateRouteRoute =
  AppToolsFormationsCreateRouteImport.update({
    path: '/create',
    getParentRoute: () => AppToolsFormationsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/formations/create/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsExternalLinksCreateRouteRoute =
  AppToolsExternalLinksCreateRouteImport.update({
    path: '/create',
    getParentRoute: () => AppToolsExternalLinksRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/external-links/create/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsEmailsSendRouteRoute = AppToolsEmailsSendRouteImport.update({
  path: '/emails/send',
  getParentRoute: () => AppToolsRouteRoute,
} as any).lazy(() =>
  import('./routes/app/tools/emails_.send/route.lazy').then((d) => d.Route),
)

const AppToolsEmailsEmailIdRouteRoute = AppToolsEmailsEmailIdRouteImport.update(
  {
    path: '/$emailId',
    getParentRoute: () => AppToolsEmailsRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/app/tools/emails/$emailId/route.lazy').then((d) => d.Route),
)

const AppToolsDepartmentsCreateRouteRoute =
  AppToolsDepartmentsCreateRouteImport.update({
    path: '/create',
    getParentRoute: () => AppToolsDepartmentsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/departments/create/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsDdnsCreateRouteRoute = AppToolsDdnsCreateRouteImport.update({
  path: '/create',
  getParentRoute: () => AppToolsDdnsRouteRoute,
} as any).lazy(() =>
  import('./routes/app/tools/ddns/create/route.lazy').then((d) => d.Route),
)

const AppToolsCreditShowRouteRoute = AppToolsCreditShowRouteImport.update({
  path: '/show',
  getParentRoute: () => AppToolsCreditRouteRoute,
} as any).lazy(() =>
  import('./routes/app/tools/credit/show/route.lazy').then((d) => d.Route),
)

const AppToolsCreditDetailsRouteRoute = AppToolsCreditDetailsRouteImport.update(
  {
    path: '/details',
    getParentRoute: () => AppToolsCreditRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/app/tools/credit/details/route.lazy').then((d) => d.Route),
)

const AppProductsProductIdManageRouteRoute =
  AppProductsProductIdManageRouteImport.update({
    path: '/manage',
    getParentRoute: () => AppProductsProductIdRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/products_.$productId/manage/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppProductsProductIdInformationsRouteRoute =
  AppProductsProductIdInformationsRouteImport.update({
    path: '/informations',
    getParentRoute: () => AppProductsProductIdRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/products_.$productId/informations/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppProductsSerialNumbersCreateRouteRoute =
  AppProductsSerialNumbersCreateRouteImport.update({
    path: '/create',
    getParentRoute: () => AppProductsSerialNumbersRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/products/serial-numbers/create/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppFaqUpdateFaqIdRouteRoute = AppFaqUpdateFaqIdRouteImport.update({
  path: '/update/$faqId',
  getParentRoute: () => AppFaqRouteRoute,
} as any).lazy(() =>
  import('./routes/app/faq/update.$faqId/route.lazy').then((d) => d.Route),
)

const AppFaqSendByEmailFaqIdRouteRoute =
  AppFaqSendByEmailFaqIdRouteImport.update({
    path: '/send-by-email/$faqId',
    getParentRoute: () => AppFaqRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/faq/send-by-email.$faqId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppFaqGedFaqIdRouteRoute = AppFaqGedFaqIdRouteImport.update({
  path: '/ged/$faqId',
  getParentRoute: () => AppFaqRouteRoute,
} as any).lazy(() =>
  import('./routes/app/faq/ged.$faqId/route.lazy').then((d) => d.Route),
)

const AppFaqDeleteFaqIdRouteRoute = AppFaqDeleteFaqIdRouteImport.update({
  path: '/delete/$faqId',
  getParentRoute: () => AppFaqRouteRoute,
} as any).lazy(() =>
  import('./routes/app/faq/delete.$faqId/route.lazy').then((d) => d.Route),
)

const AppFaqArchiveFaqIdRouteRoute = AppFaqArchiveFaqIdRouteImport.update({
  path: '/archive/$faqId',
  getParentRoute: () => AppFaqRouteRoute,
} as any).lazy(() =>
  import('./routes/app/faq/archive.$faqId/route.lazy').then((d) => d.Route),
)

const AppEnterprisesEnterpriseIdUpdateRepresentativeRouteRoute =
  AppEnterprisesEnterpriseIdUpdateRepresentativeRouteImport.update({
    path: '/update-representative',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/update-representative/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdUpdateCategoryRouteRoute =
  AppEnterprisesEnterpriseIdUpdateCategoryRouteImport.update({
    path: '/update-category',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/update-category/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdUpdateAccountabilityRouteRoute =
  AppEnterprisesEnterpriseIdUpdateAccountabilityRouteImport.update({
    path: '/update-accountability',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/update-accountability/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdUpdateRouteRoute =
  AppEnterprisesEnterpriseIdUpdateRouteImport.update({
    path: '/update',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/enterprises_.$enterpriseId/update/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppEnterprisesEnterpriseIdImportGedFilesRouteRoute =
  AppEnterprisesEnterpriseIdImportGedFilesRouteImport.update({
    path: '/import-ged-files',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/import-ged-files/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdImportContactsRouteRoute =
  AppEnterprisesEnterpriseIdImportContactsRouteImport.update({
    path: '/import-contacts',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/import-contacts/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdDeleteRouteRoute =
  AppEnterprisesEnterpriseIdDeleteRouteImport.update({
    path: '/delete',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/enterprises_.$enterpriseId/delete/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppEnterprisesEnterpriseIdCreateLifesheetCommentRouteRoute =
  AppEnterprisesEnterpriseIdCreateLifesheetCommentRouteImport.update({
    path: '/create-lifesheet-comment',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/create-lifesheet-comment/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdCreateGedDirectoryRouteRoute =
  AppEnterprisesEnterpriseIdCreateGedDirectoryRouteImport.update({
    path: '/create-ged-directory',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/create-ged-directory/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdCreateContactRouteRoute =
  AppEnterprisesEnterpriseIdCreateContactRouteImport.update({
    path: '/create-contact',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/create-contact/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdAddressBookRouteRoute =
  AppEnterprisesEnterpriseIdAddressBookRouteImport.update({
    path: '/address-book',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/address-book/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesUpdateContactContactIdRouteRoute =
  AppEnterprisesUpdateContactContactIdRouteImport.update({
    path: '/update-contact/$contactId',
    getParentRoute: () => AppEnterprisesRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises/update-contact.$contactId/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesUpdateContactPasswordContactIdRouteRoute =
  AppEnterprisesUpdateContactPasswordContactIdRouteImport.update({
    path: '/update-contact-password/$contactId',
    getParentRoute: () => AppEnterprisesRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises/update-contact-password.$contactId/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesSendEmailToContactContactIdRouteRoute =
  AppEnterprisesSendEmailToContactContactIdRouteImport.update({
    path: '/send-email-to-contact/$contactId',
    getParentRoute: () => AppEnterprisesRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises/send-email-to-contact.$contactId/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesDeleteContactContactIdRouteRoute =
  AppEnterprisesDeleteContactContactIdRouteImport.update({
    path: '/delete-contact/$contactId',
    getParentRoute: () => AppEnterprisesRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises/delete-contact.$contactId/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesCreateEnterpriseRmaEnterpriseIdRouteRoute =
  AppEnterprisesCreateEnterpriseRmaEnterpriseIdRouteImport.update({
    path: '/create-enterprise-rma/$enterpriseId',
    getParentRoute: () => AppEnterprisesRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises/create-enterprise-rma.$enterpriseId/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesCreateContactEnterpriseIdRouteRoute =
  AppEnterprisesCreateContactEnterpriseIdRouteImport.update({
    path: '/create-contact/$enterpriseId',
    getParentRoute: () => AppEnterprisesRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises/create-contact.$enterpriseId/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesCreateContactTravelVoucherContactIdRouteRoute =
  AppEnterprisesCreateContactTravelVoucherContactIdRouteImport.update({
    path: '/create-contact-travel-voucher/$contactId',
    getParentRoute: () => AppEnterprisesRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises/create-contact-travel-voucher.$contactId/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesCreateContactBusinessContactIdRouteRoute =
  AppEnterprisesCreateContactBusinessContactIdRouteImport.update({
    path: '/create-contact-business/$contactId',
    getParentRoute: () => AppEnterprisesRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises/create-contact-business.$contactId/route.lazy'
    ).then((d) => d.Route),
  )

const AppDashboardValidatePersonalTaskTaskIdRouteRoute =
  AppDashboardValidatePersonalTaskTaskIdRouteImport.update({
    path: '/validate-personal-task/$taskId',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/dashboard/validate-personal-task.$taskId/route.lazy'
    ).then((d) => d.Route),
  )

const AppDashboardUpdateProgressiveInfoProgressiveInfoIdRouteRoute =
  AppDashboardUpdateProgressiveInfoProgressiveInfoIdRouteImport.update({
    path: '/update-progressive-info/$progressiveInfoId',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/dashboard/update-progressive-info.$progressiveInfoId/route.lazy'
    ).then((d) => d.Route),
  )

const AppDashboardUpdatePersonalTaskDeadlineTaskIdRouteRoute =
  AppDashboardUpdatePersonalTaskDeadlineTaskIdRouteImport.update({
    path: '/update-personal-task-deadline/$taskId',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/dashboard/update-personal-task-deadline.$taskId/route.lazy'
    ).then((d) => d.Route),
  )

const AppDashboardTransferTaskTaskIdRouteRoute =
  AppDashboardTransferTaskTaskIdRouteImport.update({
    path: '/transfer-task/$taskId',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/dashboard/transfer-task.$taskId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppDashboardTaskEmailTaskIdRouteRoute =
  AppDashboardTaskEmailTaskIdRouteImport.update({
    path: '/task-email/$taskId',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/dashboard/task-email.$taskId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppDashboardTaskCommentsTaskIdRouteRoute =
  AppDashboardTaskCommentsTaskIdRouteImport.update({
    path: '/task-comments/$taskId',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/dashboard/task-comments.$taskId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppDashboardTakeCollectiveTaskTaskIdRouteRoute =
  AppDashboardTakeCollectiveTaskTaskIdRouteImport.update({
    path: '/take-collective-task/$taskId',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/dashboard/take-collective-task.$taskId/route.lazy'
    ).then((d) => d.Route),
  )

const AppDashboardSchedulerEventDetailsEventIdRouteRoute =
  AppDashboardSchedulerEventDetailsEventIdRouteImport.update({
    path: '/scheduler-event-details/$eventId',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/dashboard/scheduler-event-details.$eventId/route.lazy'
    ).then((d) => d.Route),
  )

const AppDashboardPersonalTaskDetailsTaskIdRouteRoute =
  AppDashboardPersonalTaskDetailsTaskIdRouteImport.update({
    path: '/personal-task-details/$taskId',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/dashboard/personal-task-details.$taskId/route.lazy'
    ).then((d) => d.Route),
  )

const AppDashboardOtherPersonalTasksProfileIdRouteRoute =
  AppDashboardOtherPersonalTasksProfileIdRouteImport.update({
    path: '/other-personal-tasks/$profileId',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/dashboard/other-personal-tasks.$profileId/route.lazy'
    ).then((d) => d.Route),
  )

const AppDashboardLinkPersonalTaskTaskIdRouteRoute =
  AppDashboardLinkPersonalTaskTaskIdRouteImport.update({
    path: '/link-personal-task/$taskId',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/dashboard/link-personal-task.$taskId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppDashboardDeleteProgressiveInfoProgressiveInfoIdRouteRoute =
  AppDashboardDeleteProgressiveInfoProgressiveInfoIdRouteImport.update({
    path: '/delete-progressive-info/$progressiveInfoId',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/dashboard/delete-progressive-info.$progressiveInfoId/route.lazy'
    ).then((d) => d.Route),
  )

const AppDashboardDeleteCollectiveTaskTaskIdRouteRoute =
  AppDashboardDeleteCollectiveTaskTaskIdRouteImport.update({
    path: '/delete-collective-task/$taskId',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/dashboard/delete-collective-task.$taskId/route.lazy'
    ).then((d) => d.Route),
  )

const AppDashboardArchivePersonalTaskTaskIdRouteRoute =
  AppDashboardArchivePersonalTaskTaskIdRouteImport.update({
    path: '/archive-personal-task/$taskId',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/dashboard/archive-personal-task.$taskId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdRouteRoute =
  AppBusinessesRmaRmaRmaIdRouteImport.update({
    path: '/businesses-rma/rma/$rmaId',
    getParentRoute: () => AppRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/businesses-rma_/rma.$rmaId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppBusinessesRmaBusinessBusinessIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdRouteImport.update({
    path: '/businesses-rma/business/$businessId',
    getParentRoute: () => AppRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/businesses-rma_/business.$businessId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppBusinessesRmaRmaRmaIdIndexRoute =
  AppBusinessesRmaRmaRmaIdIndexImport.update({
    path: '/',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdRouteRoute,
  } as any)

const AppBusinessesRmaBusinessBusinessIdIndexRoute =
  AppBusinessesRmaBusinessBusinessIdIndexImport.update({
    path: '/',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdRouteRoute,
  } as any)

const AppToolsVvaDeleteVvaIdRouteRoute =
  AppToolsVvaDeleteVvaIdRouteImport.update({
    path: '/delete/$vvaId',
    getParentRoute: () => AppToolsVvaRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/vva/delete.$vvaId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsSchedulerDetailsRdvIdRouteRoute =
  AppToolsSchedulerDetailsRdvIdRouteImport.update({
    path: '/details/$rdvId',
    getParentRoute: () => AppToolsSchedulerRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/scheduler/details.$rdvId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsProductShelvesDeleteProductShelfIdRouteRoute =
  AppToolsProductShelvesDeleteProductShelfIdRouteImport.update({
    path: '/delete/$productShelfId',
    getParentRoute: () => AppToolsProductShelvesRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/product-shelves/delete.$productShelfId/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsProductInventoryUpdateStockIdRouteRoute =
  AppToolsProductInventoryUpdateStockIdRouteImport.update({
    path: '/update/$stockId',
    getParentRoute: () => AppToolsProductInventoryRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/product-inventory/update.$stockId/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsProductFiltersUpdateProductFilterIdRouteRoute =
  AppToolsProductFiltersUpdateProductFilterIdRouteImport.update({
    path: '/update/$productFilterId',
    getParentRoute: () => AppToolsProductFiltersRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/product-filters/update.$productFilterId/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsProductFiltersDeleteProductFilterIdRouteRoute =
  AppToolsProductFiltersDeleteProductFilterIdRouteImport.update({
    path: '/delete/$productFilterId',
    getParentRoute: () => AppToolsProductFiltersRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/product-filters/delete.$productFilterId/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsPredefinedTextsUpdatePredefinedTextIdRouteRoute =
  AppToolsPredefinedTextsUpdatePredefinedTextIdRouteImport.update({
    path: '/update/$predefinedTextId',
    getParentRoute: () => AppToolsPredefinedTextsRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/predefined-texts/update.$predefinedTextId/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsPredefinedTextsDeletePredefinedTextIdRouteRoute =
  AppToolsPredefinedTextsDeletePredefinedTextIdRouteImport.update({
    path: '/delete/$predefinedTextId',
    getParentRoute: () => AppToolsPredefinedTextsRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/predefined-texts/delete.$predefinedTextId/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsPredefinedMessagesUpdatePredefinedMessageIdRouteRoute =
  AppToolsPredefinedMessagesUpdatePredefinedMessageIdRouteImport.update({
    path: '/update/$predefinedMessageId',
    getParentRoute: () => AppToolsPredefinedMessagesRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/predefined-messages/update.$predefinedMessageId/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsPredefinedMessagesDeletePredefinedMessageIdRouteRoute =
  AppToolsPredefinedMessagesDeletePredefinedMessageIdRouteImport.update({
    path: '/delete/$predefinedMessageId',
    getParentRoute: () => AppToolsPredefinedMessagesRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/predefined-messages/delete.$predefinedMessageId/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsNewsUpdateNewsIdRouteRoute =
  AppToolsNewsUpdateNewsIdRouteImport.update({
    path: '/update/$newsId',
    getParentRoute: () => AppToolsNewsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/news/update.$newsId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsNewsDeleteNewsIdRouteRoute =
  AppToolsNewsDeleteNewsIdRouteImport.update({
    path: '/delete/$newsId',
    getParentRoute: () => AppToolsNewsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/news/delete.$newsId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsMenuCreateEnterpriseContactsRouteRoute =
  AppToolsMenuCreateEnterpriseContactsRouteImport.update({
    path: '/contacts',
    getParentRoute: () => AppToolsMenuCreateEnterpriseRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/menu/create-enterprise/contacts/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsMenuCreateEnterpriseAddContactRouteRoute =
  AppToolsMenuCreateEnterpriseAddContactRouteImport.update({
    path: '/add-contact',
    getParentRoute: () => AppToolsMenuCreateEnterpriseRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/menu/create-enterprise/add-contact/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsMailsUpdateMailIdRouteRoute =
  AppToolsMailsUpdateMailIdRouteImport.update({
    path: '/update/$mailId',
    getParentRoute: () => AppToolsMailsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/mails/update.$mailId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsMailsShowMailIdRouteRoute =
  AppToolsMailsShowMailIdRouteImport.update({
    path: '/show/$mailId',
    getParentRoute: () => AppToolsMailsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/mails/show.$mailId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsMailsDeleteMailIdRouteRoute =
  AppToolsMailsDeleteMailIdRouteImport.update({
    path: '/delete/$mailId',
    getParentRoute: () => AppToolsMailsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/mails/delete.$mailId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsFormationsUpdateFormationIdRouteRoute =
  AppToolsFormationsUpdateFormationIdRouteImport.update({
    path: '/update/$formationId',
    getParentRoute: () => AppToolsFormationsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/formations/update.$formationId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsFormationsSubscribersFormationDetailIdRouteRoute =
  AppToolsFormationsSubscribersFormationDetailIdRouteImport.update({
    path: '/subscribers/$formationDetailId',
    getParentRoute: () => AppToolsFormationsRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/formations/subscribers.$formationDetailId/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsFormationsDeleteFormationIdRouteRoute =
  AppToolsFormationsDeleteFormationIdRouteImport.update({
    path: '/delete/$formationId',
    getParentRoute: () => AppToolsFormationsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/formations/delete.$formationId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsFormationsCreateDetailsRouteRoute =
  AppToolsFormationsCreateDetailsRouteImport.update({
    path: '/details',
    getParentRoute: () => AppToolsFormationsCreateRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/formations/create/details/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsFormationsCreateAddDetailRouteRoute =
  AppToolsFormationsCreateAddDetailRouteImport.update({
    path: '/add-detail',
    getParentRoute: () => AppToolsFormationsCreateRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/formations/create/add-detail/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsExternalLinksUpdateExternalLinkIdRouteRoute =
  AppToolsExternalLinksUpdateExternalLinkIdRouteImport.update({
    path: '/update/$externalLinkId',
    getParentRoute: () => AppToolsExternalLinksRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/external-links/update.$externalLinkId/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsExternalLinksDeleteExternalLinkIdRouteRoute =
  AppToolsExternalLinksDeleteExternalLinkIdRouteImport.update({
    path: '/delete/$externalLinkId',
    getParentRoute: () => AppToolsExternalLinksRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/external-links/delete.$externalLinkId/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsExternalLinksArchiveExternalLinkIdRouteRoute =
  AppToolsExternalLinksArchiveExternalLinkIdRouteImport.update({
    path: '/archive/$externalLinkId',
    getParentRoute: () => AppToolsExternalLinksRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/external-links/archive.$externalLinkId/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsEmailsSendPredefinedMessagesRouteRoute =
  AppToolsEmailsSendPredefinedMessagesRouteImport.update({
    path: '/predefined-messages',
    getParentRoute: () => AppToolsEmailsSendRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/emails_.send/predefined-messages/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsEmailsEmailIdReplyRouteRoute =
  AppToolsEmailsEmailIdReplyRouteImport.update({
    path: '/reply',
    getParentRoute: () => AppToolsEmailsEmailIdRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/emails/$emailId/reply/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppToolsDepartmentsUpdateDepartmentIdRouteRoute =
  AppToolsDepartmentsUpdateDepartmentIdRouteImport.update({
    path: '/update/$departmentId',
    getParentRoute: () => AppToolsDepartmentsRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/departments/update.$departmentId/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsDepartmentsDeleteDepartmentIdRouteRoute =
  AppToolsDepartmentsDeleteDepartmentIdRouteImport.update({
    path: '/delete/$departmentId',
    getParentRoute: () => AppToolsDepartmentsRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/departments/delete.$departmentId/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsDdnsDeleteDdnsIdRouteRoute =
  AppToolsDdnsDeleteDdnsIdRouteImport.update({
    path: '/delete/$ddnsId',
    getParentRoute: () => AppToolsDdnsRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/tools/ddns/delete.$ddnsId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppProductsProductIdManageCreateVersionRouteRoute =
  AppProductsProductIdManageCreateVersionRouteImport.update({
    path: '/create-version',
    getParentRoute: () => AppProductsProductIdManageRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/manage/create-version/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdManageCreateStockRouteRoute =
  AppProductsProductIdManageCreateStockRouteImport.update({
    path: '/create-stock',
    getParentRoute: () => AppProductsProductIdManageRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/manage/create-stock/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdManageAddSpecificationRouteRoute =
  AppProductsProductIdManageAddSpecificationRouteImport.update({
    path: '/add-specification',
    getParentRoute: () => AppProductsProductIdManageRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/manage/add-specification/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdManageAddAssociatedProductRouteRoute =
  AppProductsProductIdManageAddAssociatedProductRouteImport.update({
    path: '/add-associated-product',
    getParentRoute: () => AppProductsProductIdManageRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/manage/add-associated-product/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdInformationsRenameGedObjectRouteRoute =
  AppProductsProductIdInformationsRenameGedObjectRouteImport.update({
    path: '/rename-ged-object',
    getParentRoute: () => AppProductsProductIdInformationsRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/informations/rename-ged-object/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdInformationsImportGedFilesRouteRoute =
  AppProductsProductIdInformationsImportGedFilesRouteImport.update({
    path: '/import-ged-files',
    getParentRoute: () => AppProductsProductIdInformationsRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/informations/import-ged-files/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdInformationsDeleteGedObjectRouteRoute =
  AppProductsProductIdInformationsDeleteGedObjectRouteImport.update({
    path: '/delete-ged-object',
    getParentRoute: () => AppProductsProductIdInformationsRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/informations/delete-ged-object/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdInformationsCreateLifesheetCommentRouteRoute =
  AppProductsProductIdInformationsCreateLifesheetCommentRouteImport.update({
    path: '/create-lifesheet-comment',
    getParentRoute: () => AppProductsProductIdInformationsRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/informations/create-lifesheet-comment/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdInformationsCreateGedDirectoryRouteRoute =
  AppProductsProductIdInformationsCreateGedDirectoryRouteImport.update({
    path: '/create-ged-directory',
    getParentRoute: () => AppProductsProductIdInformationsRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/informations/create-ged-directory/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsSerialNumbersDeleteSerialNumberIdRouteRoute =
  AppProductsSerialNumbersDeleteSerialNumberIdRouteImport.update({
    path: '/delete/$serialNumberId',
    getParentRoute: () => AppProductsSerialNumbersRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products/serial-numbers/delete.$serialNumberId/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsSerialNumbersCreateRmaSerialNumberIdRouteRoute =
  AppProductsSerialNumbersCreateRmaSerialNumberIdRouteImport.update({
    path: '/create-rma/$serialNumberId',
    getParentRoute: () => AppProductsSerialNumbersRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products/serial-numbers/create-rma.$serialNumberId/route.lazy'
    ).then((d) => d.Route),
  )

const AppFaqGedFaqIdImportFilesRouteRoute =
  AppFaqGedFaqIdImportFilesRouteImport.update({
    path: '/import-files',
    getParentRoute: () => AppFaqGedFaqIdRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/faq/ged.$faqId/import-files/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppFaqGedFaqIdCreateDirectoryRouteRoute =
  AppFaqGedFaqIdCreateDirectoryRouteImport.update({
    path: '/create-directory',
    getParentRoute: () => AppFaqGedFaqIdRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/faq/ged.$faqId/create-directory/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppEnterprisesEnterpriseIdUpdateContactContactIdRouteRoute =
  AppEnterprisesEnterpriseIdUpdateContactContactIdRouteImport.update({
    path: '/update-contact/$contactId',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/update-contact.$contactId/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdUpdateContactPasswordContactIdRouteRoute =
  AppEnterprisesEnterpriseIdUpdateContactPasswordContactIdRouteImport.update({
    path: '/update-contact-password/$contactId',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/update-contact-password.$contactId/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdTaskEmailTaskIdRouteRoute =
  AppEnterprisesEnterpriseIdTaskEmailTaskIdRouteImport.update({
    path: '/task-email/$taskId',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/task-email.$taskId/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdSendEmailToContactContactIdRouteRoute =
  AppEnterprisesEnterpriseIdSendEmailToContactContactIdRouteImport.update({
    path: '/send-email-to-contact/$contactId',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/send-email-to-contact.$contactId/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdRenameGedObjectObjectRelativePathRouteRoute =
  AppEnterprisesEnterpriseIdRenameGedObjectObjectRelativePathRouteImport.update(
    {
      path: '/rename-ged-object/$objectRelativePath',
      getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/rename-ged-object.$objectRelativePath/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdDeleteGedObjectObjectRelativePathRouteRoute =
  AppEnterprisesEnterpriseIdDeleteGedObjectObjectRelativePathRouteImport.update(
    {
      path: '/delete-ged-object/$objectRelativePath',
      getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/delete-ged-object.$objectRelativePath/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdDeleteContactContactIdRouteRoute =
  AppEnterprisesEnterpriseIdDeleteContactContactIdRouteImport.update({
    path: '/delete-contact/$contactId',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/delete-contact.$contactId/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdCreateContactBusinessContactIdRouteRoute =
  AppEnterprisesEnterpriseIdCreateContactBusinessContactIdRouteImport.update({
    path: '/create-contact-business/$contactId',
    getParentRoute: () => AppEnterprisesEnterpriseIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/create-contact-business.$contactId/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdAddressBookCreateRouteRoute =
  AppEnterprisesEnterpriseIdAddressBookCreateRouteImport.update({
    path: '/create',
    getParentRoute: () => AppEnterprisesEnterpriseIdAddressBookRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/address-book/create/route.lazy'
    ).then((d) => d.Route),
  )

const AppDashboardTaskEmailTaskIdReplyRouteRoute =
  AppDashboardTaskEmailTaskIdReplyRouteImport.update({
    path: '/reply',
    getParentRoute: () => AppDashboardTaskEmailTaskIdRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/dashboard/task-email.$taskId/reply/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppBusinessesRmaRmaRmaIdSupportRouteRoute =
  AppBusinessesRmaRmaRmaIdSupportRouteImport.update({
    path: '/support',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/businesses-rma_/rma.$rmaId/support/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppBusinessesRmaRmaRmaIdReceptionRouteRoute =
  AppBusinessesRmaRmaRmaIdReceptionRouteImport.update({
    path: '/reception',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/businesses-rma_/rma.$rmaId/reception/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppBusinessesRmaRmaRmaIdDeliveryRouteRoute =
  AppBusinessesRmaRmaRmaIdDeliveryRouteImport.update({
    path: '/delivery',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdRouteRoute,
  } as any).lazy(() =>
    import('./routes/app/businesses-rma_/rma.$rmaId/delivery/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AppBusinessesRmaBusinessBusinessIdQuotationRouteRoute =
  AppBusinessesRmaBusinessBusinessIdQuotationRouteImport.update({
    path: '/quotation',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/quotation/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardRouteImport.update({
    path: '/dashboard',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdBpRouteRoute =
  AppBusinessesRmaBusinessBusinessIdBpRouteImport.update({
    path: '/bp',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/bp/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdBlRouteRoute =
  AppBusinessesRmaBusinessBusinessIdBlRouteImport.update({
    path: '/bl',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/bl/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdBillRouteRoute =
  AppBusinessesRmaBusinessBusinessIdBillRouteImport.update({
    path: '/bill',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/bill/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdArcRouteRoute =
  AppBusinessesRmaBusinessBusinessIdArcRouteImport.update({
    path: '/arc',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/arc/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsSchedulerDetailsRdvIdUpdateRouteRoute =
  AppToolsSchedulerDetailsRdvIdUpdateRouteImport.update({
    path: '/update',
    getParentRoute: () => AppToolsSchedulerDetailsRdvIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/scheduler/details.$rdvId/update/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsSchedulerDetailsRdvIdDeleteRouteRoute =
  AppToolsSchedulerDetailsRdvIdDeleteRouteImport.update({
    path: '/delete',
    getParentRoute: () => AppToolsSchedulerDetailsRdvIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/scheduler/details.$rdvId/delete/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsFormationsUpdateFormationIdDetailsRouteRoute =
  AppToolsFormationsUpdateFormationIdDetailsRouteImport.update({
    path: '/details',
    getParentRoute: () => AppToolsFormationsUpdateFormationIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/formations/update.$formationId/details/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsFormationsUpdateFormationIdAddDetailRouteRoute =
  AppToolsFormationsUpdateFormationIdAddDetailRouteImport.update({
    path: '/add-detail',
    getParentRoute: () => AppToolsFormationsUpdateFormationIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/formations/update.$formationId/add-detail/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsFormationsSubscribersFormationDetailIdCreateRouteRoute =
  AppToolsFormationsSubscribersFormationDetailIdCreateRouteImport.update({
    path: '/create',
    getParentRoute: () =>
      AppToolsFormationsSubscribersFormationDetailIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/tools/formations/subscribers.$formationDetailId/create/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdManageUpdateVersionVersionIdRouteRoute =
  AppProductsProductIdManageUpdateVersionVersionIdRouteImport.update({
    path: '/update-version/$versionId',
    getParentRoute: () => AppProductsProductIdManageRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/manage/update-version.$versionId/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdManageUpdateStockStockIdRouteRoute =
  AppProductsProductIdManageUpdateStockStockIdRouteImport.update({
    path: '/update-stock/$stockId',
    getParentRoute: () => AppProductsProductIdManageRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/manage/update-stock.$stockId/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdManageUpdateSpecificationSpecificationIdRouteRoute =
  AppProductsProductIdManageUpdateSpecificationSpecificationIdRouteImport.update(
    {
      path: '/update-specification/$specificationId',
      getParentRoute: () => AppProductsProductIdManageRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/products_.$productId/manage/update-specification.$specificationId/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdManageStockHistoryStockIdRouteRoute =
  AppProductsProductIdManageStockHistoryStockIdRouteImport.update({
    path: '/stock-history/$stockId',
    getParentRoute: () => AppProductsProductIdManageRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/manage/stock-history.$stockId/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdManageRemoveAssociatedProductAssociatedProductIdRouteRoute =
  AppProductsProductIdManageRemoveAssociatedProductAssociatedProductIdRouteImport.update(
    {
      path: '/remove-associated-product/$associatedProductId',
      getParentRoute: () => AppProductsProductIdManageRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/products_.$productId/manage/remove-associated-product.$associatedProductId/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdManageDeleteVersionVersionIdRouteRoute =
  AppProductsProductIdManageDeleteVersionVersionIdRouteImport.update({
    path: '/delete-version/$versionId',
    getParentRoute: () => AppProductsProductIdManageRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/manage/delete-version.$versionId/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdManageDeleteStockStockIdRouteRoute =
  AppProductsProductIdManageDeleteStockStockIdRouteImport.update({
    path: '/delete-stock/$stockId',
    getParentRoute: () => AppProductsProductIdManageRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/manage/delete-stock.$stockId/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdManageDeleteSpecificationSpecificationIdRouteRoute =
  AppProductsProductIdManageDeleteSpecificationSpecificationIdRouteImport.update(
    {
      path: '/delete-specification/$specificationId',
      getParentRoute: () => AppProductsProductIdManageRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/products_.$productId/manage/delete-specification.$specificationId/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdManageAddSpecificationFilterIdRouteRoute =
  AppProductsProductIdManageAddSpecificationFilterIdRouteImport.update({
    path: '/$filterId',
    getParentRoute: () => AppProductsProductIdManageAddSpecificationRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/manage/add-specification/$filterId/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdInformationsTaskEmailTaskIdRouteRoute =
  AppProductsProductIdInformationsTaskEmailTaskIdRouteImport.update({
    path: '/task-email/$taskId',
    getParentRoute: () => AppProductsProductIdInformationsRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/informations/task-email.$taskId/route.lazy'
    ).then((d) => d.Route),
  )

const AppFaqGedFaqIdRenameItemRelativePathRouteRoute =
  AppFaqGedFaqIdRenameItemRelativePathRouteImport.update({
    path: '/rename/$itemRelativePath',
    getParentRoute: () => AppFaqGedFaqIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/faq/ged.$faqId/rename.$itemRelativePath/route.lazy'
    ).then((d) => d.Route),
  )

const AppFaqGedFaqIdDeleteItemRelativePathRouteRoute =
  AppFaqGedFaqIdDeleteItemRelativePathRouteImport.update({
    path: '/delete/$itemRelativePath',
    getParentRoute: () => AppFaqGedFaqIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/faq/ged.$faqId/delete.$itemRelativePath/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdTaskEmailTaskIdReplyRouteRoute =
  AppEnterprisesEnterpriseIdTaskEmailTaskIdReplyRouteImport.update({
    path: '/reply',
    getParentRoute: () => AppEnterprisesEnterpriseIdTaskEmailTaskIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/task-email.$taskId/reply/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdAddressBookUpdateAddressIdRouteRoute =
  AppEnterprisesEnterpriseIdAddressBookUpdateAddressIdRouteImport.update({
    path: '/update/$addressId',
    getParentRoute: () => AppEnterprisesEnterpriseIdAddressBookRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/address-book/update.$addressId/route.lazy'
    ).then((d) => d.Route),
  )

const AppEnterprisesEnterpriseIdAddressBookDeleteAddressIdRouteRoute =
  AppEnterprisesEnterpriseIdAddressBookDeleteAddressIdRouteImport.update({
    path: '/delete/$addressId',
    getParentRoute: () => AppEnterprisesEnterpriseIdAddressBookRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/enterprises_.$enterpriseId/address-book/delete.$addressId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdSupportPdfRouteRoute =
  AppBusinessesRmaRmaRmaIdSupportPdfRouteImport.update({
    path: '/pdf',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdSupportRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/support/pdf/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdSupportImportGedFilesRouteRoute =
  AppBusinessesRmaRmaRmaIdSupportImportGedFilesRouteImport.update({
    path: '/import-ged-files',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdSupportRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/support/import-ged-files/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdSupportCreateLifesheetRouteRoute =
  AppBusinessesRmaRmaRmaIdSupportCreateLifesheetRouteImport.update({
    path: '/create-lifesheet',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdSupportRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/support/create-lifesheet/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdSupportCreateGedDirectoryRouteRoute =
  AppBusinessesRmaRmaRmaIdSupportCreateGedDirectoryRouteImport.update({
    path: '/create-ged-directory',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdSupportRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/support/create-ged-directory/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdSupportCreateDetailRouteRoute =
  AppBusinessesRmaRmaRmaIdSupportCreateDetailRouteImport.update({
    path: '/create-detail',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdSupportRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/support/create-detail/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdReceptionPdfRouteRoute =
  AppBusinessesRmaRmaRmaIdReceptionPdfRouteImport.update({
    path: '/pdf',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdReceptionRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/reception/pdf/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdReceptionCreateDetailRouteRoute =
  AppBusinessesRmaRmaRmaIdReceptionCreateDetailRouteImport.update({
    path: '/create-detail',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdReceptionRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/reception/create-detail/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdDeliveryTravelVoucherRouteRoute =
  AppBusinessesRmaRmaRmaIdDeliveryTravelVoucherRouteImport.update({
    path: '/travel-voucher',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdDeliveryRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/delivery/travel-voucher/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdDeliveryPdfRouteRoute =
  AppBusinessesRmaRmaRmaIdDeliveryPdfRouteImport.update({
    path: '/pdf',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdDeliveryRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/delivery/pdf/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdDeliveryCreateDetailRouteRoute =
  AppBusinessesRmaRmaRmaIdDeliveryCreateDetailRouteImport.update({
    path: '/create-detail',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdDeliveryRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/delivery/create-detail/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteImport.update({
    path: '/businesses-rma/business/$businessId/assistance/$assistanceId',
    getParentRoute: () => AppRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdQuotationUpdateShippingPriceRouteRoute =
  AppBusinessesRmaBusinessBusinessIdQuotationUpdateShippingPriceRouteImport.update(
    {
      path: '/update-shipping-price',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdQuotationRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/quotation/update-shipping-price/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdQuotationPdfRouteRoute =
  AppBusinessesRmaBusinessBusinessIdQuotationPdfRouteImport.update({
    path: '/pdf',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdQuotationRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/quotation/pdf/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdQuotationCommercialNoticeRouteRoute =
  AppBusinessesRmaBusinessBusinessIdQuotationCommercialNoticeRouteImport.update(
    {
      path: '/commercial-notice',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdQuotationRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/quotation/commercial-notice/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardUpdateResponsibleRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardUpdateResponsibleRouteImport.update(
    {
      path: '/update-responsible',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/update-responsible/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardUpdateRepresentativeRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardUpdateRepresentativeRouteImport.update(
    {
      path: '/update-representative',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/update-representative/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardUpdateBillingAddressRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardUpdateBillingAddressRouteImport.update(
    {
      path: '/update-billing-address',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/update-billing-address/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardSendEmailRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardSendEmailRouteImport.update({
    path: '/send-email',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/send-email/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardImportGedFilesRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardImportGedFilesRouteImport.update({
    path: '/import-ged-files',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/import-ged-files/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardDeleteRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardDeleteRouteImport.update({
    path: '/delete',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/delete/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardCreateLinkRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardCreateLinkRouteImport.update({
    path: '/create-link',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/create-link/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardCreateLifesheetRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardCreateLifesheetRouteImport.update({
    path: '/create-lifesheet',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/create-lifesheet/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardCreateGedDirectoryRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardCreateGedDirectoryRouteImport.update(
    {
      path: '/create-ged-directory',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/create-ged-directory/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardAddressBookRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardAddressBookRouteImport.update({
    path: '/address-book',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/address-book/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdBpTravelVoucherRouteRoute =
  AppBusinessesRmaBusinessBusinessIdBpTravelVoucherRouteImport.update({
    path: '/travel-voucher',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdBpRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/bp/travel-voucher/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdBlSendByEmailRouteRoute =
  AppBusinessesRmaBusinessBusinessIdBlSendByEmailRouteImport.update({
    path: '/send-by-email',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdBlRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/bl/send-by-email/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdBillSendByEmailRouteRoute =
  AppBusinessesRmaBusinessBusinessIdBillSendByEmailRouteImport.update({
    path: '/send-by-email',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdBillRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/bill/send-by-email/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdBillCreditsRouteRoute =
  AppBusinessesRmaBusinessBusinessIdBillCreditsRouteImport.update({
    path: '/credits',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdBillRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/bill/credits/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdArcUpdateShippingPriceRouteRoute =
  AppBusinessesRmaBusinessBusinessIdArcUpdateShippingPriceRouteImport.update({
    path: '/update-shipping-price',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdArcRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/arc/update-shipping-price/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdArcPdfRouteRoute =
  AppBusinessesRmaBusinessBusinessIdArcPdfRouteImport.update({
    path: '/pdf',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdArcRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/arc/pdf/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsFormationsSubscribersFormationDetailIdSendEmailSubscriptionIdRouteRoute =
  AppToolsFormationsSubscribersFormationDetailIdSendEmailSubscriptionIdRouteImport.update(
    {
      path: '/send-email/$subscriptionId',
      getParentRoute: () =>
        AppToolsFormationsSubscribersFormationDetailIdRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/tools/formations/subscribers.$formationDetailId/send-email.$subscriptionId/route.lazy'
    ).then((d) => d.Route),
  )

const AppToolsFormationsSubscribersFormationDetailIdDeleteSubscriptionIdRouteRoute =
  AppToolsFormationsSubscribersFormationDetailIdDeleteSubscriptionIdRouteImport.update(
    {
      path: '/delete/$subscriptionId',
      getParentRoute: () =>
        AppToolsFormationsSubscribersFormationDetailIdRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/tools/formations/subscribers.$formationDetailId/delete.$subscriptionId/route.lazy'
    ).then((d) => d.Route),
  )

const AppProductsProductIdInformationsTaskEmailTaskIdReplyRouteRoute =
  AppProductsProductIdInformationsTaskEmailTaskIdReplyRouteImport.update({
    path: '/reply',
    getParentRoute: () =>
      AppProductsProductIdInformationsTaskEmailTaskIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/products_.$productId/informations/task-email.$taskId/reply/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdSupportUpdateDetailDetailIdRouteRoute =
  AppBusinessesRmaRmaRmaIdSupportUpdateDetailDetailIdRouteImport.update({
    path: '/update-detail/$detailId',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdSupportRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/support/update-detail.$detailId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdSupportTaskEmailTaskIdRouteRoute =
  AppBusinessesRmaRmaRmaIdSupportTaskEmailTaskIdRouteImport.update({
    path: '/task-email/$taskId',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdSupportRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/support/task-email.$taskId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdSupportRenameGedObjectObjectRelativePathRouteRoute =
  AppBusinessesRmaRmaRmaIdSupportRenameGedObjectObjectRelativePathRouteImport.update(
    {
      path: '/rename-ged-object/$objectRelativePath',
      getParentRoute: () => AppBusinessesRmaRmaRmaIdSupportRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/support/rename-ged-object.$objectRelativePath/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdSupportPdfSendByEmailRouteRoute =
  AppBusinessesRmaRmaRmaIdSupportPdfSendByEmailRouteImport.update({
    path: '/send-by-email',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdSupportPdfRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/support/pdf/send-by-email/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdSupportDeleteGedObjectRelativePathRouteRoute =
  AppBusinessesRmaRmaRmaIdSupportDeleteGedObjectRelativePathRouteImport.update({
    path: '/delete-ged-object/$relativePath',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdSupportRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/support/delete-ged-object.$relativePath/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdSupportDeleteDetailDetailIdRouteRoute =
  AppBusinessesRmaRmaRmaIdSupportDeleteDetailDetailIdRouteImport.update({
    path: '/delete-detail/$detailId',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdSupportRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/support/delete-detail.$detailId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdReceptionUpdateDetailDetailIdRouteRoute =
  AppBusinessesRmaRmaRmaIdReceptionUpdateDetailDetailIdRouteImport.update({
    path: '/update-detail/$detailId',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdReceptionRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/reception/update-detail.$detailId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdReceptionPdfSendByEmailRouteRoute =
  AppBusinessesRmaRmaRmaIdReceptionPdfSendByEmailRouteImport.update({
    path: '/send-by-email',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdReceptionPdfRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/reception/pdf/send-by-email/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdReceptionDeleteDetailDetailIdRouteRoute =
  AppBusinessesRmaRmaRmaIdReceptionDeleteDetailDetailIdRouteImport.update({
    path: '/delete-detail/$detailId',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdReceptionRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/reception/delete-detail.$detailId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdDeliveryUpdateDetailDetailIdRouteRoute =
  AppBusinessesRmaRmaRmaIdDeliveryUpdateDetailDetailIdRouteImport.update({
    path: '/update-detail/$detailId',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdDeliveryRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/delivery/update-detail.$detailId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdDeliveryPdfSendByEmailRouteRoute =
  AppBusinessesRmaRmaRmaIdDeliveryPdfSendByEmailRouteImport.update({
    path: '/send-by-email',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdDeliveryPdfRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/delivery/pdf/send-by-email/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdDeliveryDeleteDetailDetailIdRouteRoute =
  AppBusinessesRmaRmaRmaIdDeliveryDeleteDetailDetailIdRouteImport.update({
    path: '/delete-detail/$detailId',
    getParentRoute: () => AppBusinessesRmaRmaRmaIdDeliveryRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/delivery/delete-detail.$detailId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdPdfRouteRoute =
  AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdPdfRouteImport.update(
    {
      path: '/pdf',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/pdf/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdImportGedFilesRouteRoute =
  AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdImportGedFilesRouteImport.update(
    {
      path: '/import-ged-files',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/import-ged-files/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdEditSubtitleRouteRoute =
  AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdEditSubtitleRouteImport.update(
    {
      path: '/edit-subtitle',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/edit-subtitle/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdEditNoBilledTimeRouteRoute =
  AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdEditNoBilledTimeRouteImport.update(
    {
      path: '/edit-no-billed-time',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/edit-no-billed-time/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdEditCumulatedTimeRouteRoute =
  AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdEditCumulatedTimeRouteImport.update(
    {
      path: '/edit-cumulated-time',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/edit-cumulated-time/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdDeleteRouteRoute =
  AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdDeleteRouteImport.update(
    {
      path: '/delete',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/delete/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdCreateLifesheetRouteRoute =
  AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdCreateLifesheetRouteImport.update(
    {
      path: '/create-lifesheet',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/create-lifesheet/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdCreateGedDirectoryRouteRoute =
  AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdCreateGedDirectoryRouteImport.update(
    {
      path: '/create-ged-directory',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/create-ged-directory/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdQuotationUpdateSubquotationSubquotationIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdQuotationUpdateSubquotationSubquotationIdRouteImport.update(
    {
      path: '/update-subquotation/$subquotationId',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdQuotationRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/quotation/update-subquotation.$subquotationId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdQuotationUpdateDetailDetailIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdQuotationUpdateDetailDetailIdRouteImport.update(
    {
      path: '/update-detail/$detailId',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdQuotationRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/quotation/update-detail.$detailId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdQuotationPdfSendByEmailRouteRoute =
  AppBusinessesRmaBusinessBusinessIdQuotationPdfSendByEmailRouteImport.update({
    path: '/send-by-email',
    getParentRoute: () =>
      AppBusinessesRmaBusinessBusinessIdQuotationPdfRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/quotation/pdf/send-by-email/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdQuotationDeleteSubquotationSubquotationIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdQuotationDeleteSubquotationSubquotationIdRouteImport.update(
    {
      path: '/delete-subquotation/$subquotationId',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdQuotationRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/quotation/delete-subquotation.$subquotationId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdQuotationDeleteDetailDetailIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdQuotationDeleteDetailDetailIdRouteImport.update(
    {
      path: '/delete-detail/$detailId',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdQuotationRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/quotation/delete-detail.$detailId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdQuotationCreateDetailSubquotationIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdQuotationCreateDetailSubquotationIdRouteImport.update(
    {
      path: '/create-detail/$subquotationId',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdQuotationRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/quotation/create-detail.$subquotationId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdQuotationCreateAssociatedDetailDetailIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdQuotationCreateAssociatedDetailDetailIdRouteImport.update(
    {
      path: '/create-associated-detail/$detailId',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdQuotationRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/quotation/create-associated-detail.$detailId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdQuotationCommercialNoticeSendByEmailRouteRoute =
  AppBusinessesRmaBusinessBusinessIdQuotationCommercialNoticeSendByEmailRouteImport.update(
    {
      path: '/send-by-email',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdQuotationCommercialNoticeRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/quotation/commercial-notice/send-by-email/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardTaskEmailTaskIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardTaskEmailTaskIdRouteImport.update({
    path: '/task-email/$taskId',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/task-email.$taskId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardRenameGedObjectObjectRelativePathRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardRenameGedObjectObjectRelativePathRouteImport.update(
    {
      path: '/rename-ged-object/$objectRelativePath',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/rename-ged-object.$objectRelativePath/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardDeleteLinkAssociatedIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardDeleteLinkAssociatedIdRouteImport.update(
    {
      path: '/delete-link/$associatedId',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/delete-link.$associatedId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardDeleteGedObjectObjectRelativePathRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardDeleteGedObjectObjectRelativePathRouteImport.update(
    {
      path: '/delete-ged-object/$objectRelativePath',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/delete-ged-object.$objectRelativePath/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardConfirmQuotationImportOtherBusinessIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardConfirmQuotationImportOtherBusinessIdRouteImport.update(
    {
      path: '/confirm-quotation-import/$otherBusinessId',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/confirm-quotation-import.$otherBusinessId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardAddressBookCreateRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardAddressBookCreateRouteImport.update(
    {
      path: '/create',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdDashboardAddressBookRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/address-book/create/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdBpUpdateDetailDetailIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdBpUpdateDetailDetailIdRouteImport.update({
    path: '/update-detail/$detailId',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdBpRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/bp/update-detail.$detailId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdBpDeleteSerialSerialIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdBpDeleteSerialSerialIdRouteImport.update({
    path: '/delete-serial/$serialId',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdBpRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/bp/delete-serial.$serialId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdBpDeleteDetailDetailIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdBpDeleteDetailDetailIdRouteImport.update({
    path: '/delete-detail/$detailId',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdBpRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/bp/delete-detail.$detailId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdBpCreateSerialRmaSerialIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdBpCreateSerialRmaSerialIdRouteImport.update(
    {
      path: '/create-serial-rma/$serialId',
      getParentRoute: () => AppBusinessesRmaBusinessBusinessIdBpRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/bp/create-serial-rma.$serialId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdBpCreateDetailRmaDetailIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdBpCreateDetailRmaDetailIdRouteImport.update(
    {
      path: '/create-detail-rma/$detailId',
      getParentRoute: () => AppBusinessesRmaBusinessBusinessIdBpRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/bp/create-detail-rma.$detailId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdBpAddSerialDetailIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdBpAddSerialDetailIdRouteImport.update({
    path: '/add-serial/$detailId',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdBpRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/bp/add-serial.$detailId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdBillCreditsSendByEmailRouteRoute =
  AppBusinessesRmaBusinessBusinessIdBillCreditsSendByEmailRouteImport.update({
    path: '/send-by-email',
    getParentRoute: () =>
      AppBusinessesRmaBusinessBusinessIdBillCreditsRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/bill/credits/send-by-email/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdArcUpdateDetailDetailIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdArcUpdateDetailDetailIdRouteImport.update({
    path: '/update-detail/$detailId',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdArcRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/arc/update-detail.$detailId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdArcPdfSendByEmailRouteRoute =
  AppBusinessesRmaBusinessBusinessIdArcPdfSendByEmailRouteImport.update({
    path: '/send-by-email',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdArcPdfRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/arc/pdf/send-by-email/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdArcDeleteDetailDetailIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdArcDeleteDetailDetailIdRouteImport.update({
    path: '/delete-detail/$detailId',
    getParentRoute: () => AppBusinessesRmaBusinessBusinessIdArcRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/arc/delete-detail.$detailId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdSupportTaskEmailTaskIdReplyRouteRoute =
  AppBusinessesRmaRmaRmaIdSupportTaskEmailTaskIdReplyRouteImport.update({
    path: '/reply',
    getParentRoute: () =>
      AppBusinessesRmaRmaRmaIdSupportTaskEmailTaskIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/support/task-email.$taskId/reply/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdReceptionPdfSendByEmailPredefinedMessagesRouteRoute =
  AppBusinessesRmaRmaRmaIdReceptionPdfSendByEmailPredefinedMessagesRouteImport.update(
    {
      path: '/predefined-messages',
      getParentRoute: () =>
        AppBusinessesRmaRmaRmaIdReceptionPdfSendByEmailRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/reception/pdf/send-by-email/predefined-messages/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaRmaRmaIdDeliveryPdfSendByEmailPredefinedMessagesRouteRoute =
  AppBusinessesRmaRmaRmaIdDeliveryPdfSendByEmailPredefinedMessagesRouteImport.update(
    {
      path: '/predefined-messages',
      getParentRoute: () =>
        AppBusinessesRmaRmaRmaIdDeliveryPdfSendByEmailRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/rma.$rmaId/delivery/pdf/send-by-email/predefined-messages/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRenameGedObjectObjectRelativePathRouteRoute =
  AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRenameGedObjectObjectRelativePathRouteImport.update(
    {
      path: '/rename-ged-object/$objectRelativePath',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/rename-ged-object.$objectRelativePath/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdPdfSendByEmailRouteRoute =
  AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdPdfSendByEmailRouteImport.update(
    {
      path: '/send-by-email',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdPdfRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/pdf/send-by-email/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdDeleteGedObjectObjectRelativePathRouteRoute =
  AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdDeleteGedObjectObjectRelativePathRouteImport.update(
    {
      path: '/delete-ged-object/$objectRelativePath',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId_.assistance.$assistanceId/delete-ged-object.$objectRelativePath/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardAddressBookUpdateAddressIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardAddressBookUpdateAddressIdRouteImport.update(
    {
      path: '/update/$addressId',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdDashboardAddressBookRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/address-book/update.$addressId/route.lazy'
    ).then((d) => d.Route),
  )

const AppBusinessesRmaBusinessBusinessIdDashboardAddressBookDeleteAddressIdRouteRoute =
  AppBusinessesRmaBusinessBusinessIdDashboardAddressBookDeleteAddressIdRouteImport.update(
    {
      path: '/delete/$addressId',
      getParentRoute: () =>
        AppBusinessesRmaBusinessBusinessIdDashboardAddressBookRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      './routes/app/businesses-rma_/business.$businessId/dashboard/address-book/delete.$addressId/route.lazy'
    ).then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/app/businesses-rma': {
      id: '/app/businesses-rma'
      path: '/businesses-rma'
      fullPath: '/app/businesses-rma'
      preLoaderRoute: typeof AppBusinessesRmaRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/dashboard': {
      id: '/app/dashboard'
      path: '/dashboard'
      fullPath: '/app/dashboard'
      preLoaderRoute: typeof AppDashboardRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/enterprises': {
      id: '/app/enterprises'
      path: '/enterprises'
      fullPath: '/app/enterprises'
      preLoaderRoute: typeof AppEnterprisesRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/external-links': {
      id: '/app/external-links'
      path: '/external-links'
      fullPath: '/app/external-links'
      preLoaderRoute: typeof AppExternalLinksRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/faq': {
      id: '/app/faq'
      path: '/faq'
      fullPath: '/app/faq'
      preLoaderRoute: typeof AppFaqRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/products': {
      id: '/app/products'
      path: '/products'
      fullPath: '/app/products'
      preLoaderRoute: typeof AppProductsRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/tools': {
      id: '/app/tools'
      path: '/tools'
      fullPath: '/app/tools'
      preLoaderRoute: typeof AppToolsRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/app/businesses-rma/representative-turnover': {
      id: '/app/businesses-rma/representative-turnover'
      path: '/representative-turnover'
      fullPath: '/app/businesses-rma/representative-turnover'
      preLoaderRoute: typeof AppBusinessesRmaRepresentativeTurnoverRouteImport
      parentRoute: typeof AppBusinessesRmaRouteImport
    }
    '/app/businesses-rma/search-by-products': {
      id: '/app/businesses-rma/search-by-products'
      path: '/search-by-products'
      fullPath: '/app/businesses-rma/search-by-products'
      preLoaderRoute: typeof AppBusinessesRmaSearchByProductsRouteImport
      parentRoute: typeof AppBusinessesRmaRouteImport
    }
    '/app/dashboard/create-collective-task': {
      id: '/app/dashboard/create-collective-task'
      path: '/create-collective-task'
      fullPath: '/app/dashboard/create-collective-task'
      preLoaderRoute: typeof AppDashboardCreateCollectiveTaskRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/dashboard/create-personal-task': {
      id: '/app/dashboard/create-personal-task'
      path: '/create-personal-task'
      fullPath: '/app/dashboard/create-personal-task'
      preLoaderRoute: typeof AppDashboardCreatePersonalTaskRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/dashboard/create-progressive-info': {
      id: '/app/dashboard/create-progressive-info'
      path: '/create-progressive-info'
      fullPath: '/app/dashboard/create-progressive-info'
      preLoaderRoute: typeof AppDashboardCreateProgressiveInfoRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/dashboard/delete-collective-tasks': {
      id: '/app/dashboard/delete-collective-tasks'
      path: '/delete-collective-tasks'
      fullPath: '/app/dashboard/delete-collective-tasks'
      preLoaderRoute: typeof AppDashboardDeleteCollectiveTasksRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/enterprises/$enterpriseId': {
      id: '/app/enterprises/$enterpriseId'
      path: '/enterprises/$enterpriseId'
      fullPath: '/app/enterprises/$enterpriseId'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/external-links/$externalLinkId': {
      id: '/app/external-links/$externalLinkId'
      path: '/external-links/$externalLinkId'
      fullPath: '/app/external-links/$externalLinkId'
      preLoaderRoute: typeof AppExternalLinksExternalLinkIdRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/faq/create': {
      id: '/app/faq/create'
      path: '/create'
      fullPath: '/app/faq/create'
      preLoaderRoute: typeof AppFaqCreateRouteImport
      parentRoute: typeof AppFaqRouteImport
    }
    '/app/products/serial-numbers': {
      id: '/app/products/serial-numbers'
      path: '/serial-numbers'
      fullPath: '/app/products/serial-numbers'
      preLoaderRoute: typeof AppProductsSerialNumbersRouteImport
      parentRoute: typeof AppProductsRouteImport
    }
    '/app/products/$productId': {
      id: '/app/products/$productId'
      path: '/products/$productId'
      fullPath: '/app/products/$productId'
      preLoaderRoute: typeof AppProductsProductIdRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/tools/credit': {
      id: '/app/tools/credit'
      path: '/credit'
      fullPath: '/app/tools/credit'
      preLoaderRoute: typeof AppToolsCreditRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/ddns': {
      id: '/app/tools/ddns'
      path: '/ddns'
      fullPath: '/app/tools/ddns'
      preLoaderRoute: typeof AppToolsDdnsRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/departments': {
      id: '/app/tools/departments'
      path: '/departments'
      fullPath: '/app/tools/departments'
      preLoaderRoute: typeof AppToolsDepartmentsRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/emails': {
      id: '/app/tools/emails'
      path: '/emails'
      fullPath: '/app/tools/emails'
      preLoaderRoute: typeof AppToolsEmailsRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/external-links': {
      id: '/app/tools/external-links'
      path: '/external-links'
      fullPath: '/app/tools/external-links'
      preLoaderRoute: typeof AppToolsExternalLinksRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/formations': {
      id: '/app/tools/formations'
      path: '/formations'
      fullPath: '/app/tools/formations'
      preLoaderRoute: typeof AppToolsFormationsRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/global-turnover': {
      id: '/app/tools/global-turnover'
      path: '/global-turnover'
      fullPath: '/app/tools/global-turnover'
      preLoaderRoute: typeof AppToolsGlobalTurnoverRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/mails': {
      id: '/app/tools/mails'
      path: '/mails'
      fullPath: '/app/tools/mails'
      preLoaderRoute: typeof AppToolsMailsRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/menu': {
      id: '/app/tools/menu'
      path: '/menu'
      fullPath: '/app/tools/menu'
      preLoaderRoute: typeof AppToolsMenuRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/news': {
      id: '/app/tools/news'
      path: '/news'
      fullPath: '/app/tools/news'
      preLoaderRoute: typeof AppToolsNewsRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/predefined-messages': {
      id: '/app/tools/predefined-messages'
      path: '/predefined-messages'
      fullPath: '/app/tools/predefined-messages'
      preLoaderRoute: typeof AppToolsPredefinedMessagesRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/predefined-texts': {
      id: '/app/tools/predefined-texts'
      path: '/predefined-texts'
      fullPath: '/app/tools/predefined-texts'
      preLoaderRoute: typeof AppToolsPredefinedTextsRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/product-filters': {
      id: '/app/tools/product-filters'
      path: '/product-filters'
      fullPath: '/app/tools/product-filters'
      preLoaderRoute: typeof AppToolsProductFiltersRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/product-inventory': {
      id: '/app/tools/product-inventory'
      path: '/product-inventory'
      fullPath: '/app/tools/product-inventory'
      preLoaderRoute: typeof AppToolsProductInventoryRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/product-shelves': {
      id: '/app/tools/product-shelves'
      path: '/product-shelves'
      fullPath: '/app/tools/product-shelves'
      preLoaderRoute: typeof AppToolsProductShelvesRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/representatives-map': {
      id: '/app/tools/representatives-map'
      path: '/representatives-map'
      fullPath: '/app/tools/representatives-map'
      preLoaderRoute: typeof AppToolsRepresentativesMapRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/representatives-turnover': {
      id: '/app/tools/representatives-turnover'
      path: '/representatives-turnover'
      fullPath: '/app/tools/representatives-turnover'
      preLoaderRoute: typeof AppToolsRepresentativesTurnoverRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/scheduler': {
      id: '/app/tools/scheduler'
      path: '/scheduler'
      fullPath: '/app/tools/scheduler'
      preLoaderRoute: typeof AppToolsSchedulerRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/vva': {
      id: '/app/tools/vva'
      path: '/vva'
      fullPath: '/app/tools/vva'
      preLoaderRoute: typeof AppToolsVvaRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/auth/reset-password/$token': {
      id: '/auth/reset-password/$token'
      path: '/reset-password/$token'
      fullPath: '/auth/reset-password/$token'
      preLoaderRoute: typeof AuthResetPasswordTokenRouteLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/app/tools/': {
      id: '/app/tools/'
      path: '/'
      fullPath: '/app/tools/'
      preLoaderRoute: typeof AppToolsIndexImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/businesses-rma/business/$businessId': {
      id: '/app/businesses-rma/business/$businessId'
      path: '/businesses-rma/business/$businessId'
      fullPath: '/app/businesses-rma/business/$businessId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/businesses-rma/rma/$rmaId': {
      id: '/app/businesses-rma/rma/$rmaId'
      path: '/businesses-rma/rma/$rmaId'
      fullPath: '/app/businesses-rma/rma/$rmaId'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/dashboard/archive-personal-task/$taskId': {
      id: '/app/dashboard/archive-personal-task/$taskId'
      path: '/archive-personal-task/$taskId'
      fullPath: '/app/dashboard/archive-personal-task/$taskId'
      preLoaderRoute: typeof AppDashboardArchivePersonalTaskTaskIdRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/dashboard/delete-collective-task/$taskId': {
      id: '/app/dashboard/delete-collective-task/$taskId'
      path: '/delete-collective-task/$taskId'
      fullPath: '/app/dashboard/delete-collective-task/$taskId'
      preLoaderRoute: typeof AppDashboardDeleteCollectiveTaskTaskIdRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/dashboard/delete-progressive-info/$progressiveInfoId': {
      id: '/app/dashboard/delete-progressive-info/$progressiveInfoId'
      path: '/delete-progressive-info/$progressiveInfoId'
      fullPath: '/app/dashboard/delete-progressive-info/$progressiveInfoId'
      preLoaderRoute: typeof AppDashboardDeleteProgressiveInfoProgressiveInfoIdRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/dashboard/link-personal-task/$taskId': {
      id: '/app/dashboard/link-personal-task/$taskId'
      path: '/link-personal-task/$taskId'
      fullPath: '/app/dashboard/link-personal-task/$taskId'
      preLoaderRoute: typeof AppDashboardLinkPersonalTaskTaskIdRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/dashboard/other-personal-tasks/$profileId': {
      id: '/app/dashboard/other-personal-tasks/$profileId'
      path: '/other-personal-tasks/$profileId'
      fullPath: '/app/dashboard/other-personal-tasks/$profileId'
      preLoaderRoute: typeof AppDashboardOtherPersonalTasksProfileIdRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/dashboard/personal-task-details/$taskId': {
      id: '/app/dashboard/personal-task-details/$taskId'
      path: '/personal-task-details/$taskId'
      fullPath: '/app/dashboard/personal-task-details/$taskId'
      preLoaderRoute: typeof AppDashboardPersonalTaskDetailsTaskIdRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/dashboard/scheduler-event-details/$eventId': {
      id: '/app/dashboard/scheduler-event-details/$eventId'
      path: '/scheduler-event-details/$eventId'
      fullPath: '/app/dashboard/scheduler-event-details/$eventId'
      preLoaderRoute: typeof AppDashboardSchedulerEventDetailsEventIdRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/dashboard/take-collective-task/$taskId': {
      id: '/app/dashboard/take-collective-task/$taskId'
      path: '/take-collective-task/$taskId'
      fullPath: '/app/dashboard/take-collective-task/$taskId'
      preLoaderRoute: typeof AppDashboardTakeCollectiveTaskTaskIdRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/dashboard/task-comments/$taskId': {
      id: '/app/dashboard/task-comments/$taskId'
      path: '/task-comments/$taskId'
      fullPath: '/app/dashboard/task-comments/$taskId'
      preLoaderRoute: typeof AppDashboardTaskCommentsTaskIdRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/dashboard/task-email/$taskId': {
      id: '/app/dashboard/task-email/$taskId'
      path: '/task-email/$taskId'
      fullPath: '/app/dashboard/task-email/$taskId'
      preLoaderRoute: typeof AppDashboardTaskEmailTaskIdRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/dashboard/transfer-task/$taskId': {
      id: '/app/dashboard/transfer-task/$taskId'
      path: '/transfer-task/$taskId'
      fullPath: '/app/dashboard/transfer-task/$taskId'
      preLoaderRoute: typeof AppDashboardTransferTaskTaskIdRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/dashboard/update-personal-task-deadline/$taskId': {
      id: '/app/dashboard/update-personal-task-deadline/$taskId'
      path: '/update-personal-task-deadline/$taskId'
      fullPath: '/app/dashboard/update-personal-task-deadline/$taskId'
      preLoaderRoute: typeof AppDashboardUpdatePersonalTaskDeadlineTaskIdRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/dashboard/update-progressive-info/$progressiveInfoId': {
      id: '/app/dashboard/update-progressive-info/$progressiveInfoId'
      path: '/update-progressive-info/$progressiveInfoId'
      fullPath: '/app/dashboard/update-progressive-info/$progressiveInfoId'
      preLoaderRoute: typeof AppDashboardUpdateProgressiveInfoProgressiveInfoIdRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/dashboard/validate-personal-task/$taskId': {
      id: '/app/dashboard/validate-personal-task/$taskId'
      path: '/validate-personal-task/$taskId'
      fullPath: '/app/dashboard/validate-personal-task/$taskId'
      preLoaderRoute: typeof AppDashboardValidatePersonalTaskTaskIdRouteImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/app/enterprises/create-contact-business/$contactId': {
      id: '/app/enterprises/create-contact-business/$contactId'
      path: '/create-contact-business/$contactId'
      fullPath: '/app/enterprises/create-contact-business/$contactId'
      preLoaderRoute: typeof AppEnterprisesCreateContactBusinessContactIdRouteImport
      parentRoute: typeof AppEnterprisesRouteImport
    }
    '/app/enterprises/create-contact-travel-voucher/$contactId': {
      id: '/app/enterprises/create-contact-travel-voucher/$contactId'
      path: '/create-contact-travel-voucher/$contactId'
      fullPath: '/app/enterprises/create-contact-travel-voucher/$contactId'
      preLoaderRoute: typeof AppEnterprisesCreateContactTravelVoucherContactIdRouteImport
      parentRoute: typeof AppEnterprisesRouteImport
    }
    '/app/enterprises/create-contact/$enterpriseId': {
      id: '/app/enterprises/create-contact/$enterpriseId'
      path: '/create-contact/$enterpriseId'
      fullPath: '/app/enterprises/create-contact/$enterpriseId'
      preLoaderRoute: typeof AppEnterprisesCreateContactEnterpriseIdRouteImport
      parentRoute: typeof AppEnterprisesRouteImport
    }
    '/app/enterprises/create-enterprise-rma/$enterpriseId': {
      id: '/app/enterprises/create-enterprise-rma/$enterpriseId'
      path: '/create-enterprise-rma/$enterpriseId'
      fullPath: '/app/enterprises/create-enterprise-rma/$enterpriseId'
      preLoaderRoute: typeof AppEnterprisesCreateEnterpriseRmaEnterpriseIdRouteImport
      parentRoute: typeof AppEnterprisesRouteImport
    }
    '/app/enterprises/delete-contact/$contactId': {
      id: '/app/enterprises/delete-contact/$contactId'
      path: '/delete-contact/$contactId'
      fullPath: '/app/enterprises/delete-contact/$contactId'
      preLoaderRoute: typeof AppEnterprisesDeleteContactContactIdRouteImport
      parentRoute: typeof AppEnterprisesRouteImport
    }
    '/app/enterprises/send-email-to-contact/$contactId': {
      id: '/app/enterprises/send-email-to-contact/$contactId'
      path: '/send-email-to-contact/$contactId'
      fullPath: '/app/enterprises/send-email-to-contact/$contactId'
      preLoaderRoute: typeof AppEnterprisesSendEmailToContactContactIdRouteImport
      parentRoute: typeof AppEnterprisesRouteImport
    }
    '/app/enterprises/update-contact-password/$contactId': {
      id: '/app/enterprises/update-contact-password/$contactId'
      path: '/update-contact-password/$contactId'
      fullPath: '/app/enterprises/update-contact-password/$contactId'
      preLoaderRoute: typeof AppEnterprisesUpdateContactPasswordContactIdRouteImport
      parentRoute: typeof AppEnterprisesRouteImport
    }
    '/app/enterprises/update-contact/$contactId': {
      id: '/app/enterprises/update-contact/$contactId'
      path: '/update-contact/$contactId'
      fullPath: '/app/enterprises/update-contact/$contactId'
      preLoaderRoute: typeof AppEnterprisesUpdateContactContactIdRouteImport
      parentRoute: typeof AppEnterprisesRouteImport
    }
    '/app/enterprises/$enterpriseId/address-book': {
      id: '/app/enterprises/$enterpriseId/address-book'
      path: '/address-book'
      fullPath: '/app/enterprises/$enterpriseId/address-book'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdAddressBookRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/create-contact': {
      id: '/app/enterprises/$enterpriseId/create-contact'
      path: '/create-contact'
      fullPath: '/app/enterprises/$enterpriseId/create-contact'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdCreateContactRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/create-ged-directory': {
      id: '/app/enterprises/$enterpriseId/create-ged-directory'
      path: '/create-ged-directory'
      fullPath: '/app/enterprises/$enterpriseId/create-ged-directory'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdCreateGedDirectoryRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/create-lifesheet-comment': {
      id: '/app/enterprises/$enterpriseId/create-lifesheet-comment'
      path: '/create-lifesheet-comment'
      fullPath: '/app/enterprises/$enterpriseId/create-lifesheet-comment'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdCreateLifesheetCommentRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/delete': {
      id: '/app/enterprises/$enterpriseId/delete'
      path: '/delete'
      fullPath: '/app/enterprises/$enterpriseId/delete'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdDeleteRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/import-contacts': {
      id: '/app/enterprises/$enterpriseId/import-contacts'
      path: '/import-contacts'
      fullPath: '/app/enterprises/$enterpriseId/import-contacts'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdImportContactsRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/import-ged-files': {
      id: '/app/enterprises/$enterpriseId/import-ged-files'
      path: '/import-ged-files'
      fullPath: '/app/enterprises/$enterpriseId/import-ged-files'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdImportGedFilesRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/update': {
      id: '/app/enterprises/$enterpriseId/update'
      path: '/update'
      fullPath: '/app/enterprises/$enterpriseId/update'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdUpdateRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/update-accountability': {
      id: '/app/enterprises/$enterpriseId/update-accountability'
      path: '/update-accountability'
      fullPath: '/app/enterprises/$enterpriseId/update-accountability'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdUpdateAccountabilityRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/update-category': {
      id: '/app/enterprises/$enterpriseId/update-category'
      path: '/update-category'
      fullPath: '/app/enterprises/$enterpriseId/update-category'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdUpdateCategoryRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/update-representative': {
      id: '/app/enterprises/$enterpriseId/update-representative'
      path: '/update-representative'
      fullPath: '/app/enterprises/$enterpriseId/update-representative'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdUpdateRepresentativeRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/faq/archive/$faqId': {
      id: '/app/faq/archive/$faqId'
      path: '/archive/$faqId'
      fullPath: '/app/faq/archive/$faqId'
      preLoaderRoute: typeof AppFaqArchiveFaqIdRouteImport
      parentRoute: typeof AppFaqRouteImport
    }
    '/app/faq/delete/$faqId': {
      id: '/app/faq/delete/$faqId'
      path: '/delete/$faqId'
      fullPath: '/app/faq/delete/$faqId'
      preLoaderRoute: typeof AppFaqDeleteFaqIdRouteImport
      parentRoute: typeof AppFaqRouteImport
    }
    '/app/faq/ged/$faqId': {
      id: '/app/faq/ged/$faqId'
      path: '/ged/$faqId'
      fullPath: '/app/faq/ged/$faqId'
      preLoaderRoute: typeof AppFaqGedFaqIdRouteImport
      parentRoute: typeof AppFaqRouteImport
    }
    '/app/faq/send-by-email/$faqId': {
      id: '/app/faq/send-by-email/$faqId'
      path: '/send-by-email/$faqId'
      fullPath: '/app/faq/send-by-email/$faqId'
      preLoaderRoute: typeof AppFaqSendByEmailFaqIdRouteImport
      parentRoute: typeof AppFaqRouteImport
    }
    '/app/faq/update/$faqId': {
      id: '/app/faq/update/$faqId'
      path: '/update/$faqId'
      fullPath: '/app/faq/update/$faqId'
      preLoaderRoute: typeof AppFaqUpdateFaqIdRouteImport
      parentRoute: typeof AppFaqRouteImport
    }
    '/app/products/serial-numbers/create': {
      id: '/app/products/serial-numbers/create'
      path: '/create'
      fullPath: '/app/products/serial-numbers/create'
      preLoaderRoute: typeof AppProductsSerialNumbersCreateRouteImport
      parentRoute: typeof AppProductsSerialNumbersRouteImport
    }
    '/app/products/$productId/informations': {
      id: '/app/products/$productId/informations'
      path: '/informations'
      fullPath: '/app/products/$productId/informations'
      preLoaderRoute: typeof AppProductsProductIdInformationsRouteImport
      parentRoute: typeof AppProductsProductIdRouteImport
    }
    '/app/products/$productId/manage': {
      id: '/app/products/$productId/manage'
      path: '/manage'
      fullPath: '/app/products/$productId/manage'
      preLoaderRoute: typeof AppProductsProductIdManageRouteImport
      parentRoute: typeof AppProductsProductIdRouteImport
    }
    '/app/tools/credit/details': {
      id: '/app/tools/credit/details'
      path: '/details'
      fullPath: '/app/tools/credit/details'
      preLoaderRoute: typeof AppToolsCreditDetailsRouteImport
      parentRoute: typeof AppToolsCreditRouteImport
    }
    '/app/tools/credit/show': {
      id: '/app/tools/credit/show'
      path: '/show'
      fullPath: '/app/tools/credit/show'
      preLoaderRoute: typeof AppToolsCreditShowRouteImport
      parentRoute: typeof AppToolsCreditRouteImport
    }
    '/app/tools/ddns/create': {
      id: '/app/tools/ddns/create'
      path: '/create'
      fullPath: '/app/tools/ddns/create'
      preLoaderRoute: typeof AppToolsDdnsCreateRouteImport
      parentRoute: typeof AppToolsDdnsRouteImport
    }
    '/app/tools/departments/create': {
      id: '/app/tools/departments/create'
      path: '/create'
      fullPath: '/app/tools/departments/create'
      preLoaderRoute: typeof AppToolsDepartmentsCreateRouteImport
      parentRoute: typeof AppToolsDepartmentsRouteImport
    }
    '/app/tools/emails/$emailId': {
      id: '/app/tools/emails/$emailId'
      path: '/$emailId'
      fullPath: '/app/tools/emails/$emailId'
      preLoaderRoute: typeof AppToolsEmailsEmailIdRouteImport
      parentRoute: typeof AppToolsEmailsRouteImport
    }
    '/app/tools/emails/send': {
      id: '/app/tools/emails/send'
      path: '/emails/send'
      fullPath: '/app/tools/emails/send'
      preLoaderRoute: typeof AppToolsEmailsSendRouteImport
      parentRoute: typeof AppToolsRouteImport
    }
    '/app/tools/external-links/create': {
      id: '/app/tools/external-links/create'
      path: '/create'
      fullPath: '/app/tools/external-links/create'
      preLoaderRoute: typeof AppToolsExternalLinksCreateRouteImport
      parentRoute: typeof AppToolsExternalLinksRouteImport
    }
    '/app/tools/formations/create': {
      id: '/app/tools/formations/create'
      path: '/create'
      fullPath: '/app/tools/formations/create'
      preLoaderRoute: typeof AppToolsFormationsCreateRouteImport
      parentRoute: typeof AppToolsFormationsRouteImport
    }
    '/app/tools/mails/create': {
      id: '/app/tools/mails/create'
      path: '/create'
      fullPath: '/app/tools/mails/create'
      preLoaderRoute: typeof AppToolsMailsCreateRouteImport
      parentRoute: typeof AppToolsMailsRouteImport
    }
    '/app/tools/menu/create-enterprise': {
      id: '/app/tools/menu/create-enterprise'
      path: '/create-enterprise'
      fullPath: '/app/tools/menu/create-enterprise'
      preLoaderRoute: typeof AppToolsMenuCreateEnterpriseRouteImport
      parentRoute: typeof AppToolsMenuRouteImport
    }
    '/app/tools/menu/create-product': {
      id: '/app/tools/menu/create-product'
      path: '/create-product'
      fullPath: '/app/tools/menu/create-product'
      preLoaderRoute: typeof AppToolsMenuCreateProductRouteImport
      parentRoute: typeof AppToolsMenuRouteImport
    }
    '/app/tools/news/create': {
      id: '/app/tools/news/create'
      path: '/create'
      fullPath: '/app/tools/news/create'
      preLoaderRoute: typeof AppToolsNewsCreateRouteImport
      parentRoute: typeof AppToolsNewsRouteImport
    }
    '/app/tools/predefined-messages/create': {
      id: '/app/tools/predefined-messages/create'
      path: '/create'
      fullPath: '/app/tools/predefined-messages/create'
      preLoaderRoute: typeof AppToolsPredefinedMessagesCreateRouteImport
      parentRoute: typeof AppToolsPredefinedMessagesRouteImport
    }
    '/app/tools/predefined-texts/create': {
      id: '/app/tools/predefined-texts/create'
      path: '/create'
      fullPath: '/app/tools/predefined-texts/create'
      preLoaderRoute: typeof AppToolsPredefinedTextsCreateRouteImport
      parentRoute: typeof AppToolsPredefinedTextsRouteImport
    }
    '/app/tools/product-filters/create': {
      id: '/app/tools/product-filters/create'
      path: '/create'
      fullPath: '/app/tools/product-filters/create'
      preLoaderRoute: typeof AppToolsProductFiltersCreateRouteImport
      parentRoute: typeof AppToolsProductFiltersRouteImport
    }
    '/app/tools/product-inventory/validate-quantities': {
      id: '/app/tools/product-inventory/validate-quantities'
      path: '/validate-quantities'
      fullPath: '/app/tools/product-inventory/validate-quantities'
      preLoaderRoute: typeof AppToolsProductInventoryValidateQuantitiesRouteImport
      parentRoute: typeof AppToolsProductInventoryRouteImport
    }
    '/app/tools/product-shelves/create': {
      id: '/app/tools/product-shelves/create'
      path: '/create'
      fullPath: '/app/tools/product-shelves/create'
      preLoaderRoute: typeof AppToolsProductShelvesCreateRouteImport
      parentRoute: typeof AppToolsProductShelvesRouteImport
    }
    '/app/tools/scheduler/create': {
      id: '/app/tools/scheduler/create'
      path: '/create'
      fullPath: '/app/tools/scheduler/create'
      preLoaderRoute: typeof AppToolsSchedulerCreateRouteImport
      parentRoute: typeof AppToolsSchedulerRouteImport
    }
    '/app/tools/vva/create': {
      id: '/app/tools/vva/create'
      path: '/create'
      fullPath: '/app/tools/vva/create'
      preLoaderRoute: typeof AppToolsVvaCreateRouteImport
      parentRoute: typeof AppToolsVvaRouteImport
    }
    '/app/products/$productId/': {
      id: '/app/products/$productId/'
      path: '/'
      fullPath: '/app/products/$productId/'
      preLoaderRoute: typeof AppProductsProductIdIndexImport
      parentRoute: typeof AppProductsProductIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/arc': {
      id: '/app/businesses-rma/business/$businessId/arc'
      path: '/arc'
      fullPath: '/app/businesses-rma/business/$businessId/arc'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdArcRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/bill': {
      id: '/app/businesses-rma/business/$businessId/bill'
      path: '/bill'
      fullPath: '/app/businesses-rma/business/$businessId/bill'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdBillRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/bl': {
      id: '/app/businesses-rma/business/$businessId/bl'
      path: '/bl'
      fullPath: '/app/businesses-rma/business/$businessId/bl'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdBlRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/bp': {
      id: '/app/businesses-rma/business/$businessId/bp'
      path: '/bp'
      fullPath: '/app/businesses-rma/business/$businessId/bp'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdBpRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard': {
      id: '/app/businesses-rma/business/$businessId/dashboard'
      path: '/dashboard'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/quotation': {
      id: '/app/businesses-rma/business/$businessId/quotation'
      path: '/quotation'
      fullPath: '/app/businesses-rma/business/$businessId/quotation'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/delivery': {
      id: '/app/businesses-rma/rma/$rmaId/delivery'
      path: '/delivery'
      fullPath: '/app/businesses-rma/rma/$rmaId/delivery'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdDeliveryRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/reception': {
      id: '/app/businesses-rma/rma/$rmaId/reception'
      path: '/reception'
      fullPath: '/app/businesses-rma/rma/$rmaId/reception'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdReceptionRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/support': {
      id: '/app/businesses-rma/rma/$rmaId/support'
      path: '/support'
      fullPath: '/app/businesses-rma/rma/$rmaId/support'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdSupportRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdRouteImport
    }
    '/app/dashboard/task-email/$taskId/reply': {
      id: '/app/dashboard/task-email/$taskId/reply'
      path: '/reply'
      fullPath: '/app/dashboard/task-email/$taskId/reply'
      preLoaderRoute: typeof AppDashboardTaskEmailTaskIdReplyRouteImport
      parentRoute: typeof AppDashboardTaskEmailTaskIdRouteImport
    }
    '/app/enterprises/$enterpriseId/address-book/create': {
      id: '/app/enterprises/$enterpriseId/address-book/create'
      path: '/create'
      fullPath: '/app/enterprises/$enterpriseId/address-book/create'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdAddressBookCreateRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdAddressBookRouteImport
    }
    '/app/enterprises/$enterpriseId/create-contact-business/$contactId': {
      id: '/app/enterprises/$enterpriseId/create-contact-business/$contactId'
      path: '/create-contact-business/$contactId'
      fullPath: '/app/enterprises/$enterpriseId/create-contact-business/$contactId'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdCreateContactBusinessContactIdRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/delete-contact/$contactId': {
      id: '/app/enterprises/$enterpriseId/delete-contact/$contactId'
      path: '/delete-contact/$contactId'
      fullPath: '/app/enterprises/$enterpriseId/delete-contact/$contactId'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdDeleteContactContactIdRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/delete-ged-object/$objectRelativePath': {
      id: '/app/enterprises/$enterpriseId/delete-ged-object/$objectRelativePath'
      path: '/delete-ged-object/$objectRelativePath'
      fullPath: '/app/enterprises/$enterpriseId/delete-ged-object/$objectRelativePath'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdDeleteGedObjectObjectRelativePathRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/rename-ged-object/$objectRelativePath': {
      id: '/app/enterprises/$enterpriseId/rename-ged-object/$objectRelativePath'
      path: '/rename-ged-object/$objectRelativePath'
      fullPath: '/app/enterprises/$enterpriseId/rename-ged-object/$objectRelativePath'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdRenameGedObjectObjectRelativePathRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/send-email-to-contact/$contactId': {
      id: '/app/enterprises/$enterpriseId/send-email-to-contact/$contactId'
      path: '/send-email-to-contact/$contactId'
      fullPath: '/app/enterprises/$enterpriseId/send-email-to-contact/$contactId'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdSendEmailToContactContactIdRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/task-email/$taskId': {
      id: '/app/enterprises/$enterpriseId/task-email/$taskId'
      path: '/task-email/$taskId'
      fullPath: '/app/enterprises/$enterpriseId/task-email/$taskId'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdTaskEmailTaskIdRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/update-contact-password/$contactId': {
      id: '/app/enterprises/$enterpriseId/update-contact-password/$contactId'
      path: '/update-contact-password/$contactId'
      fullPath: '/app/enterprises/$enterpriseId/update-contact-password/$contactId'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdUpdateContactPasswordContactIdRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/enterprises/$enterpriseId/update-contact/$contactId': {
      id: '/app/enterprises/$enterpriseId/update-contact/$contactId'
      path: '/update-contact/$contactId'
      fullPath: '/app/enterprises/$enterpriseId/update-contact/$contactId'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdUpdateContactContactIdRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdRouteImport
    }
    '/app/faq/ged/$faqId/create-directory': {
      id: '/app/faq/ged/$faqId/create-directory'
      path: '/create-directory'
      fullPath: '/app/faq/ged/$faqId/create-directory'
      preLoaderRoute: typeof AppFaqGedFaqIdCreateDirectoryRouteImport
      parentRoute: typeof AppFaqGedFaqIdRouteImport
    }
    '/app/faq/ged/$faqId/import-files': {
      id: '/app/faq/ged/$faqId/import-files'
      path: '/import-files'
      fullPath: '/app/faq/ged/$faqId/import-files'
      preLoaderRoute: typeof AppFaqGedFaqIdImportFilesRouteImport
      parentRoute: typeof AppFaqGedFaqIdRouteImport
    }
    '/app/products/serial-numbers/create-rma/$serialNumberId': {
      id: '/app/products/serial-numbers/create-rma/$serialNumberId'
      path: '/create-rma/$serialNumberId'
      fullPath: '/app/products/serial-numbers/create-rma/$serialNumberId'
      preLoaderRoute: typeof AppProductsSerialNumbersCreateRmaSerialNumberIdRouteImport
      parentRoute: typeof AppProductsSerialNumbersRouteImport
    }
    '/app/products/serial-numbers/delete/$serialNumberId': {
      id: '/app/products/serial-numbers/delete/$serialNumberId'
      path: '/delete/$serialNumberId'
      fullPath: '/app/products/serial-numbers/delete/$serialNumberId'
      preLoaderRoute: typeof AppProductsSerialNumbersDeleteSerialNumberIdRouteImport
      parentRoute: typeof AppProductsSerialNumbersRouteImport
    }
    '/app/products/$productId/informations/create-ged-directory': {
      id: '/app/products/$productId/informations/create-ged-directory'
      path: '/create-ged-directory'
      fullPath: '/app/products/$productId/informations/create-ged-directory'
      preLoaderRoute: typeof AppProductsProductIdInformationsCreateGedDirectoryRouteImport
      parentRoute: typeof AppProductsProductIdInformationsRouteImport
    }
    '/app/products/$productId/informations/create-lifesheet-comment': {
      id: '/app/products/$productId/informations/create-lifesheet-comment'
      path: '/create-lifesheet-comment'
      fullPath: '/app/products/$productId/informations/create-lifesheet-comment'
      preLoaderRoute: typeof AppProductsProductIdInformationsCreateLifesheetCommentRouteImport
      parentRoute: typeof AppProductsProductIdInformationsRouteImport
    }
    '/app/products/$productId/informations/delete-ged-object': {
      id: '/app/products/$productId/informations/delete-ged-object'
      path: '/delete-ged-object'
      fullPath: '/app/products/$productId/informations/delete-ged-object'
      preLoaderRoute: typeof AppProductsProductIdInformationsDeleteGedObjectRouteImport
      parentRoute: typeof AppProductsProductIdInformationsRouteImport
    }
    '/app/products/$productId/informations/import-ged-files': {
      id: '/app/products/$productId/informations/import-ged-files'
      path: '/import-ged-files'
      fullPath: '/app/products/$productId/informations/import-ged-files'
      preLoaderRoute: typeof AppProductsProductIdInformationsImportGedFilesRouteImport
      parentRoute: typeof AppProductsProductIdInformationsRouteImport
    }
    '/app/products/$productId/informations/rename-ged-object': {
      id: '/app/products/$productId/informations/rename-ged-object'
      path: '/rename-ged-object'
      fullPath: '/app/products/$productId/informations/rename-ged-object'
      preLoaderRoute: typeof AppProductsProductIdInformationsRenameGedObjectRouteImport
      parentRoute: typeof AppProductsProductIdInformationsRouteImport
    }
    '/app/products/$productId/manage/add-associated-product': {
      id: '/app/products/$productId/manage/add-associated-product'
      path: '/add-associated-product'
      fullPath: '/app/products/$productId/manage/add-associated-product'
      preLoaderRoute: typeof AppProductsProductIdManageAddAssociatedProductRouteImport
      parentRoute: typeof AppProductsProductIdManageRouteImport
    }
    '/app/products/$productId/manage/add-specification': {
      id: '/app/products/$productId/manage/add-specification'
      path: '/add-specification'
      fullPath: '/app/products/$productId/manage/add-specification'
      preLoaderRoute: typeof AppProductsProductIdManageAddSpecificationRouteImport
      parentRoute: typeof AppProductsProductIdManageRouteImport
    }
    '/app/products/$productId/manage/create-stock': {
      id: '/app/products/$productId/manage/create-stock'
      path: '/create-stock'
      fullPath: '/app/products/$productId/manage/create-stock'
      preLoaderRoute: typeof AppProductsProductIdManageCreateStockRouteImport
      parentRoute: typeof AppProductsProductIdManageRouteImport
    }
    '/app/products/$productId/manage/create-version': {
      id: '/app/products/$productId/manage/create-version'
      path: '/create-version'
      fullPath: '/app/products/$productId/manage/create-version'
      preLoaderRoute: typeof AppProductsProductIdManageCreateVersionRouteImport
      parentRoute: typeof AppProductsProductIdManageRouteImport
    }
    '/app/tools/ddns/delete/$ddnsId': {
      id: '/app/tools/ddns/delete/$ddnsId'
      path: '/delete/$ddnsId'
      fullPath: '/app/tools/ddns/delete/$ddnsId'
      preLoaderRoute: typeof AppToolsDdnsDeleteDdnsIdRouteImport
      parentRoute: typeof AppToolsDdnsRouteImport
    }
    '/app/tools/departments/delete/$departmentId': {
      id: '/app/tools/departments/delete/$departmentId'
      path: '/delete/$departmentId'
      fullPath: '/app/tools/departments/delete/$departmentId'
      preLoaderRoute: typeof AppToolsDepartmentsDeleteDepartmentIdRouteImport
      parentRoute: typeof AppToolsDepartmentsRouteImport
    }
    '/app/tools/departments/update/$departmentId': {
      id: '/app/tools/departments/update/$departmentId'
      path: '/update/$departmentId'
      fullPath: '/app/tools/departments/update/$departmentId'
      preLoaderRoute: typeof AppToolsDepartmentsUpdateDepartmentIdRouteImport
      parentRoute: typeof AppToolsDepartmentsRouteImport
    }
    '/app/tools/emails/$emailId/reply': {
      id: '/app/tools/emails/$emailId/reply'
      path: '/reply'
      fullPath: '/app/tools/emails/$emailId/reply'
      preLoaderRoute: typeof AppToolsEmailsEmailIdReplyRouteImport
      parentRoute: typeof AppToolsEmailsEmailIdRouteImport
    }
    '/app/tools/emails/send/predefined-messages': {
      id: '/app/tools/emails/send/predefined-messages'
      path: '/predefined-messages'
      fullPath: '/app/tools/emails/send/predefined-messages'
      preLoaderRoute: typeof AppToolsEmailsSendPredefinedMessagesRouteImport
      parentRoute: typeof AppToolsEmailsSendRouteImport
    }
    '/app/tools/external-links/archive/$externalLinkId': {
      id: '/app/tools/external-links/archive/$externalLinkId'
      path: '/archive/$externalLinkId'
      fullPath: '/app/tools/external-links/archive/$externalLinkId'
      preLoaderRoute: typeof AppToolsExternalLinksArchiveExternalLinkIdRouteImport
      parentRoute: typeof AppToolsExternalLinksRouteImport
    }
    '/app/tools/external-links/delete/$externalLinkId': {
      id: '/app/tools/external-links/delete/$externalLinkId'
      path: '/delete/$externalLinkId'
      fullPath: '/app/tools/external-links/delete/$externalLinkId'
      preLoaderRoute: typeof AppToolsExternalLinksDeleteExternalLinkIdRouteImport
      parentRoute: typeof AppToolsExternalLinksRouteImport
    }
    '/app/tools/external-links/update/$externalLinkId': {
      id: '/app/tools/external-links/update/$externalLinkId'
      path: '/update/$externalLinkId'
      fullPath: '/app/tools/external-links/update/$externalLinkId'
      preLoaderRoute: typeof AppToolsExternalLinksUpdateExternalLinkIdRouteImport
      parentRoute: typeof AppToolsExternalLinksRouteImport
    }
    '/app/tools/formations/create/add-detail': {
      id: '/app/tools/formations/create/add-detail'
      path: '/add-detail'
      fullPath: '/app/tools/formations/create/add-detail'
      preLoaderRoute: typeof AppToolsFormationsCreateAddDetailRouteImport
      parentRoute: typeof AppToolsFormationsCreateRouteImport
    }
    '/app/tools/formations/create/details': {
      id: '/app/tools/formations/create/details'
      path: '/details'
      fullPath: '/app/tools/formations/create/details'
      preLoaderRoute: typeof AppToolsFormationsCreateDetailsRouteImport
      parentRoute: typeof AppToolsFormationsCreateRouteImport
    }
    '/app/tools/formations/delete/$formationId': {
      id: '/app/tools/formations/delete/$formationId'
      path: '/delete/$formationId'
      fullPath: '/app/tools/formations/delete/$formationId'
      preLoaderRoute: typeof AppToolsFormationsDeleteFormationIdRouteImport
      parentRoute: typeof AppToolsFormationsRouteImport
    }
    '/app/tools/formations/subscribers/$formationDetailId': {
      id: '/app/tools/formations/subscribers/$formationDetailId'
      path: '/subscribers/$formationDetailId'
      fullPath: '/app/tools/formations/subscribers/$formationDetailId'
      preLoaderRoute: typeof AppToolsFormationsSubscribersFormationDetailIdRouteImport
      parentRoute: typeof AppToolsFormationsRouteImport
    }
    '/app/tools/formations/update/$formationId': {
      id: '/app/tools/formations/update/$formationId'
      path: '/update/$formationId'
      fullPath: '/app/tools/formations/update/$formationId'
      preLoaderRoute: typeof AppToolsFormationsUpdateFormationIdRouteImport
      parentRoute: typeof AppToolsFormationsRouteImport
    }
    '/app/tools/mails/delete/$mailId': {
      id: '/app/tools/mails/delete/$mailId'
      path: '/delete/$mailId'
      fullPath: '/app/tools/mails/delete/$mailId'
      preLoaderRoute: typeof AppToolsMailsDeleteMailIdRouteImport
      parentRoute: typeof AppToolsMailsRouteImport
    }
    '/app/tools/mails/show/$mailId': {
      id: '/app/tools/mails/show/$mailId'
      path: '/show/$mailId'
      fullPath: '/app/tools/mails/show/$mailId'
      preLoaderRoute: typeof AppToolsMailsShowMailIdRouteImport
      parentRoute: typeof AppToolsMailsRouteImport
    }
    '/app/tools/mails/update/$mailId': {
      id: '/app/tools/mails/update/$mailId'
      path: '/update/$mailId'
      fullPath: '/app/tools/mails/update/$mailId'
      preLoaderRoute: typeof AppToolsMailsUpdateMailIdRouteImport
      parentRoute: typeof AppToolsMailsRouteImport
    }
    '/app/tools/menu/create-enterprise/add-contact': {
      id: '/app/tools/menu/create-enterprise/add-contact'
      path: '/add-contact'
      fullPath: '/app/tools/menu/create-enterprise/add-contact'
      preLoaderRoute: typeof AppToolsMenuCreateEnterpriseAddContactRouteImport
      parentRoute: typeof AppToolsMenuCreateEnterpriseRouteImport
    }
    '/app/tools/menu/create-enterprise/contacts': {
      id: '/app/tools/menu/create-enterprise/contacts'
      path: '/contacts'
      fullPath: '/app/tools/menu/create-enterprise/contacts'
      preLoaderRoute: typeof AppToolsMenuCreateEnterpriseContactsRouteImport
      parentRoute: typeof AppToolsMenuCreateEnterpriseRouteImport
    }
    '/app/tools/news/delete/$newsId': {
      id: '/app/tools/news/delete/$newsId'
      path: '/delete/$newsId'
      fullPath: '/app/tools/news/delete/$newsId'
      preLoaderRoute: typeof AppToolsNewsDeleteNewsIdRouteImport
      parentRoute: typeof AppToolsNewsRouteImport
    }
    '/app/tools/news/update/$newsId': {
      id: '/app/tools/news/update/$newsId'
      path: '/update/$newsId'
      fullPath: '/app/tools/news/update/$newsId'
      preLoaderRoute: typeof AppToolsNewsUpdateNewsIdRouteImport
      parentRoute: typeof AppToolsNewsRouteImport
    }
    '/app/tools/predefined-messages/delete/$predefinedMessageId': {
      id: '/app/tools/predefined-messages/delete/$predefinedMessageId'
      path: '/delete/$predefinedMessageId'
      fullPath: '/app/tools/predefined-messages/delete/$predefinedMessageId'
      preLoaderRoute: typeof AppToolsPredefinedMessagesDeletePredefinedMessageIdRouteImport
      parentRoute: typeof AppToolsPredefinedMessagesRouteImport
    }
    '/app/tools/predefined-messages/update/$predefinedMessageId': {
      id: '/app/tools/predefined-messages/update/$predefinedMessageId'
      path: '/update/$predefinedMessageId'
      fullPath: '/app/tools/predefined-messages/update/$predefinedMessageId'
      preLoaderRoute: typeof AppToolsPredefinedMessagesUpdatePredefinedMessageIdRouteImport
      parentRoute: typeof AppToolsPredefinedMessagesRouteImport
    }
    '/app/tools/predefined-texts/delete/$predefinedTextId': {
      id: '/app/tools/predefined-texts/delete/$predefinedTextId'
      path: '/delete/$predefinedTextId'
      fullPath: '/app/tools/predefined-texts/delete/$predefinedTextId'
      preLoaderRoute: typeof AppToolsPredefinedTextsDeletePredefinedTextIdRouteImport
      parentRoute: typeof AppToolsPredefinedTextsRouteImport
    }
    '/app/tools/predefined-texts/update/$predefinedTextId': {
      id: '/app/tools/predefined-texts/update/$predefinedTextId'
      path: '/update/$predefinedTextId'
      fullPath: '/app/tools/predefined-texts/update/$predefinedTextId'
      preLoaderRoute: typeof AppToolsPredefinedTextsUpdatePredefinedTextIdRouteImport
      parentRoute: typeof AppToolsPredefinedTextsRouteImport
    }
    '/app/tools/product-filters/delete/$productFilterId': {
      id: '/app/tools/product-filters/delete/$productFilterId'
      path: '/delete/$productFilterId'
      fullPath: '/app/tools/product-filters/delete/$productFilterId'
      preLoaderRoute: typeof AppToolsProductFiltersDeleteProductFilterIdRouteImport
      parentRoute: typeof AppToolsProductFiltersRouteImport
    }
    '/app/tools/product-filters/update/$productFilterId': {
      id: '/app/tools/product-filters/update/$productFilterId'
      path: '/update/$productFilterId'
      fullPath: '/app/tools/product-filters/update/$productFilterId'
      preLoaderRoute: typeof AppToolsProductFiltersUpdateProductFilterIdRouteImport
      parentRoute: typeof AppToolsProductFiltersRouteImport
    }
    '/app/tools/product-inventory/update/$stockId': {
      id: '/app/tools/product-inventory/update/$stockId'
      path: '/update/$stockId'
      fullPath: '/app/tools/product-inventory/update/$stockId'
      preLoaderRoute: typeof AppToolsProductInventoryUpdateStockIdRouteImport
      parentRoute: typeof AppToolsProductInventoryRouteImport
    }
    '/app/tools/product-shelves/delete/$productShelfId': {
      id: '/app/tools/product-shelves/delete/$productShelfId'
      path: '/delete/$productShelfId'
      fullPath: '/app/tools/product-shelves/delete/$productShelfId'
      preLoaderRoute: typeof AppToolsProductShelvesDeleteProductShelfIdRouteImport
      parentRoute: typeof AppToolsProductShelvesRouteImport
    }
    '/app/tools/scheduler/details/$rdvId': {
      id: '/app/tools/scheduler/details/$rdvId'
      path: '/details/$rdvId'
      fullPath: '/app/tools/scheduler/details/$rdvId'
      preLoaderRoute: typeof AppToolsSchedulerDetailsRdvIdRouteImport
      parentRoute: typeof AppToolsSchedulerRouteImport
    }
    '/app/tools/vva/delete/$vvaId': {
      id: '/app/tools/vva/delete/$vvaId'
      path: '/delete/$vvaId'
      fullPath: '/app/tools/vva/delete/$vvaId'
      preLoaderRoute: typeof AppToolsVvaDeleteVvaIdRouteImport
      parentRoute: typeof AppToolsVvaRouteImport
    }
    '/app/businesses-rma/business/$businessId/': {
      id: '/app/businesses-rma/business/$businessId/'
      path: '/'
      fullPath: '/app/businesses-rma/business/$businessId/'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdIndexImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/': {
      id: '/app/businesses-rma/rma/$rmaId/'
      path: '/'
      fullPath: '/app/businesses-rma/rma/$rmaId/'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdIndexImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/arc/pdf': {
      id: '/app/businesses-rma/business/$businessId/arc/pdf'
      path: '/pdf'
      fullPath: '/app/businesses-rma/business/$businessId/arc/pdf'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdArcPdfRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdArcRouteImport
    }
    '/app/businesses-rma/business/$businessId/arc/update-shipping-price': {
      id: '/app/businesses-rma/business/$businessId/arc/update-shipping-price'
      path: '/update-shipping-price'
      fullPath: '/app/businesses-rma/business/$businessId/arc/update-shipping-price'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdArcUpdateShippingPriceRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdArcRouteImport
    }
    '/app/businesses-rma/business/$businessId/bill/credits': {
      id: '/app/businesses-rma/business/$businessId/bill/credits'
      path: '/credits'
      fullPath: '/app/businesses-rma/business/$businessId/bill/credits'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdBillCreditsRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdBillRouteImport
    }
    '/app/businesses-rma/business/$businessId/bill/send-by-email': {
      id: '/app/businesses-rma/business/$businessId/bill/send-by-email'
      path: '/send-by-email'
      fullPath: '/app/businesses-rma/business/$businessId/bill/send-by-email'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdBillSendByEmailRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdBillRouteImport
    }
    '/app/businesses-rma/business/$businessId/bl/send-by-email': {
      id: '/app/businesses-rma/business/$businessId/bl/send-by-email'
      path: '/send-by-email'
      fullPath: '/app/businesses-rma/business/$businessId/bl/send-by-email'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdBlSendByEmailRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdBlRouteImport
    }
    '/app/businesses-rma/business/$businessId/bp/travel-voucher': {
      id: '/app/businesses-rma/business/$businessId/bp/travel-voucher'
      path: '/travel-voucher'
      fullPath: '/app/businesses-rma/business/$businessId/bp/travel-voucher'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdBpTravelVoucherRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdBpRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/address-book': {
      id: '/app/businesses-rma/business/$businessId/dashboard/address-book'
      path: '/address-book'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/address-book'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardAddressBookRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/create-ged-directory': {
      id: '/app/businesses-rma/business/$businessId/dashboard/create-ged-directory'
      path: '/create-ged-directory'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/create-ged-directory'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardCreateGedDirectoryRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/create-lifesheet': {
      id: '/app/businesses-rma/business/$businessId/dashboard/create-lifesheet'
      path: '/create-lifesheet'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/create-lifesheet'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardCreateLifesheetRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/create-link': {
      id: '/app/businesses-rma/business/$businessId/dashboard/create-link'
      path: '/create-link'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/create-link'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardCreateLinkRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/delete': {
      id: '/app/businesses-rma/business/$businessId/dashboard/delete'
      path: '/delete'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/delete'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardDeleteRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/import-ged-files': {
      id: '/app/businesses-rma/business/$businessId/dashboard/import-ged-files'
      path: '/import-ged-files'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/import-ged-files'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardImportGedFilesRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/send-email': {
      id: '/app/businesses-rma/business/$businessId/dashboard/send-email'
      path: '/send-email'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/send-email'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardSendEmailRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/update-billing-address': {
      id: '/app/businesses-rma/business/$businessId/dashboard/update-billing-address'
      path: '/update-billing-address'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/update-billing-address'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardUpdateBillingAddressRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/update-representative': {
      id: '/app/businesses-rma/business/$businessId/dashboard/update-representative'
      path: '/update-representative'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/update-representative'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardUpdateRepresentativeRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/update-responsible': {
      id: '/app/businesses-rma/business/$businessId/dashboard/update-responsible'
      path: '/update-responsible'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/update-responsible'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardUpdateResponsibleRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRouteImport
    }
    '/app/businesses-rma/business/$businessId/quotation/commercial-notice': {
      id: '/app/businesses-rma/business/$businessId/quotation/commercial-notice'
      path: '/commercial-notice'
      fullPath: '/app/businesses-rma/business/$businessId/quotation/commercial-notice'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationCommercialNoticeRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationRouteImport
    }
    '/app/businesses-rma/business/$businessId/quotation/pdf': {
      id: '/app/businesses-rma/business/$businessId/quotation/pdf'
      path: '/pdf'
      fullPath: '/app/businesses-rma/business/$businessId/quotation/pdf'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationPdfRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationRouteImport
    }
    '/app/businesses-rma/business/$businessId/quotation/update-shipping-price': {
      id: '/app/businesses-rma/business/$businessId/quotation/update-shipping-price'
      path: '/update-shipping-price'
      fullPath: '/app/businesses-rma/business/$businessId/quotation/update-shipping-price'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationUpdateShippingPriceRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationRouteImport
    }
    '/app/businesses-rma/business/$businessId/assistance/$assistanceId': {
      id: '/app/businesses-rma/business/$businessId/assistance/$assistanceId'
      path: '/businesses-rma/business/$businessId/assistance/$assistanceId'
      fullPath: '/app/businesses-rma/business/$businessId/assistance/$assistanceId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/delivery/create-detail': {
      id: '/app/businesses-rma/rma/$rmaId/delivery/create-detail'
      path: '/create-detail'
      fullPath: '/app/businesses-rma/rma/$rmaId/delivery/create-detail'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdDeliveryCreateDetailRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdDeliveryRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/delivery/pdf': {
      id: '/app/businesses-rma/rma/$rmaId/delivery/pdf'
      path: '/pdf'
      fullPath: '/app/businesses-rma/rma/$rmaId/delivery/pdf'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdDeliveryPdfRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdDeliveryRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/delivery/travel-voucher': {
      id: '/app/businesses-rma/rma/$rmaId/delivery/travel-voucher'
      path: '/travel-voucher'
      fullPath: '/app/businesses-rma/rma/$rmaId/delivery/travel-voucher'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdDeliveryTravelVoucherRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdDeliveryRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/reception/create-detail': {
      id: '/app/businesses-rma/rma/$rmaId/reception/create-detail'
      path: '/create-detail'
      fullPath: '/app/businesses-rma/rma/$rmaId/reception/create-detail'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdReceptionCreateDetailRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdReceptionRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/reception/pdf': {
      id: '/app/businesses-rma/rma/$rmaId/reception/pdf'
      path: '/pdf'
      fullPath: '/app/businesses-rma/rma/$rmaId/reception/pdf'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdReceptionPdfRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdReceptionRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/support/create-detail': {
      id: '/app/businesses-rma/rma/$rmaId/support/create-detail'
      path: '/create-detail'
      fullPath: '/app/businesses-rma/rma/$rmaId/support/create-detail'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdSupportCreateDetailRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdSupportRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/support/create-ged-directory': {
      id: '/app/businesses-rma/rma/$rmaId/support/create-ged-directory'
      path: '/create-ged-directory'
      fullPath: '/app/businesses-rma/rma/$rmaId/support/create-ged-directory'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdSupportCreateGedDirectoryRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdSupportRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/support/create-lifesheet': {
      id: '/app/businesses-rma/rma/$rmaId/support/create-lifesheet'
      path: '/create-lifesheet'
      fullPath: '/app/businesses-rma/rma/$rmaId/support/create-lifesheet'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdSupportCreateLifesheetRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdSupportRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/support/import-ged-files': {
      id: '/app/businesses-rma/rma/$rmaId/support/import-ged-files'
      path: '/import-ged-files'
      fullPath: '/app/businesses-rma/rma/$rmaId/support/import-ged-files'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdSupportImportGedFilesRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdSupportRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/support/pdf': {
      id: '/app/businesses-rma/rma/$rmaId/support/pdf'
      path: '/pdf'
      fullPath: '/app/businesses-rma/rma/$rmaId/support/pdf'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdSupportPdfRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdSupportRouteImport
    }
    '/app/enterprises/$enterpriseId/address-book/delete/$addressId': {
      id: '/app/enterprises/$enterpriseId/address-book/delete/$addressId'
      path: '/delete/$addressId'
      fullPath: '/app/enterprises/$enterpriseId/address-book/delete/$addressId'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdAddressBookDeleteAddressIdRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdAddressBookRouteImport
    }
    '/app/enterprises/$enterpriseId/address-book/update/$addressId': {
      id: '/app/enterprises/$enterpriseId/address-book/update/$addressId'
      path: '/update/$addressId'
      fullPath: '/app/enterprises/$enterpriseId/address-book/update/$addressId'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdAddressBookUpdateAddressIdRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdAddressBookRouteImport
    }
    '/app/enterprises/$enterpriseId/task-email/$taskId/reply': {
      id: '/app/enterprises/$enterpriseId/task-email/$taskId/reply'
      path: '/reply'
      fullPath: '/app/enterprises/$enterpriseId/task-email/$taskId/reply'
      preLoaderRoute: typeof AppEnterprisesEnterpriseIdTaskEmailTaskIdReplyRouteImport
      parentRoute: typeof AppEnterprisesEnterpriseIdTaskEmailTaskIdRouteImport
    }
    '/app/faq/ged/$faqId/delete/$itemRelativePath': {
      id: '/app/faq/ged/$faqId/delete/$itemRelativePath'
      path: '/delete/$itemRelativePath'
      fullPath: '/app/faq/ged/$faqId/delete/$itemRelativePath'
      preLoaderRoute: typeof AppFaqGedFaqIdDeleteItemRelativePathRouteImport
      parentRoute: typeof AppFaqGedFaqIdRouteImport
    }
    '/app/faq/ged/$faqId/rename/$itemRelativePath': {
      id: '/app/faq/ged/$faqId/rename/$itemRelativePath'
      path: '/rename/$itemRelativePath'
      fullPath: '/app/faq/ged/$faqId/rename/$itemRelativePath'
      preLoaderRoute: typeof AppFaqGedFaqIdRenameItemRelativePathRouteImport
      parentRoute: typeof AppFaqGedFaqIdRouteImport
    }
    '/app/products/$productId/informations/task-email/$taskId': {
      id: '/app/products/$productId/informations/task-email/$taskId'
      path: '/task-email/$taskId'
      fullPath: '/app/products/$productId/informations/task-email/$taskId'
      preLoaderRoute: typeof AppProductsProductIdInformationsTaskEmailTaskIdRouteImport
      parentRoute: typeof AppProductsProductIdInformationsRouteImport
    }
    '/app/products/$productId/manage/add-specification/$filterId': {
      id: '/app/products/$productId/manage/add-specification/$filterId'
      path: '/$filterId'
      fullPath: '/app/products/$productId/manage/add-specification/$filterId'
      preLoaderRoute: typeof AppProductsProductIdManageAddSpecificationFilterIdRouteImport
      parentRoute: typeof AppProductsProductIdManageAddSpecificationRouteImport
    }
    '/app/products/$productId/manage/delete-specification/$specificationId': {
      id: '/app/products/$productId/manage/delete-specification/$specificationId'
      path: '/delete-specification/$specificationId'
      fullPath: '/app/products/$productId/manage/delete-specification/$specificationId'
      preLoaderRoute: typeof AppProductsProductIdManageDeleteSpecificationSpecificationIdRouteImport
      parentRoute: typeof AppProductsProductIdManageRouteImport
    }
    '/app/products/$productId/manage/delete-stock/$stockId': {
      id: '/app/products/$productId/manage/delete-stock/$stockId'
      path: '/delete-stock/$stockId'
      fullPath: '/app/products/$productId/manage/delete-stock/$stockId'
      preLoaderRoute: typeof AppProductsProductIdManageDeleteStockStockIdRouteImport
      parentRoute: typeof AppProductsProductIdManageRouteImport
    }
    '/app/products/$productId/manage/delete-version/$versionId': {
      id: '/app/products/$productId/manage/delete-version/$versionId'
      path: '/delete-version/$versionId'
      fullPath: '/app/products/$productId/manage/delete-version/$versionId'
      preLoaderRoute: typeof AppProductsProductIdManageDeleteVersionVersionIdRouteImport
      parentRoute: typeof AppProductsProductIdManageRouteImport
    }
    '/app/products/$productId/manage/remove-associated-product/$associatedProductId': {
      id: '/app/products/$productId/manage/remove-associated-product/$associatedProductId'
      path: '/remove-associated-product/$associatedProductId'
      fullPath: '/app/products/$productId/manage/remove-associated-product/$associatedProductId'
      preLoaderRoute: typeof AppProductsProductIdManageRemoveAssociatedProductAssociatedProductIdRouteImport
      parentRoute: typeof AppProductsProductIdManageRouteImport
    }
    '/app/products/$productId/manage/stock-history/$stockId': {
      id: '/app/products/$productId/manage/stock-history/$stockId'
      path: '/stock-history/$stockId'
      fullPath: '/app/products/$productId/manage/stock-history/$stockId'
      preLoaderRoute: typeof AppProductsProductIdManageStockHistoryStockIdRouteImport
      parentRoute: typeof AppProductsProductIdManageRouteImport
    }
    '/app/products/$productId/manage/update-specification/$specificationId': {
      id: '/app/products/$productId/manage/update-specification/$specificationId'
      path: '/update-specification/$specificationId'
      fullPath: '/app/products/$productId/manage/update-specification/$specificationId'
      preLoaderRoute: typeof AppProductsProductIdManageUpdateSpecificationSpecificationIdRouteImport
      parentRoute: typeof AppProductsProductIdManageRouteImport
    }
    '/app/products/$productId/manage/update-stock/$stockId': {
      id: '/app/products/$productId/manage/update-stock/$stockId'
      path: '/update-stock/$stockId'
      fullPath: '/app/products/$productId/manage/update-stock/$stockId'
      preLoaderRoute: typeof AppProductsProductIdManageUpdateStockStockIdRouteImport
      parentRoute: typeof AppProductsProductIdManageRouteImport
    }
    '/app/products/$productId/manage/update-version/$versionId': {
      id: '/app/products/$productId/manage/update-version/$versionId'
      path: '/update-version/$versionId'
      fullPath: '/app/products/$productId/manage/update-version/$versionId'
      preLoaderRoute: typeof AppProductsProductIdManageUpdateVersionVersionIdRouteImport
      parentRoute: typeof AppProductsProductIdManageRouteImport
    }
    '/app/tools/formations/subscribers/$formationDetailId/create': {
      id: '/app/tools/formations/subscribers/$formationDetailId/create'
      path: '/create'
      fullPath: '/app/tools/formations/subscribers/$formationDetailId/create'
      preLoaderRoute: typeof AppToolsFormationsSubscribersFormationDetailIdCreateRouteImport
      parentRoute: typeof AppToolsFormationsSubscribersFormationDetailIdRouteImport
    }
    '/app/tools/formations/update/$formationId/add-detail': {
      id: '/app/tools/formations/update/$formationId/add-detail'
      path: '/add-detail'
      fullPath: '/app/tools/formations/update/$formationId/add-detail'
      preLoaderRoute: typeof AppToolsFormationsUpdateFormationIdAddDetailRouteImport
      parentRoute: typeof AppToolsFormationsUpdateFormationIdRouteImport
    }
    '/app/tools/formations/update/$formationId/details': {
      id: '/app/tools/formations/update/$formationId/details'
      path: '/details'
      fullPath: '/app/tools/formations/update/$formationId/details'
      preLoaderRoute: typeof AppToolsFormationsUpdateFormationIdDetailsRouteImport
      parentRoute: typeof AppToolsFormationsUpdateFormationIdRouteImport
    }
    '/app/tools/scheduler/details/$rdvId/delete': {
      id: '/app/tools/scheduler/details/$rdvId/delete'
      path: '/delete'
      fullPath: '/app/tools/scheduler/details/$rdvId/delete'
      preLoaderRoute: typeof AppToolsSchedulerDetailsRdvIdDeleteRouteImport
      parentRoute: typeof AppToolsSchedulerDetailsRdvIdRouteImport
    }
    '/app/tools/scheduler/details/$rdvId/update': {
      id: '/app/tools/scheduler/details/$rdvId/update'
      path: '/update'
      fullPath: '/app/tools/scheduler/details/$rdvId/update'
      preLoaderRoute: typeof AppToolsSchedulerDetailsRdvIdUpdateRouteImport
      parentRoute: typeof AppToolsSchedulerDetailsRdvIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/arc/delete-detail/$detailId': {
      id: '/app/businesses-rma/business/$businessId/arc/delete-detail/$detailId'
      path: '/delete-detail/$detailId'
      fullPath: '/app/businesses-rma/business/$businessId/arc/delete-detail/$detailId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdArcDeleteDetailDetailIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdArcRouteImport
    }
    '/app/businesses-rma/business/$businessId/arc/pdf/send-by-email': {
      id: '/app/businesses-rma/business/$businessId/arc/pdf/send-by-email'
      path: '/send-by-email'
      fullPath: '/app/businesses-rma/business/$businessId/arc/pdf/send-by-email'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdArcPdfSendByEmailRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdArcPdfRouteImport
    }
    '/app/businesses-rma/business/$businessId/arc/update-detail/$detailId': {
      id: '/app/businesses-rma/business/$businessId/arc/update-detail/$detailId'
      path: '/update-detail/$detailId'
      fullPath: '/app/businesses-rma/business/$businessId/arc/update-detail/$detailId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdArcUpdateDetailDetailIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdArcRouteImport
    }
    '/app/businesses-rma/business/$businessId/bill/credits/send-by-email': {
      id: '/app/businesses-rma/business/$businessId/bill/credits/send-by-email'
      path: '/send-by-email'
      fullPath: '/app/businesses-rma/business/$businessId/bill/credits/send-by-email'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdBillCreditsSendByEmailRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdBillCreditsRouteImport
    }
    '/app/businesses-rma/business/$businessId/bp/add-serial/$detailId': {
      id: '/app/businesses-rma/business/$businessId/bp/add-serial/$detailId'
      path: '/add-serial/$detailId'
      fullPath: '/app/businesses-rma/business/$businessId/bp/add-serial/$detailId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdBpAddSerialDetailIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdBpRouteImport
    }
    '/app/businesses-rma/business/$businessId/bp/create-detail-rma/$detailId': {
      id: '/app/businesses-rma/business/$businessId/bp/create-detail-rma/$detailId'
      path: '/create-detail-rma/$detailId'
      fullPath: '/app/businesses-rma/business/$businessId/bp/create-detail-rma/$detailId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdBpCreateDetailRmaDetailIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdBpRouteImport
    }
    '/app/businesses-rma/business/$businessId/bp/create-serial-rma/$serialId': {
      id: '/app/businesses-rma/business/$businessId/bp/create-serial-rma/$serialId'
      path: '/create-serial-rma/$serialId'
      fullPath: '/app/businesses-rma/business/$businessId/bp/create-serial-rma/$serialId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdBpCreateSerialRmaSerialIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdBpRouteImport
    }
    '/app/businesses-rma/business/$businessId/bp/delete-detail/$detailId': {
      id: '/app/businesses-rma/business/$businessId/bp/delete-detail/$detailId'
      path: '/delete-detail/$detailId'
      fullPath: '/app/businesses-rma/business/$businessId/bp/delete-detail/$detailId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdBpDeleteDetailDetailIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdBpRouteImport
    }
    '/app/businesses-rma/business/$businessId/bp/delete-serial/$serialId': {
      id: '/app/businesses-rma/business/$businessId/bp/delete-serial/$serialId'
      path: '/delete-serial/$serialId'
      fullPath: '/app/businesses-rma/business/$businessId/bp/delete-serial/$serialId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdBpDeleteSerialSerialIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdBpRouteImport
    }
    '/app/businesses-rma/business/$businessId/bp/update-detail/$detailId': {
      id: '/app/businesses-rma/business/$businessId/bp/update-detail/$detailId'
      path: '/update-detail/$detailId'
      fullPath: '/app/businesses-rma/business/$businessId/bp/update-detail/$detailId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdBpUpdateDetailDetailIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdBpRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/address-book/create': {
      id: '/app/businesses-rma/business/$businessId/dashboard/address-book/create'
      path: '/create'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/address-book/create'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardAddressBookCreateRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardAddressBookRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/confirm-quotation-import/$otherBusinessId': {
      id: '/app/businesses-rma/business/$businessId/dashboard/confirm-quotation-import/$otherBusinessId'
      path: '/confirm-quotation-import/$otherBusinessId'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/confirm-quotation-import/$otherBusinessId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardConfirmQuotationImportOtherBusinessIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/delete-ged-object/$objectRelativePath': {
      id: '/app/businesses-rma/business/$businessId/dashboard/delete-ged-object/$objectRelativePath'
      path: '/delete-ged-object/$objectRelativePath'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/delete-ged-object/$objectRelativePath'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardDeleteGedObjectObjectRelativePathRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/delete-link/$associatedId': {
      id: '/app/businesses-rma/business/$businessId/dashboard/delete-link/$associatedId'
      path: '/delete-link/$associatedId'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/delete-link/$associatedId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardDeleteLinkAssociatedIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/rename-ged-object/$objectRelativePath': {
      id: '/app/businesses-rma/business/$businessId/dashboard/rename-ged-object/$objectRelativePath'
      path: '/rename-ged-object/$objectRelativePath'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/rename-ged-object/$objectRelativePath'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRenameGedObjectObjectRelativePathRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/task-email/$taskId': {
      id: '/app/businesses-rma/business/$businessId/dashboard/task-email/$taskId'
      path: '/task-email/$taskId'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/task-email/$taskId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardTaskEmailTaskIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardRouteImport
    }
    '/app/businesses-rma/business/$businessId/quotation/commercial-notice/send-by-email': {
      id: '/app/businesses-rma/business/$businessId/quotation/commercial-notice/send-by-email'
      path: '/send-by-email'
      fullPath: '/app/businesses-rma/business/$businessId/quotation/commercial-notice/send-by-email'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationCommercialNoticeSendByEmailRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationCommercialNoticeRouteImport
    }
    '/app/businesses-rma/business/$businessId/quotation/create-associated-detail/$detailId': {
      id: '/app/businesses-rma/business/$businessId/quotation/create-associated-detail/$detailId'
      path: '/create-associated-detail/$detailId'
      fullPath: '/app/businesses-rma/business/$businessId/quotation/create-associated-detail/$detailId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationCreateAssociatedDetailDetailIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationRouteImport
    }
    '/app/businesses-rma/business/$businessId/quotation/create-detail/$subquotationId': {
      id: '/app/businesses-rma/business/$businessId/quotation/create-detail/$subquotationId'
      path: '/create-detail/$subquotationId'
      fullPath: '/app/businesses-rma/business/$businessId/quotation/create-detail/$subquotationId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationCreateDetailSubquotationIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationRouteImport
    }
    '/app/businesses-rma/business/$businessId/quotation/delete-detail/$detailId': {
      id: '/app/businesses-rma/business/$businessId/quotation/delete-detail/$detailId'
      path: '/delete-detail/$detailId'
      fullPath: '/app/businesses-rma/business/$businessId/quotation/delete-detail/$detailId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationDeleteDetailDetailIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationRouteImport
    }
    '/app/businesses-rma/business/$businessId/quotation/delete-subquotation/$subquotationId': {
      id: '/app/businesses-rma/business/$businessId/quotation/delete-subquotation/$subquotationId'
      path: '/delete-subquotation/$subquotationId'
      fullPath: '/app/businesses-rma/business/$businessId/quotation/delete-subquotation/$subquotationId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationDeleteSubquotationSubquotationIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationRouteImport
    }
    '/app/businesses-rma/business/$businessId/quotation/pdf/send-by-email': {
      id: '/app/businesses-rma/business/$businessId/quotation/pdf/send-by-email'
      path: '/send-by-email'
      fullPath: '/app/businesses-rma/business/$businessId/quotation/pdf/send-by-email'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationPdfSendByEmailRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationPdfRouteImport
    }
    '/app/businesses-rma/business/$businessId/quotation/update-detail/$detailId': {
      id: '/app/businesses-rma/business/$businessId/quotation/update-detail/$detailId'
      path: '/update-detail/$detailId'
      fullPath: '/app/businesses-rma/business/$businessId/quotation/update-detail/$detailId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationUpdateDetailDetailIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationRouteImport
    }
    '/app/businesses-rma/business/$businessId/quotation/update-subquotation/$subquotationId': {
      id: '/app/businesses-rma/business/$businessId/quotation/update-subquotation/$subquotationId'
      path: '/update-subquotation/$subquotationId'
      fullPath: '/app/businesses-rma/business/$businessId/quotation/update-subquotation/$subquotationId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationUpdateSubquotationSubquotationIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdQuotationRouteImport
    }
    '/app/businesses-rma/business/$businessId/assistance/$assistanceId/create-ged-directory': {
      id: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/create-ged-directory'
      path: '/create-ged-directory'
      fullPath: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/create-ged-directory'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdCreateGedDirectoryRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/assistance/$assistanceId/create-lifesheet': {
      id: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/create-lifesheet'
      path: '/create-lifesheet'
      fullPath: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/create-lifesheet'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdCreateLifesheetRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/assistance/$assistanceId/delete': {
      id: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/delete'
      path: '/delete'
      fullPath: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/delete'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdDeleteRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/assistance/$assistanceId/edit-cumulated-time': {
      id: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/edit-cumulated-time'
      path: '/edit-cumulated-time'
      fullPath: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/edit-cumulated-time'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdEditCumulatedTimeRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/assistance/$assistanceId/edit-no-billed-time': {
      id: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/edit-no-billed-time'
      path: '/edit-no-billed-time'
      fullPath: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/edit-no-billed-time'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdEditNoBilledTimeRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/assistance/$assistanceId/edit-subtitle': {
      id: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/edit-subtitle'
      path: '/edit-subtitle'
      fullPath: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/edit-subtitle'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdEditSubtitleRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/assistance/$assistanceId/import-ged-files': {
      id: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/import-ged-files'
      path: '/import-ged-files'
      fullPath: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/import-ged-files'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdImportGedFilesRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/assistance/$assistanceId/pdf': {
      id: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/pdf'
      path: '/pdf'
      fullPath: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/pdf'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdPdfRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/delivery/delete-detail/$detailId': {
      id: '/app/businesses-rma/rma/$rmaId/delivery/delete-detail/$detailId'
      path: '/delete-detail/$detailId'
      fullPath: '/app/businesses-rma/rma/$rmaId/delivery/delete-detail/$detailId'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdDeliveryDeleteDetailDetailIdRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdDeliveryRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/delivery/pdf/send-by-email': {
      id: '/app/businesses-rma/rma/$rmaId/delivery/pdf/send-by-email'
      path: '/send-by-email'
      fullPath: '/app/businesses-rma/rma/$rmaId/delivery/pdf/send-by-email'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdDeliveryPdfSendByEmailRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdDeliveryPdfRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/delivery/update-detail/$detailId': {
      id: '/app/businesses-rma/rma/$rmaId/delivery/update-detail/$detailId'
      path: '/update-detail/$detailId'
      fullPath: '/app/businesses-rma/rma/$rmaId/delivery/update-detail/$detailId'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdDeliveryUpdateDetailDetailIdRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdDeliveryRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/reception/delete-detail/$detailId': {
      id: '/app/businesses-rma/rma/$rmaId/reception/delete-detail/$detailId'
      path: '/delete-detail/$detailId'
      fullPath: '/app/businesses-rma/rma/$rmaId/reception/delete-detail/$detailId'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdReceptionDeleteDetailDetailIdRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdReceptionRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/reception/pdf/send-by-email': {
      id: '/app/businesses-rma/rma/$rmaId/reception/pdf/send-by-email'
      path: '/send-by-email'
      fullPath: '/app/businesses-rma/rma/$rmaId/reception/pdf/send-by-email'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdReceptionPdfSendByEmailRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdReceptionPdfRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/reception/update-detail/$detailId': {
      id: '/app/businesses-rma/rma/$rmaId/reception/update-detail/$detailId'
      path: '/update-detail/$detailId'
      fullPath: '/app/businesses-rma/rma/$rmaId/reception/update-detail/$detailId'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdReceptionUpdateDetailDetailIdRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdReceptionRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/support/delete-detail/$detailId': {
      id: '/app/businesses-rma/rma/$rmaId/support/delete-detail/$detailId'
      path: '/delete-detail/$detailId'
      fullPath: '/app/businesses-rma/rma/$rmaId/support/delete-detail/$detailId'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdSupportDeleteDetailDetailIdRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdSupportRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/support/delete-ged-object/$relativePath': {
      id: '/app/businesses-rma/rma/$rmaId/support/delete-ged-object/$relativePath'
      path: '/delete-ged-object/$relativePath'
      fullPath: '/app/businesses-rma/rma/$rmaId/support/delete-ged-object/$relativePath'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdSupportDeleteGedObjectRelativePathRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdSupportRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/support/pdf/send-by-email': {
      id: '/app/businesses-rma/rma/$rmaId/support/pdf/send-by-email'
      path: '/send-by-email'
      fullPath: '/app/businesses-rma/rma/$rmaId/support/pdf/send-by-email'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdSupportPdfSendByEmailRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdSupportPdfRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/support/rename-ged-object/$objectRelativePath': {
      id: '/app/businesses-rma/rma/$rmaId/support/rename-ged-object/$objectRelativePath'
      path: '/rename-ged-object/$objectRelativePath'
      fullPath: '/app/businesses-rma/rma/$rmaId/support/rename-ged-object/$objectRelativePath'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdSupportRenameGedObjectObjectRelativePathRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdSupportRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/support/task-email/$taskId': {
      id: '/app/businesses-rma/rma/$rmaId/support/task-email/$taskId'
      path: '/task-email/$taskId'
      fullPath: '/app/businesses-rma/rma/$rmaId/support/task-email/$taskId'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdSupportTaskEmailTaskIdRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdSupportRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/support/update-detail/$detailId': {
      id: '/app/businesses-rma/rma/$rmaId/support/update-detail/$detailId'
      path: '/update-detail/$detailId'
      fullPath: '/app/businesses-rma/rma/$rmaId/support/update-detail/$detailId'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdSupportUpdateDetailDetailIdRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdSupportRouteImport
    }
    '/app/products/$productId/informations/task-email/$taskId/reply': {
      id: '/app/products/$productId/informations/task-email/$taskId/reply'
      path: '/reply'
      fullPath: '/app/products/$productId/informations/task-email/$taskId/reply'
      preLoaderRoute: typeof AppProductsProductIdInformationsTaskEmailTaskIdReplyRouteImport
      parentRoute: typeof AppProductsProductIdInformationsTaskEmailTaskIdRouteImport
    }
    '/app/tools/formations/subscribers/$formationDetailId/delete/$subscriptionId': {
      id: '/app/tools/formations/subscribers/$formationDetailId/delete/$subscriptionId'
      path: '/delete/$subscriptionId'
      fullPath: '/app/tools/formations/subscribers/$formationDetailId/delete/$subscriptionId'
      preLoaderRoute: typeof AppToolsFormationsSubscribersFormationDetailIdDeleteSubscriptionIdRouteImport
      parentRoute: typeof AppToolsFormationsSubscribersFormationDetailIdRouteImport
    }
    '/app/tools/formations/subscribers/$formationDetailId/send-email/$subscriptionId': {
      id: '/app/tools/formations/subscribers/$formationDetailId/send-email/$subscriptionId'
      path: '/send-email/$subscriptionId'
      fullPath: '/app/tools/formations/subscribers/$formationDetailId/send-email/$subscriptionId'
      preLoaderRoute: typeof AppToolsFormationsSubscribersFormationDetailIdSendEmailSubscriptionIdRouteImport
      parentRoute: typeof AppToolsFormationsSubscribersFormationDetailIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/address-book/delete/$addressId': {
      id: '/app/businesses-rma/business/$businessId/dashboard/address-book/delete/$addressId'
      path: '/delete/$addressId'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/address-book/delete/$addressId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardAddressBookDeleteAddressIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardAddressBookRouteImport
    }
    '/app/businesses-rma/business/$businessId/dashboard/address-book/update/$addressId': {
      id: '/app/businesses-rma/business/$businessId/dashboard/address-book/update/$addressId'
      path: '/update/$addressId'
      fullPath: '/app/businesses-rma/business/$businessId/dashboard/address-book/update/$addressId'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardAddressBookUpdateAddressIdRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdDashboardAddressBookRouteImport
    }
    '/app/businesses-rma/business/$businessId/assistance/$assistanceId/delete-ged-object/$objectRelativePath': {
      id: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/delete-ged-object/$objectRelativePath'
      path: '/delete-ged-object/$objectRelativePath'
      fullPath: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/delete-ged-object/$objectRelativePath'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdDeleteGedObjectObjectRelativePathRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteImport
    }
    '/app/businesses-rma/business/$businessId/assistance/$assistanceId/pdf/send-by-email': {
      id: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/pdf/send-by-email'
      path: '/send-by-email'
      fullPath: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/pdf/send-by-email'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdPdfSendByEmailRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdPdfRouteImport
    }
    '/app/businesses-rma/business/$businessId/assistance/$assistanceId/rename-ged-object/$objectRelativePath': {
      id: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/rename-ged-object/$objectRelativePath'
      path: '/rename-ged-object/$objectRelativePath'
      fullPath: '/app/businesses-rma/business/$businessId/assistance/$assistanceId/rename-ged-object/$objectRelativePath'
      preLoaderRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRenameGedObjectObjectRelativePathRouteImport
      parentRoute: typeof AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/delivery/pdf/send-by-email/predefined-messages': {
      id: '/app/businesses-rma/rma/$rmaId/delivery/pdf/send-by-email/predefined-messages'
      path: '/predefined-messages'
      fullPath: '/app/businesses-rma/rma/$rmaId/delivery/pdf/send-by-email/predefined-messages'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdDeliveryPdfSendByEmailPredefinedMessagesRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdDeliveryPdfSendByEmailRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/reception/pdf/send-by-email/predefined-messages': {
      id: '/app/businesses-rma/rma/$rmaId/reception/pdf/send-by-email/predefined-messages'
      path: '/predefined-messages'
      fullPath: '/app/businesses-rma/rma/$rmaId/reception/pdf/send-by-email/predefined-messages'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdReceptionPdfSendByEmailPredefinedMessagesRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdReceptionPdfSendByEmailRouteImport
    }
    '/app/businesses-rma/rma/$rmaId/support/task-email/$taskId/reply': {
      id: '/app/businesses-rma/rma/$rmaId/support/task-email/$taskId/reply'
      path: '/reply'
      fullPath: '/app/businesses-rma/rma/$rmaId/support/task-email/$taskId/reply'
      preLoaderRoute: typeof AppBusinessesRmaRmaRmaIdSupportTaskEmailTaskIdReplyRouteImport
      parentRoute: typeof AppBusinessesRmaRmaRmaIdSupportTaskEmailTaskIdRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AppRouteRoute: AppRouteRoute.addChildren({
    AppBusinessesRmaRouteRoute: AppBusinessesRmaRouteRoute.addChildren({
      AppBusinessesRmaRepresentativeTurnoverRouteRoute,
      AppBusinessesRmaSearchByProductsRouteRoute,
    }),
    AppDashboardRouteRoute: AppDashboardRouteRoute.addChildren({
      AppDashboardCreateCollectiveTaskRouteRoute,
      AppDashboardCreatePersonalTaskRouteRoute,
      AppDashboardCreateProgressiveInfoRouteRoute,
      AppDashboardDeleteCollectiveTasksRouteRoute,
      AppDashboardArchivePersonalTaskTaskIdRouteRoute,
      AppDashboardDeleteCollectiveTaskTaskIdRouteRoute,
      AppDashboardDeleteProgressiveInfoProgressiveInfoIdRouteRoute,
      AppDashboardLinkPersonalTaskTaskIdRouteRoute,
      AppDashboardOtherPersonalTasksProfileIdRouteRoute,
      AppDashboardPersonalTaskDetailsTaskIdRouteRoute,
      AppDashboardSchedulerEventDetailsEventIdRouteRoute,
      AppDashboardTakeCollectiveTaskTaskIdRouteRoute,
      AppDashboardTaskCommentsTaskIdRouteRoute,
      AppDashboardTaskEmailTaskIdRouteRoute:
        AppDashboardTaskEmailTaskIdRouteRoute.addChildren({
          AppDashboardTaskEmailTaskIdReplyRouteRoute,
        }),
      AppDashboardTransferTaskTaskIdRouteRoute,
      AppDashboardUpdatePersonalTaskDeadlineTaskIdRouteRoute,
      AppDashboardUpdateProgressiveInfoProgressiveInfoIdRouteRoute,
      AppDashboardValidatePersonalTaskTaskIdRouteRoute,
    }),
    AppEnterprisesRouteRoute: AppEnterprisesRouteRoute.addChildren({
      AppEnterprisesCreateContactBusinessContactIdRouteRoute,
      AppEnterprisesCreateContactTravelVoucherContactIdRouteRoute,
      AppEnterprisesCreateContactEnterpriseIdRouteRoute,
      AppEnterprisesCreateEnterpriseRmaEnterpriseIdRouteRoute,
      AppEnterprisesDeleteContactContactIdRouteRoute,
      AppEnterprisesSendEmailToContactContactIdRouteRoute,
      AppEnterprisesUpdateContactPasswordContactIdRouteRoute,
      AppEnterprisesUpdateContactContactIdRouteRoute,
    }),
    AppExternalLinksRouteRoute,
    AppFaqRouteRoute: AppFaqRouteRoute.addChildren({
      AppFaqCreateRouteRoute,
      AppFaqArchiveFaqIdRouteRoute,
      AppFaqDeleteFaqIdRouteRoute,
      AppFaqGedFaqIdRouteRoute: AppFaqGedFaqIdRouteRoute.addChildren({
        AppFaqGedFaqIdCreateDirectoryRouteRoute,
        AppFaqGedFaqIdImportFilesRouteRoute,
        AppFaqGedFaqIdDeleteItemRelativePathRouteRoute,
        AppFaqGedFaqIdRenameItemRelativePathRouteRoute,
      }),
      AppFaqSendByEmailFaqIdRouteRoute,
      AppFaqUpdateFaqIdRouteRoute,
    }),
    AppProductsRouteRoute: AppProductsRouteRoute.addChildren({
      AppProductsSerialNumbersRouteRoute:
        AppProductsSerialNumbersRouteRoute.addChildren({
          AppProductsSerialNumbersCreateRouteRoute,
          AppProductsSerialNumbersCreateRmaSerialNumberIdRouteRoute,
          AppProductsSerialNumbersDeleteSerialNumberIdRouteRoute,
        }),
    }),
    AppToolsRouteRoute: AppToolsRouteRoute.addChildren({
      AppToolsCreditRouteRoute: AppToolsCreditRouteRoute.addChildren({
        AppToolsCreditDetailsRouteRoute,
        AppToolsCreditShowRouteRoute,
      }),
      AppToolsDdnsRouteRoute: AppToolsDdnsRouteRoute.addChildren({
        AppToolsDdnsCreateRouteRoute,
        AppToolsDdnsDeleteDdnsIdRouteRoute,
      }),
      AppToolsDepartmentsRouteRoute: AppToolsDepartmentsRouteRoute.addChildren({
        AppToolsDepartmentsCreateRouteRoute,
        AppToolsDepartmentsDeleteDepartmentIdRouteRoute,
        AppToolsDepartmentsUpdateDepartmentIdRouteRoute,
      }),
      AppToolsEmailsRouteRoute: AppToolsEmailsRouteRoute.addChildren({
        AppToolsEmailsEmailIdRouteRoute:
          AppToolsEmailsEmailIdRouteRoute.addChildren({
            AppToolsEmailsEmailIdReplyRouteRoute,
          }),
      }),
      AppToolsExternalLinksRouteRoute:
        AppToolsExternalLinksRouteRoute.addChildren({
          AppToolsExternalLinksCreateRouteRoute,
          AppToolsExternalLinksArchiveExternalLinkIdRouteRoute,
          AppToolsExternalLinksDeleteExternalLinkIdRouteRoute,
          AppToolsExternalLinksUpdateExternalLinkIdRouteRoute,
        }),
      AppToolsFormationsRouteRoute: AppToolsFormationsRouteRoute.addChildren({
        AppToolsFormationsCreateRouteRoute:
          AppToolsFormationsCreateRouteRoute.addChildren({
            AppToolsFormationsCreateAddDetailRouteRoute,
            AppToolsFormationsCreateDetailsRouteRoute,
          }),
        AppToolsFormationsDeleteFormationIdRouteRoute,
        AppToolsFormationsSubscribersFormationDetailIdRouteRoute:
          AppToolsFormationsSubscribersFormationDetailIdRouteRoute.addChildren({
            AppToolsFormationsSubscribersFormationDetailIdCreateRouteRoute,
            AppToolsFormationsSubscribersFormationDetailIdDeleteSubscriptionIdRouteRoute,
            AppToolsFormationsSubscribersFormationDetailIdSendEmailSubscriptionIdRouteRoute,
          }),
        AppToolsFormationsUpdateFormationIdRouteRoute:
          AppToolsFormationsUpdateFormationIdRouteRoute.addChildren({
            AppToolsFormationsUpdateFormationIdAddDetailRouteRoute,
            AppToolsFormationsUpdateFormationIdDetailsRouteRoute,
          }),
      }),
      AppToolsGlobalTurnoverRouteRoute,
      AppToolsMailsRouteRoute: AppToolsMailsRouteRoute.addChildren({
        AppToolsMailsCreateRouteRoute,
        AppToolsMailsDeleteMailIdRouteRoute,
        AppToolsMailsShowMailIdRouteRoute,
        AppToolsMailsUpdateMailIdRouteRoute,
      }),
      AppToolsMenuRouteRoute: AppToolsMenuRouteRoute.addChildren({
        AppToolsMenuCreateEnterpriseRouteRoute:
          AppToolsMenuCreateEnterpriseRouteRoute.addChildren({
            AppToolsMenuCreateEnterpriseAddContactRouteRoute,
            AppToolsMenuCreateEnterpriseContactsRouteRoute,
          }),
        AppToolsMenuCreateProductRouteRoute,
      }),
      AppToolsNewsRouteRoute: AppToolsNewsRouteRoute.addChildren({
        AppToolsNewsCreateRouteRoute,
        AppToolsNewsDeleteNewsIdRouteRoute,
        AppToolsNewsUpdateNewsIdRouteRoute,
      }),
      AppToolsPredefinedMessagesRouteRoute:
        AppToolsPredefinedMessagesRouteRoute.addChildren({
          AppToolsPredefinedMessagesCreateRouteRoute,
          AppToolsPredefinedMessagesDeletePredefinedMessageIdRouteRoute,
          AppToolsPredefinedMessagesUpdatePredefinedMessageIdRouteRoute,
        }),
      AppToolsPredefinedTextsRouteRoute:
        AppToolsPredefinedTextsRouteRoute.addChildren({
          AppToolsPredefinedTextsCreateRouteRoute,
          AppToolsPredefinedTextsDeletePredefinedTextIdRouteRoute,
          AppToolsPredefinedTextsUpdatePredefinedTextIdRouteRoute,
        }),
      AppToolsProductFiltersRouteRoute:
        AppToolsProductFiltersRouteRoute.addChildren({
          AppToolsProductFiltersCreateRouteRoute,
          AppToolsProductFiltersDeleteProductFilterIdRouteRoute,
          AppToolsProductFiltersUpdateProductFilterIdRouteRoute,
        }),
      AppToolsProductInventoryRouteRoute:
        AppToolsProductInventoryRouteRoute.addChildren({
          AppToolsProductInventoryValidateQuantitiesRouteRoute,
          AppToolsProductInventoryUpdateStockIdRouteRoute,
        }),
      AppToolsProductShelvesRouteRoute:
        AppToolsProductShelvesRouteRoute.addChildren({
          AppToolsProductShelvesCreateRouteRoute,
          AppToolsProductShelvesDeleteProductShelfIdRouteRoute,
        }),
      AppToolsRepresentativesMapRouteRoute,
      AppToolsRepresentativesTurnoverRouteRoute,
      AppToolsSchedulerRouteRoute: AppToolsSchedulerRouteRoute.addChildren({
        AppToolsSchedulerCreateRouteRoute,
        AppToolsSchedulerDetailsRdvIdRouteRoute:
          AppToolsSchedulerDetailsRdvIdRouteRoute.addChildren({
            AppToolsSchedulerDetailsRdvIdDeleteRouteRoute,
            AppToolsSchedulerDetailsRdvIdUpdateRouteRoute,
          }),
      }),
      AppToolsVvaRouteRoute: AppToolsVvaRouteRoute.addChildren({
        AppToolsVvaCreateRouteRoute,
        AppToolsVvaDeleteVvaIdRouteRoute,
      }),
      AppToolsIndexRoute,
      AppToolsEmailsSendRouteRoute: AppToolsEmailsSendRouteRoute.addChildren({
        AppToolsEmailsSendPredefinedMessagesRouteRoute,
      }),
    }),
    AppIndexRoute,
    AppEnterprisesEnterpriseIdRouteRoute:
      AppEnterprisesEnterpriseIdRouteRoute.addChildren({
        AppEnterprisesEnterpriseIdAddressBookRouteRoute:
          AppEnterprisesEnterpriseIdAddressBookRouteRoute.addChildren({
            AppEnterprisesEnterpriseIdAddressBookCreateRouteRoute,
            AppEnterprisesEnterpriseIdAddressBookDeleteAddressIdRouteRoute,
            AppEnterprisesEnterpriseIdAddressBookUpdateAddressIdRouteRoute,
          }),
        AppEnterprisesEnterpriseIdCreateContactRouteRoute,
        AppEnterprisesEnterpriseIdCreateGedDirectoryRouteRoute,
        AppEnterprisesEnterpriseIdCreateLifesheetCommentRouteRoute,
        AppEnterprisesEnterpriseIdDeleteRouteRoute,
        AppEnterprisesEnterpriseIdImportContactsRouteRoute,
        AppEnterprisesEnterpriseIdImportGedFilesRouteRoute,
        AppEnterprisesEnterpriseIdUpdateRouteRoute,
        AppEnterprisesEnterpriseIdUpdateAccountabilityRouteRoute,
        AppEnterprisesEnterpriseIdUpdateCategoryRouteRoute,
        AppEnterprisesEnterpriseIdUpdateRepresentativeRouteRoute,
        AppEnterprisesEnterpriseIdCreateContactBusinessContactIdRouteRoute,
        AppEnterprisesEnterpriseIdDeleteContactContactIdRouteRoute,
        AppEnterprisesEnterpriseIdDeleteGedObjectObjectRelativePathRouteRoute,
        AppEnterprisesEnterpriseIdRenameGedObjectObjectRelativePathRouteRoute,
        AppEnterprisesEnterpriseIdSendEmailToContactContactIdRouteRoute,
        AppEnterprisesEnterpriseIdTaskEmailTaskIdRouteRoute:
          AppEnterprisesEnterpriseIdTaskEmailTaskIdRouteRoute.addChildren({
            AppEnterprisesEnterpriseIdTaskEmailTaskIdReplyRouteRoute,
          }),
        AppEnterprisesEnterpriseIdUpdateContactPasswordContactIdRouteRoute,
        AppEnterprisesEnterpriseIdUpdateContactContactIdRouteRoute,
      }),
    AppExternalLinksExternalLinkIdRouteRoute,
    AppProductsProductIdRouteRoute: AppProductsProductIdRouteRoute.addChildren({
      AppProductsProductIdInformationsRouteRoute:
        AppProductsProductIdInformationsRouteRoute.addChildren({
          AppProductsProductIdInformationsCreateGedDirectoryRouteRoute,
          AppProductsProductIdInformationsCreateLifesheetCommentRouteRoute,
          AppProductsProductIdInformationsDeleteGedObjectRouteRoute,
          AppProductsProductIdInformationsImportGedFilesRouteRoute,
          AppProductsProductIdInformationsRenameGedObjectRouteRoute,
          AppProductsProductIdInformationsTaskEmailTaskIdRouteRoute:
            AppProductsProductIdInformationsTaskEmailTaskIdRouteRoute.addChildren(
              {
                AppProductsProductIdInformationsTaskEmailTaskIdReplyRouteRoute,
              },
            ),
        }),
      AppProductsProductIdManageRouteRoute:
        AppProductsProductIdManageRouteRoute.addChildren({
          AppProductsProductIdManageAddAssociatedProductRouteRoute,
          AppProductsProductIdManageAddSpecificationRouteRoute:
            AppProductsProductIdManageAddSpecificationRouteRoute.addChildren({
              AppProductsProductIdManageAddSpecificationFilterIdRouteRoute,
            }),
          AppProductsProductIdManageCreateStockRouteRoute,
          AppProductsProductIdManageCreateVersionRouteRoute,
          AppProductsProductIdManageDeleteSpecificationSpecificationIdRouteRoute,
          AppProductsProductIdManageDeleteStockStockIdRouteRoute,
          AppProductsProductIdManageDeleteVersionVersionIdRouteRoute,
          AppProductsProductIdManageRemoveAssociatedProductAssociatedProductIdRouteRoute,
          AppProductsProductIdManageStockHistoryStockIdRouteRoute,
          AppProductsProductIdManageUpdateSpecificationSpecificationIdRouteRoute,
          AppProductsProductIdManageUpdateStockStockIdRouteRoute,
          AppProductsProductIdManageUpdateVersionVersionIdRouteRoute,
        }),
      AppProductsProductIdIndexRoute,
    }),
    AppBusinessesRmaBusinessBusinessIdRouteRoute:
      AppBusinessesRmaBusinessBusinessIdRouteRoute.addChildren({
        AppBusinessesRmaBusinessBusinessIdArcRouteRoute:
          AppBusinessesRmaBusinessBusinessIdArcRouteRoute.addChildren({
            AppBusinessesRmaBusinessBusinessIdArcPdfRouteRoute:
              AppBusinessesRmaBusinessBusinessIdArcPdfRouteRoute.addChildren({
                AppBusinessesRmaBusinessBusinessIdArcPdfSendByEmailRouteRoute,
              }),
            AppBusinessesRmaBusinessBusinessIdArcUpdateShippingPriceRouteRoute,
            AppBusinessesRmaBusinessBusinessIdArcDeleteDetailDetailIdRouteRoute,
            AppBusinessesRmaBusinessBusinessIdArcUpdateDetailDetailIdRouteRoute,
          }),
        AppBusinessesRmaBusinessBusinessIdBillRouteRoute:
          AppBusinessesRmaBusinessBusinessIdBillRouteRoute.addChildren({
            AppBusinessesRmaBusinessBusinessIdBillCreditsRouteRoute:
              AppBusinessesRmaBusinessBusinessIdBillCreditsRouteRoute.addChildren(
                {
                  AppBusinessesRmaBusinessBusinessIdBillCreditsSendByEmailRouteRoute,
                },
              ),
            AppBusinessesRmaBusinessBusinessIdBillSendByEmailRouteRoute,
          }),
        AppBusinessesRmaBusinessBusinessIdBlRouteRoute:
          AppBusinessesRmaBusinessBusinessIdBlRouteRoute.addChildren({
            AppBusinessesRmaBusinessBusinessIdBlSendByEmailRouteRoute,
          }),
        AppBusinessesRmaBusinessBusinessIdBpRouteRoute:
          AppBusinessesRmaBusinessBusinessIdBpRouteRoute.addChildren({
            AppBusinessesRmaBusinessBusinessIdBpTravelVoucherRouteRoute,
            AppBusinessesRmaBusinessBusinessIdBpAddSerialDetailIdRouteRoute,
            AppBusinessesRmaBusinessBusinessIdBpCreateDetailRmaDetailIdRouteRoute,
            AppBusinessesRmaBusinessBusinessIdBpCreateSerialRmaSerialIdRouteRoute,
            AppBusinessesRmaBusinessBusinessIdBpDeleteDetailDetailIdRouteRoute,
            AppBusinessesRmaBusinessBusinessIdBpDeleteSerialSerialIdRouteRoute,
            AppBusinessesRmaBusinessBusinessIdBpUpdateDetailDetailIdRouteRoute,
          }),
        AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute:
          AppBusinessesRmaBusinessBusinessIdDashboardRouteRoute.addChildren({
            AppBusinessesRmaBusinessBusinessIdDashboardAddressBookRouteRoute:
              AppBusinessesRmaBusinessBusinessIdDashboardAddressBookRouteRoute.addChildren(
                {
                  AppBusinessesRmaBusinessBusinessIdDashboardAddressBookCreateRouteRoute,
                  AppBusinessesRmaBusinessBusinessIdDashboardAddressBookDeleteAddressIdRouteRoute,
                  AppBusinessesRmaBusinessBusinessIdDashboardAddressBookUpdateAddressIdRouteRoute,
                },
              ),
            AppBusinessesRmaBusinessBusinessIdDashboardCreateGedDirectoryRouteRoute,
            AppBusinessesRmaBusinessBusinessIdDashboardCreateLifesheetRouteRoute,
            AppBusinessesRmaBusinessBusinessIdDashboardCreateLinkRouteRoute,
            AppBusinessesRmaBusinessBusinessIdDashboardDeleteRouteRoute,
            AppBusinessesRmaBusinessBusinessIdDashboardImportGedFilesRouteRoute,
            AppBusinessesRmaBusinessBusinessIdDashboardSendEmailRouteRoute,
            AppBusinessesRmaBusinessBusinessIdDashboardUpdateBillingAddressRouteRoute,
            AppBusinessesRmaBusinessBusinessIdDashboardUpdateRepresentativeRouteRoute,
            AppBusinessesRmaBusinessBusinessIdDashboardUpdateResponsibleRouteRoute,
            AppBusinessesRmaBusinessBusinessIdDashboardConfirmQuotationImportOtherBusinessIdRouteRoute,
            AppBusinessesRmaBusinessBusinessIdDashboardDeleteGedObjectObjectRelativePathRouteRoute,
            AppBusinessesRmaBusinessBusinessIdDashboardDeleteLinkAssociatedIdRouteRoute,
            AppBusinessesRmaBusinessBusinessIdDashboardRenameGedObjectObjectRelativePathRouteRoute,
            AppBusinessesRmaBusinessBusinessIdDashboardTaskEmailTaskIdRouteRoute,
          }),
        AppBusinessesRmaBusinessBusinessIdQuotationRouteRoute:
          AppBusinessesRmaBusinessBusinessIdQuotationRouteRoute.addChildren({
            AppBusinessesRmaBusinessBusinessIdQuotationCommercialNoticeRouteRoute:
              AppBusinessesRmaBusinessBusinessIdQuotationCommercialNoticeRouteRoute.addChildren(
                {
                  AppBusinessesRmaBusinessBusinessIdQuotationCommercialNoticeSendByEmailRouteRoute,
                },
              ),
            AppBusinessesRmaBusinessBusinessIdQuotationPdfRouteRoute:
              AppBusinessesRmaBusinessBusinessIdQuotationPdfRouteRoute.addChildren(
                {
                  AppBusinessesRmaBusinessBusinessIdQuotationPdfSendByEmailRouteRoute,
                },
              ),
            AppBusinessesRmaBusinessBusinessIdQuotationUpdateShippingPriceRouteRoute,
            AppBusinessesRmaBusinessBusinessIdQuotationCreateAssociatedDetailDetailIdRouteRoute,
            AppBusinessesRmaBusinessBusinessIdQuotationCreateDetailSubquotationIdRouteRoute,
            AppBusinessesRmaBusinessBusinessIdQuotationDeleteDetailDetailIdRouteRoute,
            AppBusinessesRmaBusinessBusinessIdQuotationDeleteSubquotationSubquotationIdRouteRoute,
            AppBusinessesRmaBusinessBusinessIdQuotationUpdateDetailDetailIdRouteRoute,
            AppBusinessesRmaBusinessBusinessIdQuotationUpdateSubquotationSubquotationIdRouteRoute,
          }),
        AppBusinessesRmaBusinessBusinessIdIndexRoute,
      }),
    AppBusinessesRmaRmaRmaIdRouteRoute:
      AppBusinessesRmaRmaRmaIdRouteRoute.addChildren({
        AppBusinessesRmaRmaRmaIdDeliveryRouteRoute:
          AppBusinessesRmaRmaRmaIdDeliveryRouteRoute.addChildren({
            AppBusinessesRmaRmaRmaIdDeliveryCreateDetailRouteRoute,
            AppBusinessesRmaRmaRmaIdDeliveryPdfRouteRoute:
              AppBusinessesRmaRmaRmaIdDeliveryPdfRouteRoute.addChildren({
                AppBusinessesRmaRmaRmaIdDeliveryPdfSendByEmailRouteRoute:
                  AppBusinessesRmaRmaRmaIdDeliveryPdfSendByEmailRouteRoute.addChildren(
                    {
                      AppBusinessesRmaRmaRmaIdDeliveryPdfSendByEmailPredefinedMessagesRouteRoute,
                    },
                  ),
              }),
            AppBusinessesRmaRmaRmaIdDeliveryTravelVoucherRouteRoute,
            AppBusinessesRmaRmaRmaIdDeliveryDeleteDetailDetailIdRouteRoute,
            AppBusinessesRmaRmaRmaIdDeliveryUpdateDetailDetailIdRouteRoute,
          }),
        AppBusinessesRmaRmaRmaIdReceptionRouteRoute:
          AppBusinessesRmaRmaRmaIdReceptionRouteRoute.addChildren({
            AppBusinessesRmaRmaRmaIdReceptionCreateDetailRouteRoute,
            AppBusinessesRmaRmaRmaIdReceptionPdfRouteRoute:
              AppBusinessesRmaRmaRmaIdReceptionPdfRouteRoute.addChildren({
                AppBusinessesRmaRmaRmaIdReceptionPdfSendByEmailRouteRoute:
                  AppBusinessesRmaRmaRmaIdReceptionPdfSendByEmailRouteRoute.addChildren(
                    {
                      AppBusinessesRmaRmaRmaIdReceptionPdfSendByEmailPredefinedMessagesRouteRoute,
                    },
                  ),
              }),
            AppBusinessesRmaRmaRmaIdReceptionDeleteDetailDetailIdRouteRoute,
            AppBusinessesRmaRmaRmaIdReceptionUpdateDetailDetailIdRouteRoute,
          }),
        AppBusinessesRmaRmaRmaIdSupportRouteRoute:
          AppBusinessesRmaRmaRmaIdSupportRouteRoute.addChildren({
            AppBusinessesRmaRmaRmaIdSupportCreateDetailRouteRoute,
            AppBusinessesRmaRmaRmaIdSupportCreateGedDirectoryRouteRoute,
            AppBusinessesRmaRmaRmaIdSupportCreateLifesheetRouteRoute,
            AppBusinessesRmaRmaRmaIdSupportImportGedFilesRouteRoute,
            AppBusinessesRmaRmaRmaIdSupportPdfRouteRoute:
              AppBusinessesRmaRmaRmaIdSupportPdfRouteRoute.addChildren({
                AppBusinessesRmaRmaRmaIdSupportPdfSendByEmailRouteRoute,
              }),
            AppBusinessesRmaRmaRmaIdSupportDeleteDetailDetailIdRouteRoute,
            AppBusinessesRmaRmaRmaIdSupportDeleteGedObjectRelativePathRouteRoute,
            AppBusinessesRmaRmaRmaIdSupportRenameGedObjectObjectRelativePathRouteRoute,
            AppBusinessesRmaRmaRmaIdSupportTaskEmailTaskIdRouteRoute:
              AppBusinessesRmaRmaRmaIdSupportTaskEmailTaskIdRouteRoute.addChildren(
                {
                  AppBusinessesRmaRmaRmaIdSupportTaskEmailTaskIdReplyRouteRoute,
                },
              ),
            AppBusinessesRmaRmaRmaIdSupportUpdateDetailDetailIdRouteRoute,
          }),
        AppBusinessesRmaRmaRmaIdIndexRoute,
      }),
    AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteRoute:
      AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRouteRoute.addChildren(
        {
          AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdCreateGedDirectoryRouteRoute,
          AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdCreateLifesheetRouteRoute,
          AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdDeleteRouteRoute,
          AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdEditCumulatedTimeRouteRoute,
          AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdEditNoBilledTimeRouteRoute,
          AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdEditSubtitleRouteRoute,
          AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdImportGedFilesRouteRoute,
          AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdPdfRouteRoute:
            AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdPdfRouteRoute.addChildren(
              {
                AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdPdfSendByEmailRouteRoute,
              },
            ),
          AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdDeleteGedObjectObjectRelativePathRouteRoute,
          AppBusinessesRmaBusinessBusinessIdAssistanceAssistanceIdRenameGedObjectObjectRelativePathRouteRoute,
        },
      ),
  }),
  AuthRouteRoute: AuthRouteRoute.addChildren({
    AuthLoginRouteRoute,
    AuthForgotPasswordRouteLazyRoute,
    AuthIndexRoute,
    AuthResetPasswordTokenRouteLazyRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.ts",
      "children": [
        "/",
        "/app",
        "/auth"
      ]
    },
    "/": {
      "filePath": "index.ts"
    },
    "/app": {
      "filePath": "app/route.ts",
      "children": [
        "/app/businesses-rma",
        "/app/dashboard",
        "/app/enterprises",
        "/app/external-links",
        "/app/faq",
        "/app/products",
        "/app/tools",
        "/app/",
        "/app/enterprises/$enterpriseId",
        "/app/external-links/$externalLinkId",
        "/app/products/$productId",
        "/app/businesses-rma/business/$businessId",
        "/app/businesses-rma/rma/$rmaId",
        "/app/businesses-rma/business/$businessId/assistance/$assistanceId"
      ]
    },
    "/auth": {
      "filePath": "auth/route.ts",
      "children": [
        "/auth/login",
        "/auth/forgot-password",
        "/auth/",
        "/auth/reset-password/$token"
      ]
    },
    "/app/businesses-rma": {
      "filePath": "app/businesses-rma/route.tsx",
      "parent": "/app",
      "children": [
        "/app/businesses-rma/representative-turnover",
        "/app/businesses-rma/search-by-products"
      ]
    },
    "/app/dashboard": {
      "filePath": "app/dashboard/route.ts",
      "parent": "/app",
      "children": [
        "/app/dashboard/create-collective-task",
        "/app/dashboard/create-personal-task",
        "/app/dashboard/create-progressive-info",
        "/app/dashboard/delete-collective-tasks",
        "/app/dashboard/archive-personal-task/$taskId",
        "/app/dashboard/delete-collective-task/$taskId",
        "/app/dashboard/delete-progressive-info/$progressiveInfoId",
        "/app/dashboard/link-personal-task/$taskId",
        "/app/dashboard/other-personal-tasks/$profileId",
        "/app/dashboard/personal-task-details/$taskId",
        "/app/dashboard/scheduler-event-details/$eventId",
        "/app/dashboard/take-collective-task/$taskId",
        "/app/dashboard/task-comments/$taskId",
        "/app/dashboard/task-email/$taskId",
        "/app/dashboard/transfer-task/$taskId",
        "/app/dashboard/update-personal-task-deadline/$taskId",
        "/app/dashboard/update-progressive-info/$progressiveInfoId",
        "/app/dashboard/validate-personal-task/$taskId"
      ]
    },
    "/app/enterprises": {
      "filePath": "app/enterprises/route.ts",
      "parent": "/app",
      "children": [
        "/app/enterprises/create-contact-business/$contactId",
        "/app/enterprises/create-contact-travel-voucher/$contactId",
        "/app/enterprises/create-contact/$enterpriseId",
        "/app/enterprises/create-enterprise-rma/$enterpriseId",
        "/app/enterprises/delete-contact/$contactId",
        "/app/enterprises/send-email-to-contact/$contactId",
        "/app/enterprises/update-contact-password/$contactId",
        "/app/enterprises/update-contact/$contactId"
      ]
    },
    "/app/external-links": {
      "filePath": "app/external-links/route.ts",
      "parent": "/app"
    },
    "/app/faq": {
      "filePath": "app/faq/route.ts",
      "parent": "/app",
      "children": [
        "/app/faq/create",
        "/app/faq/archive/$faqId",
        "/app/faq/delete/$faqId",
        "/app/faq/ged/$faqId",
        "/app/faq/send-by-email/$faqId",
        "/app/faq/update/$faqId"
      ]
    },
    "/app/products": {
      "filePath": "app/products/route.ts",
      "parent": "/app",
      "children": [
        "/app/products/serial-numbers"
      ]
    },
    "/app/tools": {
      "filePath": "app/tools/route.ts",
      "parent": "/app",
      "children": [
        "/app/tools/credit",
        "/app/tools/ddns",
        "/app/tools/departments",
        "/app/tools/emails",
        "/app/tools/external-links",
        "/app/tools/formations",
        "/app/tools/global-turnover",
        "/app/tools/mails",
        "/app/tools/menu",
        "/app/tools/news",
        "/app/tools/predefined-messages",
        "/app/tools/predefined-texts",
        "/app/tools/product-filters",
        "/app/tools/product-inventory",
        "/app/tools/product-shelves",
        "/app/tools/representatives-map",
        "/app/tools/representatives-turnover",
        "/app/tools/scheduler",
        "/app/tools/vva",
        "/app/tools/",
        "/app/tools/emails/send"
      ]
    },
    "/auth/login": {
      "filePath": "auth/login/route.ts",
      "parent": "/auth"
    },
    "/auth/forgot-password": {
      "filePath": "auth/forgot-password/route.lazy.ts",
      "parent": "/auth"
    },
    "/app/": {
      "filePath": "app/index.ts",
      "parent": "/app"
    },
    "/auth/": {
      "filePath": "auth/index.ts",
      "parent": "/auth"
    },
    "/app/businesses-rma/representative-turnover": {
      "filePath": "app/businesses-rma/representative-turnover/route.tsx",
      "parent": "/app/businesses-rma"
    },
    "/app/businesses-rma/search-by-products": {
      "filePath": "app/businesses-rma/search-by-products/route.ts",
      "parent": "/app/businesses-rma"
    },
    "/app/dashboard/create-collective-task": {
      "filePath": "app/dashboard/create-collective-task/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/dashboard/create-personal-task": {
      "filePath": "app/dashboard/create-personal-task/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/dashboard/create-progressive-info": {
      "filePath": "app/dashboard/create-progressive-info/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/dashboard/delete-collective-tasks": {
      "filePath": "app/dashboard/delete-collective-tasks/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/enterprises/$enterpriseId": {
      "filePath": "app/enterprises_.$enterpriseId/route.ts",
      "parent": "/app",
      "children": [
        "/app/enterprises/$enterpriseId/address-book",
        "/app/enterprises/$enterpriseId/create-contact",
        "/app/enterprises/$enterpriseId/create-ged-directory",
        "/app/enterprises/$enterpriseId/create-lifesheet-comment",
        "/app/enterprises/$enterpriseId/delete",
        "/app/enterprises/$enterpriseId/import-contacts",
        "/app/enterprises/$enterpriseId/import-ged-files",
        "/app/enterprises/$enterpriseId/update",
        "/app/enterprises/$enterpriseId/update-accountability",
        "/app/enterprises/$enterpriseId/update-category",
        "/app/enterprises/$enterpriseId/update-representative",
        "/app/enterprises/$enterpriseId/create-contact-business/$contactId",
        "/app/enterprises/$enterpriseId/delete-contact/$contactId",
        "/app/enterprises/$enterpriseId/delete-ged-object/$objectRelativePath",
        "/app/enterprises/$enterpriseId/rename-ged-object/$objectRelativePath",
        "/app/enterprises/$enterpriseId/send-email-to-contact/$contactId",
        "/app/enterprises/$enterpriseId/task-email/$taskId",
        "/app/enterprises/$enterpriseId/update-contact-password/$contactId",
        "/app/enterprises/$enterpriseId/update-contact/$contactId"
      ]
    },
    "/app/external-links/$externalLinkId": {
      "filePath": "app/external-links_.$externalLinkId/route.ts",
      "parent": "/app"
    },
    "/app/faq/create": {
      "filePath": "app/faq/create/route.ts",
      "parent": "/app/faq"
    },
    "/app/products/serial-numbers": {
      "filePath": "app/products/serial-numbers/route.ts",
      "parent": "/app/products",
      "children": [
        "/app/products/serial-numbers/create",
        "/app/products/serial-numbers/create-rma/$serialNumberId",
        "/app/products/serial-numbers/delete/$serialNumberId"
      ]
    },
    "/app/products/$productId": {
      "filePath": "app/products_.$productId/route.ts",
      "parent": "/app",
      "children": [
        "/app/products/$productId/informations",
        "/app/products/$productId/manage",
        "/app/products/$productId/"
      ]
    },
    "/app/tools/credit": {
      "filePath": "app/tools/credit/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/credit/details",
        "/app/tools/credit/show"
      ]
    },
    "/app/tools/ddns": {
      "filePath": "app/tools/ddns/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/ddns/create",
        "/app/tools/ddns/delete/$ddnsId"
      ]
    },
    "/app/tools/departments": {
      "filePath": "app/tools/departments/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/departments/create",
        "/app/tools/departments/delete/$departmentId",
        "/app/tools/departments/update/$departmentId"
      ]
    },
    "/app/tools/emails": {
      "filePath": "app/tools/emails/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/emails/$emailId"
      ]
    },
    "/app/tools/external-links": {
      "filePath": "app/tools/external-links/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/external-links/create",
        "/app/tools/external-links/archive/$externalLinkId",
        "/app/tools/external-links/delete/$externalLinkId",
        "/app/tools/external-links/update/$externalLinkId"
      ]
    },
    "/app/tools/formations": {
      "filePath": "app/tools/formations/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/formations/create",
        "/app/tools/formations/delete/$formationId",
        "/app/tools/formations/subscribers/$formationDetailId",
        "/app/tools/formations/update/$formationId"
      ]
    },
    "/app/tools/global-turnover": {
      "filePath": "app/tools/global-turnover/route.ts",
      "parent": "/app/tools"
    },
    "/app/tools/mails": {
      "filePath": "app/tools/mails/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/mails/create",
        "/app/tools/mails/delete/$mailId",
        "/app/tools/mails/show/$mailId",
        "/app/tools/mails/update/$mailId"
      ]
    },
    "/app/tools/menu": {
      "filePath": "app/tools/menu/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/menu/create-enterprise",
        "/app/tools/menu/create-product"
      ]
    },
    "/app/tools/news": {
      "filePath": "app/tools/news/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/news/create",
        "/app/tools/news/delete/$newsId",
        "/app/tools/news/update/$newsId"
      ]
    },
    "/app/tools/predefined-messages": {
      "filePath": "app/tools/predefined-messages/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/predefined-messages/create",
        "/app/tools/predefined-messages/delete/$predefinedMessageId",
        "/app/tools/predefined-messages/update/$predefinedMessageId"
      ]
    },
    "/app/tools/predefined-texts": {
      "filePath": "app/tools/predefined-texts/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/predefined-texts/create",
        "/app/tools/predefined-texts/delete/$predefinedTextId",
        "/app/tools/predefined-texts/update/$predefinedTextId"
      ]
    },
    "/app/tools/product-filters": {
      "filePath": "app/tools/product-filters/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/product-filters/create",
        "/app/tools/product-filters/delete/$productFilterId",
        "/app/tools/product-filters/update/$productFilterId"
      ]
    },
    "/app/tools/product-inventory": {
      "filePath": "app/tools/product-inventory/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/product-inventory/validate-quantities",
        "/app/tools/product-inventory/update/$stockId"
      ]
    },
    "/app/tools/product-shelves": {
      "filePath": "app/tools/product-shelves/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/product-shelves/create",
        "/app/tools/product-shelves/delete/$productShelfId"
      ]
    },
    "/app/tools/representatives-map": {
      "filePath": "app/tools/representatives-map/route.ts",
      "parent": "/app/tools"
    },
    "/app/tools/representatives-turnover": {
      "filePath": "app/tools/representatives-turnover/route.ts",
      "parent": "/app/tools"
    },
    "/app/tools/scheduler": {
      "filePath": "app/tools/scheduler/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/scheduler/create",
        "/app/tools/scheduler/details/$rdvId"
      ]
    },
    "/app/tools/vva": {
      "filePath": "app/tools/vva/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/vva/create",
        "/app/tools/vva/delete/$vvaId"
      ]
    },
    "/auth/reset-password/$token": {
      "filePath": "auth/reset-password.$token/route.lazy.ts",
      "parent": "/auth"
    },
    "/app/tools/": {
      "filePath": "app/tools/index.ts",
      "parent": "/app/tools"
    },
    "/app/businesses-rma/business/$businessId": {
      "filePath": "app/businesses-rma_/business.$businessId/route.ts",
      "parent": "/app",
      "children": [
        "/app/businesses-rma/business/$businessId/arc",
        "/app/businesses-rma/business/$businessId/bill",
        "/app/businesses-rma/business/$businessId/bl",
        "/app/businesses-rma/business/$businessId/bp",
        "/app/businesses-rma/business/$businessId/dashboard",
        "/app/businesses-rma/business/$businessId/quotation",
        "/app/businesses-rma/business/$businessId/"
      ]
    },
    "/app/businesses-rma/rma/$rmaId": {
      "filePath": "app/businesses-rma_/rma.$rmaId/route.ts",
      "parent": "/app",
      "children": [
        "/app/businesses-rma/rma/$rmaId/delivery",
        "/app/businesses-rma/rma/$rmaId/reception",
        "/app/businesses-rma/rma/$rmaId/support",
        "/app/businesses-rma/rma/$rmaId/"
      ]
    },
    "/app/dashboard/archive-personal-task/$taskId": {
      "filePath": "app/dashboard/archive-personal-task.$taskId/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/dashboard/delete-collective-task/$taskId": {
      "filePath": "app/dashboard/delete-collective-task.$taskId/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/dashboard/delete-progressive-info/$progressiveInfoId": {
      "filePath": "app/dashboard/delete-progressive-info.$progressiveInfoId/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/dashboard/link-personal-task/$taskId": {
      "filePath": "app/dashboard/link-personal-task.$taskId/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/dashboard/other-personal-tasks/$profileId": {
      "filePath": "app/dashboard/other-personal-tasks.$profileId/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/dashboard/personal-task-details/$taskId": {
      "filePath": "app/dashboard/personal-task-details.$taskId/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/dashboard/scheduler-event-details/$eventId": {
      "filePath": "app/dashboard/scheduler-event-details.$eventId/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/dashboard/take-collective-task/$taskId": {
      "filePath": "app/dashboard/take-collective-task.$taskId/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/dashboard/task-comments/$taskId": {
      "filePath": "app/dashboard/task-comments.$taskId/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/dashboard/task-email/$taskId": {
      "filePath": "app/dashboard/task-email.$taskId/route.ts",
      "parent": "/app/dashboard",
      "children": [
        "/app/dashboard/task-email/$taskId/reply"
      ]
    },
    "/app/dashboard/transfer-task/$taskId": {
      "filePath": "app/dashboard/transfer-task.$taskId/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/dashboard/update-personal-task-deadline/$taskId": {
      "filePath": "app/dashboard/update-personal-task-deadline.$taskId/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/dashboard/update-progressive-info/$progressiveInfoId": {
      "filePath": "app/dashboard/update-progressive-info.$progressiveInfoId/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/dashboard/validate-personal-task/$taskId": {
      "filePath": "app/dashboard/validate-personal-task.$taskId/route.ts",
      "parent": "/app/dashboard"
    },
    "/app/enterprises/create-contact-business/$contactId": {
      "filePath": "app/enterprises/create-contact-business.$contactId/route.ts",
      "parent": "/app/enterprises"
    },
    "/app/enterprises/create-contact-travel-voucher/$contactId": {
      "filePath": "app/enterprises/create-contact-travel-voucher.$contactId/route.ts",
      "parent": "/app/enterprises"
    },
    "/app/enterprises/create-contact/$enterpriseId": {
      "filePath": "app/enterprises/create-contact.$enterpriseId/route.ts",
      "parent": "/app/enterprises"
    },
    "/app/enterprises/create-enterprise-rma/$enterpriseId": {
      "filePath": "app/enterprises/create-enterprise-rma.$enterpriseId/route.ts",
      "parent": "/app/enterprises"
    },
    "/app/enterprises/delete-contact/$contactId": {
      "filePath": "app/enterprises/delete-contact.$contactId/route.ts",
      "parent": "/app/enterprises"
    },
    "/app/enterprises/send-email-to-contact/$contactId": {
      "filePath": "app/enterprises/send-email-to-contact.$contactId/route.ts",
      "parent": "/app/enterprises"
    },
    "/app/enterprises/update-contact-password/$contactId": {
      "filePath": "app/enterprises/update-contact-password.$contactId/route.ts",
      "parent": "/app/enterprises"
    },
    "/app/enterprises/update-contact/$contactId": {
      "filePath": "app/enterprises/update-contact.$contactId/route.ts",
      "parent": "/app/enterprises"
    },
    "/app/enterprises/$enterpriseId/address-book": {
      "filePath": "app/enterprises_.$enterpriseId/address-book/route.ts",
      "parent": "/app/enterprises/$enterpriseId",
      "children": [
        "/app/enterprises/$enterpriseId/address-book/create",
        "/app/enterprises/$enterpriseId/address-book/delete/$addressId",
        "/app/enterprises/$enterpriseId/address-book/update/$addressId"
      ]
    },
    "/app/enterprises/$enterpriseId/create-contact": {
      "filePath": "app/enterprises_.$enterpriseId/create-contact/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/enterprises/$enterpriseId/create-ged-directory": {
      "filePath": "app/enterprises_.$enterpriseId/create-ged-directory/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/enterprises/$enterpriseId/create-lifesheet-comment": {
      "filePath": "app/enterprises_.$enterpriseId/create-lifesheet-comment/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/enterprises/$enterpriseId/delete": {
      "filePath": "app/enterprises_.$enterpriseId/delete/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/enterprises/$enterpriseId/import-contacts": {
      "filePath": "app/enterprises_.$enterpriseId/import-contacts/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/enterprises/$enterpriseId/import-ged-files": {
      "filePath": "app/enterprises_.$enterpriseId/import-ged-files/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/enterprises/$enterpriseId/update": {
      "filePath": "app/enterprises_.$enterpriseId/update/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/enterprises/$enterpriseId/update-accountability": {
      "filePath": "app/enterprises_.$enterpriseId/update-accountability/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/enterprises/$enterpriseId/update-category": {
      "filePath": "app/enterprises_.$enterpriseId/update-category/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/enterprises/$enterpriseId/update-representative": {
      "filePath": "app/enterprises_.$enterpriseId/update-representative/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/faq/archive/$faqId": {
      "filePath": "app/faq/archive.$faqId/route.ts",
      "parent": "/app/faq"
    },
    "/app/faq/delete/$faqId": {
      "filePath": "app/faq/delete.$faqId/route.ts",
      "parent": "/app/faq"
    },
    "/app/faq/ged/$faqId": {
      "filePath": "app/faq/ged.$faqId/route.ts",
      "parent": "/app/faq",
      "children": [
        "/app/faq/ged/$faqId/create-directory",
        "/app/faq/ged/$faqId/import-files",
        "/app/faq/ged/$faqId/delete/$itemRelativePath",
        "/app/faq/ged/$faqId/rename/$itemRelativePath"
      ]
    },
    "/app/faq/send-by-email/$faqId": {
      "filePath": "app/faq/send-by-email.$faqId/route.ts",
      "parent": "/app/faq"
    },
    "/app/faq/update/$faqId": {
      "filePath": "app/faq/update.$faqId/route.ts",
      "parent": "/app/faq"
    },
    "/app/products/serial-numbers/create": {
      "filePath": "app/products/serial-numbers/create/route.ts",
      "parent": "/app/products/serial-numbers"
    },
    "/app/products/$productId/informations": {
      "filePath": "app/products_.$productId/informations/route.ts",
      "parent": "/app/products/$productId",
      "children": [
        "/app/products/$productId/informations/create-ged-directory",
        "/app/products/$productId/informations/create-lifesheet-comment",
        "/app/products/$productId/informations/delete-ged-object",
        "/app/products/$productId/informations/import-ged-files",
        "/app/products/$productId/informations/rename-ged-object",
        "/app/products/$productId/informations/task-email/$taskId"
      ]
    },
    "/app/products/$productId/manage": {
      "filePath": "app/products_.$productId/manage/route.ts",
      "parent": "/app/products/$productId",
      "children": [
        "/app/products/$productId/manage/add-associated-product",
        "/app/products/$productId/manage/add-specification",
        "/app/products/$productId/manage/create-stock",
        "/app/products/$productId/manage/create-version",
        "/app/products/$productId/manage/delete-specification/$specificationId",
        "/app/products/$productId/manage/delete-stock/$stockId",
        "/app/products/$productId/manage/delete-version/$versionId",
        "/app/products/$productId/manage/remove-associated-product/$associatedProductId",
        "/app/products/$productId/manage/stock-history/$stockId",
        "/app/products/$productId/manage/update-specification/$specificationId",
        "/app/products/$productId/manage/update-stock/$stockId",
        "/app/products/$productId/manage/update-version/$versionId"
      ]
    },
    "/app/tools/credit/details": {
      "filePath": "app/tools/credit/details/route.ts",
      "parent": "/app/tools/credit"
    },
    "/app/tools/credit/show": {
      "filePath": "app/tools/credit/show/route.ts",
      "parent": "/app/tools/credit"
    },
    "/app/tools/ddns/create": {
      "filePath": "app/tools/ddns/create/route.ts",
      "parent": "/app/tools/ddns"
    },
    "/app/tools/departments/create": {
      "filePath": "app/tools/departments/create/route.ts",
      "parent": "/app/tools/departments"
    },
    "/app/tools/emails/$emailId": {
      "filePath": "app/tools/emails/$emailId/route.ts",
      "parent": "/app/tools/emails",
      "children": [
        "/app/tools/emails/$emailId/reply"
      ]
    },
    "/app/tools/emails/send": {
      "filePath": "app/tools/emails_.send/route.ts",
      "parent": "/app/tools",
      "children": [
        "/app/tools/emails/send/predefined-messages"
      ]
    },
    "/app/tools/external-links/create": {
      "filePath": "app/tools/external-links/create/route.ts",
      "parent": "/app/tools/external-links"
    },
    "/app/tools/formations/create": {
      "filePath": "app/tools/formations/create/route.ts",
      "parent": "/app/tools/formations",
      "children": [
        "/app/tools/formations/create/add-detail",
        "/app/tools/formations/create/details"
      ]
    },
    "/app/tools/mails/create": {
      "filePath": "app/tools/mails/create/route.ts",
      "parent": "/app/tools/mails"
    },
    "/app/tools/menu/create-enterprise": {
      "filePath": "app/tools/menu/create-enterprise/route.ts",
      "parent": "/app/tools/menu",
      "children": [
        "/app/tools/menu/create-enterprise/add-contact",
        "/app/tools/menu/create-enterprise/contacts"
      ]
    },
    "/app/tools/menu/create-product": {
      "filePath": "app/tools/menu/create-product/route.ts",
      "parent": "/app/tools/menu"
    },
    "/app/tools/news/create": {
      "filePath": "app/tools/news/create/route.ts",
      "parent": "/app/tools/news"
    },
    "/app/tools/predefined-messages/create": {
      "filePath": "app/tools/predefined-messages/create/route.ts",
      "parent": "/app/tools/predefined-messages"
    },
    "/app/tools/predefined-texts/create": {
      "filePath": "app/tools/predefined-texts/create/route.ts",
      "parent": "/app/tools/predefined-texts"
    },
    "/app/tools/product-filters/create": {
      "filePath": "app/tools/product-filters/create/route.ts",
      "parent": "/app/tools/product-filters"
    },
    "/app/tools/product-inventory/validate-quantities": {
      "filePath": "app/tools/product-inventory/validate-quantities/route.ts",
      "parent": "/app/tools/product-inventory"
    },
    "/app/tools/product-shelves/create": {
      "filePath": "app/tools/product-shelves/create/route.ts",
      "parent": "/app/tools/product-shelves"
    },
    "/app/tools/scheduler/create": {
      "filePath": "app/tools/scheduler/create/route.ts",
      "parent": "/app/tools/scheduler"
    },
    "/app/tools/vva/create": {
      "filePath": "app/tools/vva/create/route.ts",
      "parent": "/app/tools/vva"
    },
    "/app/products/$productId/": {
      "filePath": "app/products_.$productId/index.ts",
      "parent": "/app/products/$productId"
    },
    "/app/businesses-rma/business/$businessId/arc": {
      "filePath": "app/businesses-rma_/business.$businessId/arc/route.ts",
      "parent": "/app/businesses-rma/business/$businessId",
      "children": [
        "/app/businesses-rma/business/$businessId/arc/pdf",
        "/app/businesses-rma/business/$businessId/arc/update-shipping-price",
        "/app/businesses-rma/business/$businessId/arc/delete-detail/$detailId",
        "/app/businesses-rma/business/$businessId/arc/update-detail/$detailId"
      ]
    },
    "/app/businesses-rma/business/$businessId/bill": {
      "filePath": "app/businesses-rma_/business.$businessId/bill/route.ts",
      "parent": "/app/businesses-rma/business/$businessId",
      "children": [
        "/app/businesses-rma/business/$businessId/bill/credits",
        "/app/businesses-rma/business/$businessId/bill/send-by-email"
      ]
    },
    "/app/businesses-rma/business/$businessId/bl": {
      "filePath": "app/businesses-rma_/business.$businessId/bl/route.ts",
      "parent": "/app/businesses-rma/business/$businessId",
      "children": [
        "/app/businesses-rma/business/$businessId/bl/send-by-email"
      ]
    },
    "/app/businesses-rma/business/$businessId/bp": {
      "filePath": "app/businesses-rma_/business.$businessId/bp/route.ts",
      "parent": "/app/businesses-rma/business/$businessId",
      "children": [
        "/app/businesses-rma/business/$businessId/bp/travel-voucher",
        "/app/businesses-rma/business/$businessId/bp/add-serial/$detailId",
        "/app/businesses-rma/business/$businessId/bp/create-detail-rma/$detailId",
        "/app/businesses-rma/business/$businessId/bp/create-serial-rma/$serialId",
        "/app/businesses-rma/business/$businessId/bp/delete-detail/$detailId",
        "/app/businesses-rma/business/$businessId/bp/delete-serial/$serialId",
        "/app/businesses-rma/business/$businessId/bp/update-detail/$detailId"
      ]
    },
    "/app/businesses-rma/business/$businessId/dashboard": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/route.ts",
      "parent": "/app/businesses-rma/business/$businessId",
      "children": [
        "/app/businesses-rma/business/$businessId/dashboard/address-book",
        "/app/businesses-rma/business/$businessId/dashboard/create-ged-directory",
        "/app/businesses-rma/business/$businessId/dashboard/create-lifesheet",
        "/app/businesses-rma/business/$businessId/dashboard/create-link",
        "/app/businesses-rma/business/$businessId/dashboard/delete",
        "/app/businesses-rma/business/$businessId/dashboard/import-ged-files",
        "/app/businesses-rma/business/$businessId/dashboard/send-email",
        "/app/businesses-rma/business/$businessId/dashboard/update-billing-address",
        "/app/businesses-rma/business/$businessId/dashboard/update-representative",
        "/app/businesses-rma/business/$businessId/dashboard/update-responsible",
        "/app/businesses-rma/business/$businessId/dashboard/confirm-quotation-import/$otherBusinessId",
        "/app/businesses-rma/business/$businessId/dashboard/delete-ged-object/$objectRelativePath",
        "/app/businesses-rma/business/$businessId/dashboard/delete-link/$associatedId",
        "/app/businesses-rma/business/$businessId/dashboard/rename-ged-object/$objectRelativePath",
        "/app/businesses-rma/business/$businessId/dashboard/task-email/$taskId"
      ]
    },
    "/app/businesses-rma/business/$businessId/quotation": {
      "filePath": "app/businesses-rma_/business.$businessId/quotation/route.ts",
      "parent": "/app/businesses-rma/business/$businessId",
      "children": [
        "/app/businesses-rma/business/$businessId/quotation/commercial-notice",
        "/app/businesses-rma/business/$businessId/quotation/pdf",
        "/app/businesses-rma/business/$businessId/quotation/update-shipping-price",
        "/app/businesses-rma/business/$businessId/quotation/create-associated-detail/$detailId",
        "/app/businesses-rma/business/$businessId/quotation/create-detail/$subquotationId",
        "/app/businesses-rma/business/$businessId/quotation/delete-detail/$detailId",
        "/app/businesses-rma/business/$businessId/quotation/delete-subquotation/$subquotationId",
        "/app/businesses-rma/business/$businessId/quotation/update-detail/$detailId",
        "/app/businesses-rma/business/$businessId/quotation/update-subquotation/$subquotationId"
      ]
    },
    "/app/businesses-rma/rma/$rmaId/delivery": {
      "filePath": "app/businesses-rma_/rma.$rmaId/delivery/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId",
      "children": [
        "/app/businesses-rma/rma/$rmaId/delivery/create-detail",
        "/app/businesses-rma/rma/$rmaId/delivery/pdf",
        "/app/businesses-rma/rma/$rmaId/delivery/travel-voucher",
        "/app/businesses-rma/rma/$rmaId/delivery/delete-detail/$detailId",
        "/app/businesses-rma/rma/$rmaId/delivery/update-detail/$detailId"
      ]
    },
    "/app/businesses-rma/rma/$rmaId/reception": {
      "filePath": "app/businesses-rma_/rma.$rmaId/reception/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId",
      "children": [
        "/app/businesses-rma/rma/$rmaId/reception/create-detail",
        "/app/businesses-rma/rma/$rmaId/reception/pdf",
        "/app/businesses-rma/rma/$rmaId/reception/delete-detail/$detailId",
        "/app/businesses-rma/rma/$rmaId/reception/update-detail/$detailId"
      ]
    },
    "/app/businesses-rma/rma/$rmaId/support": {
      "filePath": "app/businesses-rma_/rma.$rmaId/support/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId",
      "children": [
        "/app/businesses-rma/rma/$rmaId/support/create-detail",
        "/app/businesses-rma/rma/$rmaId/support/create-ged-directory",
        "/app/businesses-rma/rma/$rmaId/support/create-lifesheet",
        "/app/businesses-rma/rma/$rmaId/support/import-ged-files",
        "/app/businesses-rma/rma/$rmaId/support/pdf",
        "/app/businesses-rma/rma/$rmaId/support/delete-detail/$detailId",
        "/app/businesses-rma/rma/$rmaId/support/delete-ged-object/$relativePath",
        "/app/businesses-rma/rma/$rmaId/support/rename-ged-object/$objectRelativePath",
        "/app/businesses-rma/rma/$rmaId/support/task-email/$taskId",
        "/app/businesses-rma/rma/$rmaId/support/update-detail/$detailId"
      ]
    },
    "/app/dashboard/task-email/$taskId/reply": {
      "filePath": "app/dashboard/task-email.$taskId/reply/route.ts",
      "parent": "/app/dashboard/task-email/$taskId"
    },
    "/app/enterprises/$enterpriseId/address-book/create": {
      "filePath": "app/enterprises_.$enterpriseId/address-book/create/route.ts",
      "parent": "/app/enterprises/$enterpriseId/address-book"
    },
    "/app/enterprises/$enterpriseId/create-contact-business/$contactId": {
      "filePath": "app/enterprises_.$enterpriseId/create-contact-business.$contactId/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/enterprises/$enterpriseId/delete-contact/$contactId": {
      "filePath": "app/enterprises_.$enterpriseId/delete-contact.$contactId/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/enterprises/$enterpriseId/delete-ged-object/$objectRelativePath": {
      "filePath": "app/enterprises_.$enterpriseId/delete-ged-object.$objectRelativePath/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/enterprises/$enterpriseId/rename-ged-object/$objectRelativePath": {
      "filePath": "app/enterprises_.$enterpriseId/rename-ged-object.$objectRelativePath/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/enterprises/$enterpriseId/send-email-to-contact/$contactId": {
      "filePath": "app/enterprises_.$enterpriseId/send-email-to-contact.$contactId/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/enterprises/$enterpriseId/task-email/$taskId": {
      "filePath": "app/enterprises_.$enterpriseId/task-email.$taskId/route.ts",
      "parent": "/app/enterprises/$enterpriseId",
      "children": [
        "/app/enterprises/$enterpriseId/task-email/$taskId/reply"
      ]
    },
    "/app/enterprises/$enterpriseId/update-contact-password/$contactId": {
      "filePath": "app/enterprises_.$enterpriseId/update-contact-password.$contactId/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/enterprises/$enterpriseId/update-contact/$contactId": {
      "filePath": "app/enterprises_.$enterpriseId/update-contact.$contactId/route.ts",
      "parent": "/app/enterprises/$enterpriseId"
    },
    "/app/faq/ged/$faqId/create-directory": {
      "filePath": "app/faq/ged.$faqId/create-directory/route.ts",
      "parent": "/app/faq/ged/$faqId"
    },
    "/app/faq/ged/$faqId/import-files": {
      "filePath": "app/faq/ged.$faqId/import-files/route.ts",
      "parent": "/app/faq/ged/$faqId"
    },
    "/app/products/serial-numbers/create-rma/$serialNumberId": {
      "filePath": "app/products/serial-numbers/create-rma.$serialNumberId/route.ts",
      "parent": "/app/products/serial-numbers"
    },
    "/app/products/serial-numbers/delete/$serialNumberId": {
      "filePath": "app/products/serial-numbers/delete.$serialNumberId/route.ts",
      "parent": "/app/products/serial-numbers"
    },
    "/app/products/$productId/informations/create-ged-directory": {
      "filePath": "app/products_.$productId/informations/create-ged-directory/route.ts",
      "parent": "/app/products/$productId/informations"
    },
    "/app/products/$productId/informations/create-lifesheet-comment": {
      "filePath": "app/products_.$productId/informations/create-lifesheet-comment/route.ts",
      "parent": "/app/products/$productId/informations"
    },
    "/app/products/$productId/informations/delete-ged-object": {
      "filePath": "app/products_.$productId/informations/delete-ged-object/route.ts",
      "parent": "/app/products/$productId/informations"
    },
    "/app/products/$productId/informations/import-ged-files": {
      "filePath": "app/products_.$productId/informations/import-ged-files/route.ts",
      "parent": "/app/products/$productId/informations"
    },
    "/app/products/$productId/informations/rename-ged-object": {
      "filePath": "app/products_.$productId/informations/rename-ged-object/route.ts",
      "parent": "/app/products/$productId/informations"
    },
    "/app/products/$productId/manage/add-associated-product": {
      "filePath": "app/products_.$productId/manage/add-associated-product/route.ts",
      "parent": "/app/products/$productId/manage"
    },
    "/app/products/$productId/manage/add-specification": {
      "filePath": "app/products_.$productId/manage/add-specification/route.ts",
      "parent": "/app/products/$productId/manage",
      "children": [
        "/app/products/$productId/manage/add-specification/$filterId"
      ]
    },
    "/app/products/$productId/manage/create-stock": {
      "filePath": "app/products_.$productId/manage/create-stock/route.ts",
      "parent": "/app/products/$productId/manage"
    },
    "/app/products/$productId/manage/create-version": {
      "filePath": "app/products_.$productId/manage/create-version/route.ts",
      "parent": "/app/products/$productId/manage"
    },
    "/app/tools/ddns/delete/$ddnsId": {
      "filePath": "app/tools/ddns/delete.$ddnsId/route.ts",
      "parent": "/app/tools/ddns"
    },
    "/app/tools/departments/delete/$departmentId": {
      "filePath": "app/tools/departments/delete.$departmentId/route.ts",
      "parent": "/app/tools/departments"
    },
    "/app/tools/departments/update/$departmentId": {
      "filePath": "app/tools/departments/update.$departmentId/route.ts",
      "parent": "/app/tools/departments"
    },
    "/app/tools/emails/$emailId/reply": {
      "filePath": "app/tools/emails/$emailId/reply/route.ts",
      "parent": "/app/tools/emails/$emailId"
    },
    "/app/tools/emails/send/predefined-messages": {
      "filePath": "app/tools/emails_.send/predefined-messages/route.ts",
      "parent": "/app/tools/emails/send"
    },
    "/app/tools/external-links/archive/$externalLinkId": {
      "filePath": "app/tools/external-links/archive.$externalLinkId/route.ts",
      "parent": "/app/tools/external-links"
    },
    "/app/tools/external-links/delete/$externalLinkId": {
      "filePath": "app/tools/external-links/delete.$externalLinkId/route.ts",
      "parent": "/app/tools/external-links"
    },
    "/app/tools/external-links/update/$externalLinkId": {
      "filePath": "app/tools/external-links/update.$externalLinkId/route.ts",
      "parent": "/app/tools/external-links"
    },
    "/app/tools/formations/create/add-detail": {
      "filePath": "app/tools/formations/create/add-detail/route.ts",
      "parent": "/app/tools/formations/create"
    },
    "/app/tools/formations/create/details": {
      "filePath": "app/tools/formations/create/details/route.ts",
      "parent": "/app/tools/formations/create"
    },
    "/app/tools/formations/delete/$formationId": {
      "filePath": "app/tools/formations/delete.$formationId/route.ts",
      "parent": "/app/tools/formations"
    },
    "/app/tools/formations/subscribers/$formationDetailId": {
      "filePath": "app/tools/formations/subscribers.$formationDetailId/route.ts",
      "parent": "/app/tools/formations",
      "children": [
        "/app/tools/formations/subscribers/$formationDetailId/create",
        "/app/tools/formations/subscribers/$formationDetailId/delete/$subscriptionId",
        "/app/tools/formations/subscribers/$formationDetailId/send-email/$subscriptionId"
      ]
    },
    "/app/tools/formations/update/$formationId": {
      "filePath": "app/tools/formations/update.$formationId/route.ts",
      "parent": "/app/tools/formations",
      "children": [
        "/app/tools/formations/update/$formationId/add-detail",
        "/app/tools/formations/update/$formationId/details"
      ]
    },
    "/app/tools/mails/delete/$mailId": {
      "filePath": "app/tools/mails/delete.$mailId/route.ts",
      "parent": "/app/tools/mails"
    },
    "/app/tools/mails/show/$mailId": {
      "filePath": "app/tools/mails/show.$mailId/route.ts",
      "parent": "/app/tools/mails"
    },
    "/app/tools/mails/update/$mailId": {
      "filePath": "app/tools/mails/update.$mailId/route.ts",
      "parent": "/app/tools/mails"
    },
    "/app/tools/menu/create-enterprise/add-contact": {
      "filePath": "app/tools/menu/create-enterprise/add-contact/route.ts",
      "parent": "/app/tools/menu/create-enterprise"
    },
    "/app/tools/menu/create-enterprise/contacts": {
      "filePath": "app/tools/menu/create-enterprise/contacts/route.ts",
      "parent": "/app/tools/menu/create-enterprise"
    },
    "/app/tools/news/delete/$newsId": {
      "filePath": "app/tools/news/delete.$newsId/route.ts",
      "parent": "/app/tools/news"
    },
    "/app/tools/news/update/$newsId": {
      "filePath": "app/tools/news/update.$newsId/route.ts",
      "parent": "/app/tools/news"
    },
    "/app/tools/predefined-messages/delete/$predefinedMessageId": {
      "filePath": "app/tools/predefined-messages/delete.$predefinedMessageId/route.ts",
      "parent": "/app/tools/predefined-messages"
    },
    "/app/tools/predefined-messages/update/$predefinedMessageId": {
      "filePath": "app/tools/predefined-messages/update.$predefinedMessageId/route.ts",
      "parent": "/app/tools/predefined-messages"
    },
    "/app/tools/predefined-texts/delete/$predefinedTextId": {
      "filePath": "app/tools/predefined-texts/delete.$predefinedTextId/route.ts",
      "parent": "/app/tools/predefined-texts"
    },
    "/app/tools/predefined-texts/update/$predefinedTextId": {
      "filePath": "app/tools/predefined-texts/update.$predefinedTextId/route.ts",
      "parent": "/app/tools/predefined-texts"
    },
    "/app/tools/product-filters/delete/$productFilterId": {
      "filePath": "app/tools/product-filters/delete.$productFilterId/route.ts",
      "parent": "/app/tools/product-filters"
    },
    "/app/tools/product-filters/update/$productFilterId": {
      "filePath": "app/tools/product-filters/update.$productFilterId/route.ts",
      "parent": "/app/tools/product-filters"
    },
    "/app/tools/product-inventory/update/$stockId": {
      "filePath": "app/tools/product-inventory/update.$stockId/route.ts",
      "parent": "/app/tools/product-inventory"
    },
    "/app/tools/product-shelves/delete/$productShelfId": {
      "filePath": "app/tools/product-shelves/delete.$productShelfId/route.ts",
      "parent": "/app/tools/product-shelves"
    },
    "/app/tools/scheduler/details/$rdvId": {
      "filePath": "app/tools/scheduler/details.$rdvId/route.ts",
      "parent": "/app/tools/scheduler",
      "children": [
        "/app/tools/scheduler/details/$rdvId/delete",
        "/app/tools/scheduler/details/$rdvId/update"
      ]
    },
    "/app/tools/vva/delete/$vvaId": {
      "filePath": "app/tools/vva/delete.$vvaId/route.ts",
      "parent": "/app/tools/vva"
    },
    "/app/businesses-rma/business/$businessId/": {
      "filePath": "app/businesses-rma_/business.$businessId/index.ts",
      "parent": "/app/businesses-rma/business/$businessId"
    },
    "/app/businesses-rma/rma/$rmaId/": {
      "filePath": "app/businesses-rma_/rma.$rmaId/index.ts",
      "parent": "/app/businesses-rma/rma/$rmaId"
    },
    "/app/businesses-rma/business/$businessId/arc/pdf": {
      "filePath": "app/businesses-rma_/business.$businessId/arc/pdf/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/arc",
      "children": [
        "/app/businesses-rma/business/$businessId/arc/pdf/send-by-email"
      ]
    },
    "/app/businesses-rma/business/$businessId/arc/update-shipping-price": {
      "filePath": "app/businesses-rma_/business.$businessId/arc/update-shipping-price/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/arc"
    },
    "/app/businesses-rma/business/$businessId/bill/credits": {
      "filePath": "app/businesses-rma_/business.$businessId/bill/credits/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/bill",
      "children": [
        "/app/businesses-rma/business/$businessId/bill/credits/send-by-email"
      ]
    },
    "/app/businesses-rma/business/$businessId/bill/send-by-email": {
      "filePath": "app/businesses-rma_/business.$businessId/bill/send-by-email/route.tsx",
      "parent": "/app/businesses-rma/business/$businessId/bill"
    },
    "/app/businesses-rma/business/$businessId/bl/send-by-email": {
      "filePath": "app/businesses-rma_/business.$businessId/bl/send-by-email/route.tsx",
      "parent": "/app/businesses-rma/business/$businessId/bl"
    },
    "/app/businesses-rma/business/$businessId/bp/travel-voucher": {
      "filePath": "app/businesses-rma_/business.$businessId/bp/travel-voucher/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/bp"
    },
    "/app/businesses-rma/business/$businessId/dashboard/address-book": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/address-book/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard",
      "children": [
        "/app/businesses-rma/business/$businessId/dashboard/address-book/create",
        "/app/businesses-rma/business/$businessId/dashboard/address-book/delete/$addressId",
        "/app/businesses-rma/business/$businessId/dashboard/address-book/update/$addressId"
      ]
    },
    "/app/businesses-rma/business/$businessId/dashboard/create-ged-directory": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/create-ged-directory/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard"
    },
    "/app/businesses-rma/business/$businessId/dashboard/create-lifesheet": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/create-lifesheet/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard"
    },
    "/app/businesses-rma/business/$businessId/dashboard/create-link": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/create-link/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard"
    },
    "/app/businesses-rma/business/$businessId/dashboard/delete": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/delete/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard"
    },
    "/app/businesses-rma/business/$businessId/dashboard/import-ged-files": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/import-ged-files/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard"
    },
    "/app/businesses-rma/business/$businessId/dashboard/send-email": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/send-email/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard"
    },
    "/app/businesses-rma/business/$businessId/dashboard/update-billing-address": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/update-billing-address/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard"
    },
    "/app/businesses-rma/business/$businessId/dashboard/update-representative": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/update-representative/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard"
    },
    "/app/businesses-rma/business/$businessId/dashboard/update-responsible": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/update-responsible/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard"
    },
    "/app/businesses-rma/business/$businessId/quotation/commercial-notice": {
      "filePath": "app/businesses-rma_/business.$businessId/quotation/commercial-notice/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/quotation",
      "children": [
        "/app/businesses-rma/business/$businessId/quotation/commercial-notice/send-by-email"
      ]
    },
    "/app/businesses-rma/business/$businessId/quotation/pdf": {
      "filePath": "app/businesses-rma_/business.$businessId/quotation/pdf/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/quotation",
      "children": [
        "/app/businesses-rma/business/$businessId/quotation/pdf/send-by-email"
      ]
    },
    "/app/businesses-rma/business/$businessId/quotation/update-shipping-price": {
      "filePath": "app/businesses-rma_/business.$businessId/quotation/update-shipping-price/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/quotation"
    },
    "/app/businesses-rma/business/$businessId/assistance/$assistanceId": {
      "filePath": "app/businesses-rma_/business.$businessId_.assistance.$assistanceId/route.ts",
      "parent": "/app",
      "children": [
        "/app/businesses-rma/business/$businessId/assistance/$assistanceId/create-ged-directory",
        "/app/businesses-rma/business/$businessId/assistance/$assistanceId/create-lifesheet",
        "/app/businesses-rma/business/$businessId/assistance/$assistanceId/delete",
        "/app/businesses-rma/business/$businessId/assistance/$assistanceId/edit-cumulated-time",
        "/app/businesses-rma/business/$businessId/assistance/$assistanceId/edit-no-billed-time",
        "/app/businesses-rma/business/$businessId/assistance/$assistanceId/edit-subtitle",
        "/app/businesses-rma/business/$businessId/assistance/$assistanceId/import-ged-files",
        "/app/businesses-rma/business/$businessId/assistance/$assistanceId/pdf",
        "/app/businesses-rma/business/$businessId/assistance/$assistanceId/delete-ged-object/$objectRelativePath",
        "/app/businesses-rma/business/$businessId/assistance/$assistanceId/rename-ged-object/$objectRelativePath"
      ]
    },
    "/app/businesses-rma/rma/$rmaId/delivery/create-detail": {
      "filePath": "app/businesses-rma_/rma.$rmaId/delivery/create-detail/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/delivery"
    },
    "/app/businesses-rma/rma/$rmaId/delivery/pdf": {
      "filePath": "app/businesses-rma_/rma.$rmaId/delivery/pdf/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/delivery",
      "children": [
        "/app/businesses-rma/rma/$rmaId/delivery/pdf/send-by-email"
      ]
    },
    "/app/businesses-rma/rma/$rmaId/delivery/travel-voucher": {
      "filePath": "app/businesses-rma_/rma.$rmaId/delivery/travel-voucher/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/delivery"
    },
    "/app/businesses-rma/rma/$rmaId/reception/create-detail": {
      "filePath": "app/businesses-rma_/rma.$rmaId/reception/create-detail/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/reception"
    },
    "/app/businesses-rma/rma/$rmaId/reception/pdf": {
      "filePath": "app/businesses-rma_/rma.$rmaId/reception/pdf/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/reception",
      "children": [
        "/app/businesses-rma/rma/$rmaId/reception/pdf/send-by-email"
      ]
    },
    "/app/businesses-rma/rma/$rmaId/support/create-detail": {
      "filePath": "app/businesses-rma_/rma.$rmaId/support/create-detail/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/support"
    },
    "/app/businesses-rma/rma/$rmaId/support/create-ged-directory": {
      "filePath": "app/businesses-rma_/rma.$rmaId/support/create-ged-directory/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/support"
    },
    "/app/businesses-rma/rma/$rmaId/support/create-lifesheet": {
      "filePath": "app/businesses-rma_/rma.$rmaId/support/create-lifesheet/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/support"
    },
    "/app/businesses-rma/rma/$rmaId/support/import-ged-files": {
      "filePath": "app/businesses-rma_/rma.$rmaId/support/import-ged-files/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/support"
    },
    "/app/businesses-rma/rma/$rmaId/support/pdf": {
      "filePath": "app/businesses-rma_/rma.$rmaId/support/pdf/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/support",
      "children": [
        "/app/businesses-rma/rma/$rmaId/support/pdf/send-by-email"
      ]
    },
    "/app/enterprises/$enterpriseId/address-book/delete/$addressId": {
      "filePath": "app/enterprises_.$enterpriseId/address-book/delete.$addressId/route.ts",
      "parent": "/app/enterprises/$enterpriseId/address-book"
    },
    "/app/enterprises/$enterpriseId/address-book/update/$addressId": {
      "filePath": "app/enterprises_.$enterpriseId/address-book/update.$addressId/route.ts",
      "parent": "/app/enterprises/$enterpriseId/address-book"
    },
    "/app/enterprises/$enterpriseId/task-email/$taskId/reply": {
      "filePath": "app/enterprises_.$enterpriseId/task-email.$taskId/reply/route.ts",
      "parent": "/app/enterprises/$enterpriseId/task-email/$taskId"
    },
    "/app/faq/ged/$faqId/delete/$itemRelativePath": {
      "filePath": "app/faq/ged.$faqId/delete.$itemRelativePath/route.ts",
      "parent": "/app/faq/ged/$faqId"
    },
    "/app/faq/ged/$faqId/rename/$itemRelativePath": {
      "filePath": "app/faq/ged.$faqId/rename.$itemRelativePath/route.ts",
      "parent": "/app/faq/ged/$faqId"
    },
    "/app/products/$productId/informations/task-email/$taskId": {
      "filePath": "app/products_.$productId/informations/task-email.$taskId/route.ts",
      "parent": "/app/products/$productId/informations",
      "children": [
        "/app/products/$productId/informations/task-email/$taskId/reply"
      ]
    },
    "/app/products/$productId/manage/add-specification/$filterId": {
      "filePath": "app/products_.$productId/manage/add-specification/$filterId/route.ts",
      "parent": "/app/products/$productId/manage/add-specification"
    },
    "/app/products/$productId/manage/delete-specification/$specificationId": {
      "filePath": "app/products_.$productId/manage/delete-specification.$specificationId/route.ts",
      "parent": "/app/products/$productId/manage"
    },
    "/app/products/$productId/manage/delete-stock/$stockId": {
      "filePath": "app/products_.$productId/manage/delete-stock.$stockId/route.ts",
      "parent": "/app/products/$productId/manage"
    },
    "/app/products/$productId/manage/delete-version/$versionId": {
      "filePath": "app/products_.$productId/manage/delete-version.$versionId/route.ts",
      "parent": "/app/products/$productId/manage"
    },
    "/app/products/$productId/manage/remove-associated-product/$associatedProductId": {
      "filePath": "app/products_.$productId/manage/remove-associated-product.$associatedProductId/route.ts",
      "parent": "/app/products/$productId/manage"
    },
    "/app/products/$productId/manage/stock-history/$stockId": {
      "filePath": "app/products_.$productId/manage/stock-history.$stockId/route.ts",
      "parent": "/app/products/$productId/manage"
    },
    "/app/products/$productId/manage/update-specification/$specificationId": {
      "filePath": "app/products_.$productId/manage/update-specification.$specificationId/route.ts",
      "parent": "/app/products/$productId/manage"
    },
    "/app/products/$productId/manage/update-stock/$stockId": {
      "filePath": "app/products_.$productId/manage/update-stock.$stockId/route.ts",
      "parent": "/app/products/$productId/manage"
    },
    "/app/products/$productId/manage/update-version/$versionId": {
      "filePath": "app/products_.$productId/manage/update-version.$versionId/route.ts",
      "parent": "/app/products/$productId/manage"
    },
    "/app/tools/formations/subscribers/$formationDetailId/create": {
      "filePath": "app/tools/formations/subscribers.$formationDetailId/create/route.ts",
      "parent": "/app/tools/formations/subscribers/$formationDetailId"
    },
    "/app/tools/formations/update/$formationId/add-detail": {
      "filePath": "app/tools/formations/update.$formationId/add-detail/route.ts",
      "parent": "/app/tools/formations/update/$formationId"
    },
    "/app/tools/formations/update/$formationId/details": {
      "filePath": "app/tools/formations/update.$formationId/details/route.ts",
      "parent": "/app/tools/formations/update/$formationId"
    },
    "/app/tools/scheduler/details/$rdvId/delete": {
      "filePath": "app/tools/scheduler/details.$rdvId/delete/route.ts",
      "parent": "/app/tools/scheduler/details/$rdvId"
    },
    "/app/tools/scheduler/details/$rdvId/update": {
      "filePath": "app/tools/scheduler/details.$rdvId/update/route.ts",
      "parent": "/app/tools/scheduler/details/$rdvId"
    },
    "/app/businesses-rma/business/$businessId/arc/delete-detail/$detailId": {
      "filePath": "app/businesses-rma_/business.$businessId/arc/delete-detail.$detailId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/arc"
    },
    "/app/businesses-rma/business/$businessId/arc/pdf/send-by-email": {
      "filePath": "app/businesses-rma_/business.$businessId/arc/pdf/send-by-email/route.tsx",
      "parent": "/app/businesses-rma/business/$businessId/arc/pdf"
    },
    "/app/businesses-rma/business/$businessId/arc/update-detail/$detailId": {
      "filePath": "app/businesses-rma_/business.$businessId/arc/update-detail.$detailId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/arc"
    },
    "/app/businesses-rma/business/$businessId/bill/credits/send-by-email": {
      "filePath": "app/businesses-rma_/business.$businessId/bill/credits/send-by-email/route.tsx",
      "parent": "/app/businesses-rma/business/$businessId/bill/credits"
    },
    "/app/businesses-rma/business/$businessId/bp/add-serial/$detailId": {
      "filePath": "app/businesses-rma_/business.$businessId/bp/add-serial.$detailId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/bp"
    },
    "/app/businesses-rma/business/$businessId/bp/create-detail-rma/$detailId": {
      "filePath": "app/businesses-rma_/business.$businessId/bp/create-detail-rma.$detailId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/bp"
    },
    "/app/businesses-rma/business/$businessId/bp/create-serial-rma/$serialId": {
      "filePath": "app/businesses-rma_/business.$businessId/bp/create-serial-rma.$serialId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/bp"
    },
    "/app/businesses-rma/business/$businessId/bp/delete-detail/$detailId": {
      "filePath": "app/businesses-rma_/business.$businessId/bp/delete-detail.$detailId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/bp"
    },
    "/app/businesses-rma/business/$businessId/bp/delete-serial/$serialId": {
      "filePath": "app/businesses-rma_/business.$businessId/bp/delete-serial.$serialId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/bp"
    },
    "/app/businesses-rma/business/$businessId/bp/update-detail/$detailId": {
      "filePath": "app/businesses-rma_/business.$businessId/bp/update-detail.$detailId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/bp"
    },
    "/app/businesses-rma/business/$businessId/dashboard/address-book/create": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/address-book/create/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard/address-book"
    },
    "/app/businesses-rma/business/$businessId/dashboard/confirm-quotation-import/$otherBusinessId": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/confirm-quotation-import.$otherBusinessId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard"
    },
    "/app/businesses-rma/business/$businessId/dashboard/delete-ged-object/$objectRelativePath": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/delete-ged-object.$objectRelativePath/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard"
    },
    "/app/businesses-rma/business/$businessId/dashboard/delete-link/$associatedId": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/delete-link.$associatedId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard"
    },
    "/app/businesses-rma/business/$businessId/dashboard/rename-ged-object/$objectRelativePath": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/rename-ged-object.$objectRelativePath/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard"
    },
    "/app/businesses-rma/business/$businessId/dashboard/task-email/$taskId": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/task-email.$taskId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard"
    },
    "/app/businesses-rma/business/$businessId/quotation/commercial-notice/send-by-email": {
      "filePath": "app/businesses-rma_/business.$businessId/quotation/commercial-notice/send-by-email/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/quotation/commercial-notice"
    },
    "/app/businesses-rma/business/$businessId/quotation/create-associated-detail/$detailId": {
      "filePath": "app/businesses-rma_/business.$businessId/quotation/create-associated-detail.$detailId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/quotation"
    },
    "/app/businesses-rma/business/$businessId/quotation/create-detail/$subquotationId": {
      "filePath": "app/businesses-rma_/business.$businessId/quotation/create-detail.$subquotationId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/quotation"
    },
    "/app/businesses-rma/business/$businessId/quotation/delete-detail/$detailId": {
      "filePath": "app/businesses-rma_/business.$businessId/quotation/delete-detail.$detailId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/quotation"
    },
    "/app/businesses-rma/business/$businessId/quotation/delete-subquotation/$subquotationId": {
      "filePath": "app/businesses-rma_/business.$businessId/quotation/delete-subquotation.$subquotationId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/quotation"
    },
    "/app/businesses-rma/business/$businessId/quotation/pdf/send-by-email": {
      "filePath": "app/businesses-rma_/business.$businessId/quotation/pdf/send-by-email/route.tsx",
      "parent": "/app/businesses-rma/business/$businessId/quotation/pdf"
    },
    "/app/businesses-rma/business/$businessId/quotation/update-detail/$detailId": {
      "filePath": "app/businesses-rma_/business.$businessId/quotation/update-detail.$detailId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/quotation"
    },
    "/app/businesses-rma/business/$businessId/quotation/update-subquotation/$subquotationId": {
      "filePath": "app/businesses-rma_/business.$businessId/quotation/update-subquotation.$subquotationId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/quotation"
    },
    "/app/businesses-rma/business/$businessId/assistance/$assistanceId/create-ged-directory": {
      "filePath": "app/businesses-rma_/business.$businessId_.assistance.$assistanceId/create-ged-directory/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/assistance/$assistanceId"
    },
    "/app/businesses-rma/business/$businessId/assistance/$assistanceId/create-lifesheet": {
      "filePath": "app/businesses-rma_/business.$businessId_.assistance.$assistanceId/create-lifesheet/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/assistance/$assistanceId"
    },
    "/app/businesses-rma/business/$businessId/assistance/$assistanceId/delete": {
      "filePath": "app/businesses-rma_/business.$businessId_.assistance.$assistanceId/delete/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/assistance/$assistanceId"
    },
    "/app/businesses-rma/business/$businessId/assistance/$assistanceId/edit-cumulated-time": {
      "filePath": "app/businesses-rma_/business.$businessId_.assistance.$assistanceId/edit-cumulated-time/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/assistance/$assistanceId"
    },
    "/app/businesses-rma/business/$businessId/assistance/$assistanceId/edit-no-billed-time": {
      "filePath": "app/businesses-rma_/business.$businessId_.assistance.$assistanceId/edit-no-billed-time/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/assistance/$assistanceId"
    },
    "/app/businesses-rma/business/$businessId/assistance/$assistanceId/edit-subtitle": {
      "filePath": "app/businesses-rma_/business.$businessId_.assistance.$assistanceId/edit-subtitle/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/assistance/$assistanceId"
    },
    "/app/businesses-rma/business/$businessId/assistance/$assistanceId/import-ged-files": {
      "filePath": "app/businesses-rma_/business.$businessId_.assistance.$assistanceId/import-ged-files/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/assistance/$assistanceId"
    },
    "/app/businesses-rma/business/$businessId/assistance/$assistanceId/pdf": {
      "filePath": "app/businesses-rma_/business.$businessId_.assistance.$assistanceId/pdf/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/assistance/$assistanceId",
      "children": [
        "/app/businesses-rma/business/$businessId/assistance/$assistanceId/pdf/send-by-email"
      ]
    },
    "/app/businesses-rma/rma/$rmaId/delivery/delete-detail/$detailId": {
      "filePath": "app/businesses-rma_/rma.$rmaId/delivery/delete-detail.$detailId/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/delivery"
    },
    "/app/businesses-rma/rma/$rmaId/delivery/pdf/send-by-email": {
      "filePath": "app/businesses-rma_/rma.$rmaId/delivery/pdf/send-by-email/route.tsx",
      "parent": "/app/businesses-rma/rma/$rmaId/delivery/pdf",
      "children": [
        "/app/businesses-rma/rma/$rmaId/delivery/pdf/send-by-email/predefined-messages"
      ]
    },
    "/app/businesses-rma/rma/$rmaId/delivery/update-detail/$detailId": {
      "filePath": "app/businesses-rma_/rma.$rmaId/delivery/update-detail.$detailId/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/delivery"
    },
    "/app/businesses-rma/rma/$rmaId/reception/delete-detail/$detailId": {
      "filePath": "app/businesses-rma_/rma.$rmaId/reception/delete-detail.$detailId/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/reception"
    },
    "/app/businesses-rma/rma/$rmaId/reception/pdf/send-by-email": {
      "filePath": "app/businesses-rma_/rma.$rmaId/reception/pdf/send-by-email/route.tsx",
      "parent": "/app/businesses-rma/rma/$rmaId/reception/pdf",
      "children": [
        "/app/businesses-rma/rma/$rmaId/reception/pdf/send-by-email/predefined-messages"
      ]
    },
    "/app/businesses-rma/rma/$rmaId/reception/update-detail/$detailId": {
      "filePath": "app/businesses-rma_/rma.$rmaId/reception/update-detail.$detailId/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/reception"
    },
    "/app/businesses-rma/rma/$rmaId/support/delete-detail/$detailId": {
      "filePath": "app/businesses-rma_/rma.$rmaId/support/delete-detail.$detailId/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/support"
    },
    "/app/businesses-rma/rma/$rmaId/support/delete-ged-object/$relativePath": {
      "filePath": "app/businesses-rma_/rma.$rmaId/support/delete-ged-object.$relativePath/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/support"
    },
    "/app/businesses-rma/rma/$rmaId/support/pdf/send-by-email": {
      "filePath": "app/businesses-rma_/rma.$rmaId/support/pdf/send-by-email/route.tsx",
      "parent": "/app/businesses-rma/rma/$rmaId/support/pdf"
    },
    "/app/businesses-rma/rma/$rmaId/support/rename-ged-object/$objectRelativePath": {
      "filePath": "app/businesses-rma_/rma.$rmaId/support/rename-ged-object.$objectRelativePath/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/support"
    },
    "/app/businesses-rma/rma/$rmaId/support/task-email/$taskId": {
      "filePath": "app/businesses-rma_/rma.$rmaId/support/task-email.$taskId/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/support",
      "children": [
        "/app/businesses-rma/rma/$rmaId/support/task-email/$taskId/reply"
      ]
    },
    "/app/businesses-rma/rma/$rmaId/support/update-detail/$detailId": {
      "filePath": "app/businesses-rma_/rma.$rmaId/support/update-detail.$detailId/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/support"
    },
    "/app/products/$productId/informations/task-email/$taskId/reply": {
      "filePath": "app/products_.$productId/informations/task-email.$taskId/reply/route.ts",
      "parent": "/app/products/$productId/informations/task-email/$taskId"
    },
    "/app/tools/formations/subscribers/$formationDetailId/delete/$subscriptionId": {
      "filePath": "app/tools/formations/subscribers.$formationDetailId/delete.$subscriptionId/route.ts",
      "parent": "/app/tools/formations/subscribers/$formationDetailId"
    },
    "/app/tools/formations/subscribers/$formationDetailId/send-email/$subscriptionId": {
      "filePath": "app/tools/formations/subscribers.$formationDetailId/send-email.$subscriptionId/route.ts",
      "parent": "/app/tools/formations/subscribers/$formationDetailId"
    },
    "/app/businesses-rma/business/$businessId/dashboard/address-book/delete/$addressId": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/address-book/delete.$addressId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard/address-book"
    },
    "/app/businesses-rma/business/$businessId/dashboard/address-book/update/$addressId": {
      "filePath": "app/businesses-rma_/business.$businessId/dashboard/address-book/update.$addressId/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/dashboard/address-book"
    },
    "/app/businesses-rma/business/$businessId/assistance/$assistanceId/delete-ged-object/$objectRelativePath": {
      "filePath": "app/businesses-rma_/business.$businessId_.assistance.$assistanceId/delete-ged-object.$objectRelativePath/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/assistance/$assistanceId"
    },
    "/app/businesses-rma/business/$businessId/assistance/$assistanceId/pdf/send-by-email": {
      "filePath": "app/businesses-rma_/business.$businessId_.assistance.$assistanceId/pdf/send-by-email/route.tsx",
      "parent": "/app/businesses-rma/business/$businessId/assistance/$assistanceId/pdf"
    },
    "/app/businesses-rma/business/$businessId/assistance/$assistanceId/rename-ged-object/$objectRelativePath": {
      "filePath": "app/businesses-rma_/business.$businessId_.assistance.$assistanceId/rename-ged-object.$objectRelativePath/route.ts",
      "parent": "/app/businesses-rma/business/$businessId/assistance/$assistanceId"
    },
    "/app/businesses-rma/rma/$rmaId/delivery/pdf/send-by-email/predefined-messages": {
      "filePath": "app/businesses-rma_/rma.$rmaId/delivery/pdf/send-by-email/predefined-messages/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/delivery/pdf/send-by-email"
    },
    "/app/businesses-rma/rma/$rmaId/reception/pdf/send-by-email/predefined-messages": {
      "filePath": "app/businesses-rma_/rma.$rmaId/reception/pdf/send-by-email/predefined-messages/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/reception/pdf/send-by-email"
    },
    "/app/businesses-rma/rma/$rmaId/support/task-email/$taskId/reply": {
      "filePath": "app/businesses-rma_/rma.$rmaId/support/task-email.$taskId/reply/route.ts",
      "parent": "/app/businesses-rma/rma/$rmaId/support/task-email/$taskId"
    }
  }
}
ROUTE_MANIFEST_END */
